import { IDeliveryClientConfig } from '../config';
import { IContentItem, IContentItemsContainer, IContentItemWithRawDataContainer, IContentItemWithRawElements, IMapElementsResult } from '../models';
export declare class ElementMapper<TContentItemType extends IContentItem> {
    private readonly config;
    constructor(config: IDeliveryClientConfig);
    mapElements<TContentItem extends TContentItemType = TContentItemType>(data: {
        dataToMap: IContentItemWithRawElements;
        processedItems: IContentItemsContainer<TContentItem>;
        processingStartedForCodenames: string[];
        preparedItems: IContentItemWithRawDataContainer;
    }): IMapElementsResult<TContentItem, TContentItemType> | undefined;
    private mapElement;
    private mapRichTextElement;
    private mapDateTimeElement;
    private mapMultipleChoiceElement;
    private mapNumberElement;
    private mapTextElement;
    private mapAssetsElement;
    private mapTaxonomyElement;
    private mapUnknowElement;
    private mapCustomElement;
    private mapUrlSlugElement;
    private mapLinkedItemsElement;
    private getOrSaveLinkedItemForElement;
    private mapRichTextLinks;
    private getRichTextHtml;
    private getRichTextImages;
    private buildElement;
    private canMapLinkedItems;
}
