{"version":3,"file":"kontent-management.umd.js","mappings":"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G,+BAAqB,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,2BAAiB,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,yBAAe,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,uBAAa,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,wBAAc,CAAC;IACzC,CAAC;CACJ;AA5BD,wCA4BC;;;;;;;;;;;;;;;;;ACtEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,EAAE,WAAW,EAAE,aAAa;AAC7D;AACA;AACA;AACO;AACP,yC;;;;;;;;;;;;;;;AClBO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;;;;;;ACV6B;AACG;AACD;AACE;AACjC,iC;;;;;;;;;;;;;;;;;ACJmwBAAwB,gFAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wC;;;;;;;;;;;;;;;;AChJO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACO;AACP,sC;;;;;;;;;;;;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yC;;;;;;;;;;;;;;;;;;;;;;;;AClBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0B;AACkD;AAC7B;AACO;AAC/C;AACP;AACA;AACA,qJAAqJ,8DAAW;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,wFAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA,qJAAqJ,8DAAW;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,wFAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA,qJAAqJ,8DAAW;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,wFAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA,qJAAqJ,8DAAW;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,wFAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA,qJAAqJ,8DAAW;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,wFAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAY;AAC5B;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA,sBAAsB,6CAAK;AAC3B;AACA;AACA,KAAK;AACL;AACA,+CAA+C,8DAAW,+BAA+B,IAAI,mFAAmF;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8DAAW;AAC3C;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,wDAAY;AAC5B;AACA;AACA;AACA,mDAAmD,sBAAsB,uBAAuB,uBAAuB,2BAA2B,SAAS;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4CAA4C,SAAS,iCAAiC,kBAAkB;AACxG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;AC7PU;AACV,uC;;;;;;;;;;;;;;;;;ACDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0B;AACwB;AAC3C;AACP;AACA;AACA,6BAA6B,6CAAK;AAClC;AACA;AACA;AACA;AACA,yBAAyB,8DAA+B;AACxD,SAAS;AACT;AACA;AACA;AACA,yBAAyB,+DAAgC;AACzD,SAAS;AACT;AACA;AACA;AACA,yBAAyB,8DAA+B;AACxD,SAAS;AACT;AACA;AACA;AACA,yBAAyB,gEAAiC;AAC1D,SAAS;AACT;AACA;AACA;AACA,yBAAyB,iEAAkC;AAC3D,SAAS;AACT;AACA;AACA,eAAe,8DAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACpDU;AACV,yC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDgC;AACD;AACD;AACG;AACD;AACI;AACpC,iC;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAC0B;AACD;AACF;AACvB,iC;;;;;;;;;;;;;;;;;;ACJ6B;AACD;AACC;AAC7B,iC;;;;;;;;;;;;ACHU;AACV,qC;;;;;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC,sC;;;;;;;;;;;;ACzBU;AACV,sC;;;;;;;;;;;;;;;;;;;;ACDgC;AACI;AACF;AACI;AACS;;AAE/C;AACA,QAAQ,gDAAW;AACnB,OAAO,+CAAU;AACjB,SAAS,iDAAY;AACrB;;AAEA,iDAAK;AACL;AACA;AACA,yCAAyC,MAAM;AAC/C,MAAM;AACN;AACA;AACA,8CAA8C,MAAM;AACpD;AACA,CAAC;;AAED,sCAAsC,OAAO;;AAE7C,sCAAsC,iDAAK;;AAE3C,iEAAe;AACf;AACA,eAAe,iDAAK;;AAEpB,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA,oBAAoB,YAAY;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oBAAoB,2DAAU,qBAAqB,GAAG;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,yCAAyC,IAAI;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,2DAAU;AAC1B;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC9E2C;AACZ;AACe;AACW;AACJ;AACH;AAC6D;AACxD;AACjB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,0DAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,CAAC;;AAED;;AAEA;AACA,aAAa,iDAAK;;;AAGlB;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,iDAAK;AAChD;AACA,kBAAkB,2DAAU,mBAAmB,KAAK,qBAAqB,2DAAU;AACnF,OAAO;AACP,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;;AAEA,KAAK,iDAAK;AACV;AACA;;AAEA,KAAK,iDAAK;AACV,iCAAiC,0DAAQ;AACzC;AACA;AACA,KAAK;AACL;AACA;;AAEA,KAAK,iDAAK,4BAA4B,iDAAK;AAC3C;AACA;;AAEA,KAAK,iDAAK;AACV;AACA;;AAEA,KAAK,iDAAK;AACV;AACA;AACA;;AAEA;AACA,iBAAiB,iDAAK;;AAEtB;AACA;;AAEA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,qEAAa;;AAEnB;;AAEA,uBAAuB,sEAAc;;AAErC;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA,UAAU,iDAAK;AACf;AACA;;AAEA;AACA,oCAAoC,wFAAsB;AAC1D;AACA,UAAU,sFAAoB,CAAC,gFAAc;AAC7C;;AAEA,eAAe,oEAAW;AAC1B;AACA;;AAEA,SAAS,iDAAK;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP,oCAAoC,iDAAK;;AAEzC,wDAAwD,wFAAsB;AAC9E;AACA,QAAQ,sFAAoB,CAAC,gFAAc;AAC3C;;AAEA;AACA,QAAQ,oEAAW;AACnB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,uCAAuC,iDAAK;;AAE5C;;AAEA;AACA,MAAM,2DAAM;AACZ;AACA,iBAAiB,6DAAY;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA,YAAY,2DAAU,kBAAkB,2DAAU;AAClD;AACA;AACA;AACA;AACA;;AAEA,UAAU,2DAAU;AACpB;AACA,CAAC,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClO+B;AACO;AACsB;AAChB;AACQ;AACC;AACZ;AACO;AACqB;AAChB;;AAExD;;AAEA,iEAAe;AACf;AACA,oBAAoB,qEAAa;AACjC;AACA,2BAA2B,6DAAY;AACvC,SAAS,oDAAoD;AAC7D;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,wCAAwC;;AAExC;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,2DAAM;AACZ;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,2DAAU,oBAAoB,2DAAU;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,2DAAU,kBAAkB,2DAAU;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,iEAAoB;AACvE;AACA;AACA;AACA,iBAAiB,2DAAU;AAC3B;AACA,2CAA2C,2DAAU,aAAa,2DAAU;AAC5E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,iDAAK;AACX;AACA,OAAO;AACP;;AAEA;AACA,SAAS,iDAAK;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,sFAAoB;AAChE;AACA;;AAEA;AACA;AACA,wCAAwC,sFAAoB;;AAE5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gEAAa;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qEAAa;;AAElC,oBAAoB,0DAAQ;AAC5B,iBAAiB,2DAAU,2CAA2C,2DAAU;AAChF;AACA;;;AAGA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMY;;AAEkB;AACM;AACD;AACY;AACL;AACc;AACH;AACJ;AACN;AACN;AACW;AACH;AACL;AACY;AACH;AACJ;AACW;;AAEzD;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACA;AACA,sBAAsB,sDAAK;AAC3B,mBAAmB,4DAAI,CAAC,sDAAK;;AAE7B;AACA,EAAE,iDAAK,kBAAkB,sDAAK,sBAAsB,iBAAiB;;AAErE;AACA,EAAE,iDAAK,kCAAkC,iBAAiB;;AAE1D;AACA;AACA,0BAA0B,gEAAW;AACrC;;AAEA;AACA;;AAEA;AACA,6BAA6B,0DAAQ;;AAErC;AACA,cAAc,sDAAK;;AAEnB;AACA,sBAAsB,gEAAa;AACnC,oBAAoB,8DAAW;AAC/B,iBAAiB,2DAAQ;AACzB,gBAAgB,iDAAO;AACvB,mBAAmB,+DAAU;;AAE7B;AACA,mBAAmB,4DAAU;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,2DAAM;;AAErB;AACA,qBAAqB,iEAAY;;AAEjC;AACA,oBAAoB,4DAAW;;AAE/B,qBAAqB,8DAAY;;AAEjC,4BAA4B,sEAAc,CAAC,iDAAK;;AAEhD,mBAAmB,8DAAQ;;AAE3B,uBAAuB,mEAAc;;AAErC;;AAEA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;;ACxFP;;AAEkC;;AAE/C;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,yDAAa;AACtC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;ACtId;;AAEkC;AACf;;AAEhC;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA,EAAE,2DAAU,oDAAoD,2DAAU;AAC1E;AACA;;AAEA,iDAAK,yBAAyB,2DAAU;AACxC;AACA,CAAC;;AAED,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;ACxBhB;;AAEE;AACf;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACJa;;AAEqB;AACY;AACW;AACN;AACR;AACI;AACC;AACH;;AAE7C,mBAAmB,6DAAS;;AAE5B;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB,8DAAkB;AACrC,oBAAoB,8DAAkB;AACtC;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,SAAS;AACtB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA,aAAa,2DAAW;;AAExB,WAAW,yCAAyC;;AAEpD;AACA,MAAM,6DAAS;AACf;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,UAAU,iDAAK;AACf;AACA;AACA;AACA,QAAQ;AACR,QAAQ,6DAAS;AACjB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA,IAAI,6DAAS;AACb;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,oCAAoC,iDAAK;AACzC;AACA;AACA;;AAEA,eAAe,iDAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,wDAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,qBAAqB,2DAAe;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,2DAAe;AAC/B,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,2DAAW;AACxB,qBAAqB,6DAAa;AAClC,WAAW,gEAAQ;AACnB;AACA;;AAEA;AACA,iDAAK;AACL;AACA;AACA,wBAAwB,2DAAW,aAAa;AAChD;AACA;AACA,yBAAyB;AACzB,KAAK;AACL;AACA,CAAC;;AAED,iDAAK;AACL;;AAEA;AACA;AACA,0BAA0B,2DAAW,aAAa;AAClD;AACA;AACA;AACA,UAAU,IAAI;AACd;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACjPR;;AAEmB;;AAEhC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAK;AACnB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,CAAC;;AAED;AACA,kDAAkD,YAAY;;AAE9D;AACA;AACA;;AAEA,EAAE,iDAAK;AACP;AACA,GAAG;AACH;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;ACtGb;;AAEmB;AACsB;;AAEtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,iDAAK;AACd;;AAEA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,MAAM,iDAAK;AACX;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,iDAAK;;AAEZ,MAAM,iDAAK;AACX;AACA;;AAEA,MAAM,iDAAK;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,uBAAuB,iDAAK;;AAE5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iDAAK;;AAEvB;AACA;AACA;AACA;;AAEA;AACA,MAAM,iDAAK;;AAEX,QAAQ,iDAAK;AACb;AACA,MAAM,QAAQ,iDAAK;AACnB,iBAAiB,oEAAY;AAC7B,MAAM,SAAS,iDAAK,qBAAqB,iDAAK;AAC9C,kBAAkB;AAClB;AACA,aAAa,iDAAK;AAClB;AACA;;AAEA;AACA,WAAW,iDAAK;AAChB;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iDAAK;;AAEvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,iDAAK;AACjB;AACA;;AAEA,YAAY,iDAAK;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iDAAK;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iDAAK;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,iDAAK;AACb;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,iDAAK;AACT,kBAAkB,iDAAK;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,iDAAK;AACT,sEAAsE,iDAAK;AAC3E,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAK;;AAET;AACA;AACA;;AAEA;;AAEA;AACA,iDAAK,6CAA6C,MAAM;AACxD,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iDAAK;;AAEL,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;ACzTf;;AAEqB;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA,eAAe;AACf;AACA;AACA,IAAI,iDAAK;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,iEAAe,kBAAkB,EAAC;;;;;;;;;;;;;;;;;;ACtErB;;AAE2C;AACJ;;AAEpD;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACe;AACf,uBAAuB,qEAAa;AACpC;AACA,WAAW,mEAAW;AACtB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBa;;AAEkC;AACF;AACD;AACW;AACJ;AACJ;;AAE/C;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gEAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACe;AACf;;AAEA,mBAAmB,6DAAY;;AAE/B;AACA,gBAAgB,yDAAa;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,6DAAQ,8BAA8B,0DAAQ;;AAEhE;AACA;;AAEA;AACA,oBAAoB,yDAAa;AACjC;AACA;AACA;AACA;;AAEA,uBAAuB,6DAAY;;AAEnC;AACA,GAAG;AACH,SAAS,+DAAQ;AACjB;;AAEA;AACA;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA;AACA,kCAAkC,6DAAY;AAC9C;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;AChFa;;AAEmB;AACa;;AAE7C,oDAAoD,wDAAY,KAAK,WAAW;;AAEhF;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;;AAEA;AACA,QAAQ,iDAAK,0BAA0B,iDAAK;AAC5C,aAAa,iDAAK,aAAa,SAAS;AACxC,MAAM,SAAS,iDAAK;AACpB,aAAa,iDAAK,SAAS;AAC3B,MAAM,SAAS,iDAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAK;AACd;AACA,MAAM,UAAU,iDAAK;AACrB;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAK;AACd;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAK;AACd;AACA,MAAM,UAAU,iDAAK;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,iDAAK,sBAAsB,uBAAuB;AACpD;AACA;AACA,KAAK,iDAAK;AACV,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;ACzGa;;AAE4B;;AAEzC;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;AACA,IAAI;AACJ,eAAe,sDAAU;AACzB;AACA,OAAO,sDAAU,kBAAkB,sDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1Ba;;AAEqB;AACU;AACO;;AAEnD;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA,aAAa,GAAG;AAChB;AACe;AACf,yBAAyB,0DAAQ;AACjC;AACA,kBAAkB,6DAAY;AAC9B;;AAEA,EAAE,iDAAK;AACP;AACA,GAAG;;AAEH;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3Ba;;AAEmB;AACe;AACM;AACH;AACY;AAClB;AACc;;AAE1D;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA,MAAM,iDAAK;AACX;AACA;AACA,aAAa,iDAAK;AAClB,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,gBAAgB,wDAAoB;;AAEpC;;AAEA;AACA;AACA;AACA,4BAA4B,iDAAK;;AAEjC,2BAA2B,iDAAK;AAChC;AACA;;AAEA,uBAAuB,iDAAK;;AAE5B;AACA,iDAAiD,sEAAc;AAC/D;;AAEA,QAAQ,iDAAK;AACb,MAAM,iDAAK;AACX,MAAM,iDAAK;AACX,MAAM,iDAAK;AACX,MAAM,iDAAK;AACX,MAAM,iDAAK;AACX;AACA;AACA;AACA,QAAQ,iDAAK;AACb;AACA;AACA,QAAQ,iDAAK;AACb,gEAAgE;AAChE;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,wEAAgB;AAC/B;;AAEA,wBAAwB,iDAAK;AAC7B;;AAEA,eAAe,kEAAU;AACzB,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,QAAQ,iDAAK,qBAAqB,iDAAK;AACvC;AACA;;AAEA,gBAAgB,iDAAK;AACrB;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,kBAAkB,2DAAU,SAAS,2DAAU;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,0DAAQ;AACtB,UAAU,0DAAQ;AAClB,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAK;AACL;AACA,CAAC;;AAED,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;AChKX;;AAEb,iEAAe;AACf;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACNK,yB;;;;;;;;;;;;;;;;ACAM;;AAE4B;;AAEzC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACA;AACA;;AAEA,YAAY,0DAAU;AACtB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,oBAAoB,EAAC;;;;;;;;;;;;;;;;ACzDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;ACtEjB;;AAEE;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNa;;AAEmB;AACsC;;AAEtE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B;AACA,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,iDAAK;AACX;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ,uBAAuB,iDAAK;AAC5B;AACA,UAAU,wEAAoB;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpEa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa,QA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AK;AACd,UAAU,iDAAK,sBAAsB,iDAAK,gCAAgC,iDAAK;AAC/E;AACA;AACA;;AAEA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,QAAQ,iDAAK;;AAEb;AACA;AACA;;AAEA;;AAEA,IAAI,iDAAK;AACT,uBAAuB,iDAAK;AAC5B,sBAAsB,iDAAK;AAC3B;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,OAAO,iDAAK;AACZ;AACA;;AAEA;;AAEA;AACA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;AC9Nb;;AAEmB;AACS;AACG;;AAE7B;AACf,SAAS,0DAAU,WAAW,0DAAQ;AACtC;AACA,UAAU,0DAAQ,WAAW,iDAAK;AAClC;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;ACjBO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;ACtFa;;AAE0B;AACQ;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,iDAAO;AAC/B;;AAEA;AACA;AACA;AACA,gBAAgB,2DAAU;AAC1B;AACA,QAAQ,2DAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK,6BAA6B,gBAAgB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,2DAAU,8BAA8B,2DAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAU,yCAAyC,2DAAU;AAC/E;AACA;AACA;AACA;AACA,gBAAgB,2DAAU,0BAA0B,2DAAU;AAC9D;AACA;AACA;;AAEA,iEAAe;AACf;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;AClGU;;AAEZ,iEAAe,yCAAyC;;;;;;;;;;;;;;;;ACF3C;;AAEb,iEAAe,iDAAiD,EAAC;;;;;;;;;;;;;;;;;ACFpD;;AAE+D;AAC5E,iEAAe,2DAA2D,wEAAoB,EAAC;;;;;;;;;;;;;;;;;;;ACHrC;AACd;AACR;;AAEpC,iEAAe;AACf;AACA;AACA,mBAAmB;AACnB,YAAY;AACZ,QAAQ;AACR,GAAG;AACH;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;ACZF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAQC;;;;;;;;;;;;;;;;;;AClDsC;AACI;;AAE3C,iEAAe;AACf,KAAK,6CAAK;AACV,KAAK,sDAAQ;AACb,CAAC;;;;;;;;;;;;;;;;;ACNY;;AAEwB;;AAErC;;AAEA,OAAO,UAAU;AACjB,OAAO,gBAAgB;AACvB,OAAO,uBAAuB;;AAE9B;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA,OAAO,SAAS;;AAEhB;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA,2BAA2B,oBAAoB,IAAI;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,4BAA4B;AAC5B;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kCAAkC;AAClC,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA,gCAAgC,WAAW,IAAI;AAC/C;AACA;AACA,eAAe,4DAAI;AACnB,MAAM;AACN;AACA;AACA,GAAG,GAAG,WAAW;AACjB;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,eAAe;;AAEzC;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG,WAAW,cAAc;AAC5B,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;;AAGA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;AC3wBW;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB,GAAG,wBAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,uBAAuB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;;;;;;;;;;;;AChGa;;AAEb,WAAW,mBAAO,CAAC,2CAAQ;AAC3B,0BAA0B,mBAAO,CAAC,+DAAkB,GAAG,mBAAO,CAAC,yDAAe;;;;;;;;;;;ACH9E,kBAAkB,oxyB;;;;;;;;;;ACAlB,kBAAkB,wyS;;;;;;UCAlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;UENA;UACA;UACA;UACA","sources":["webpack://kontentManagement/webpack/universalModuleDefinition","webpack://kontentManagement/./lib/client/imanagement-client.interface.ts","webpack://kontentManagement/./lib/client/index.ts","webpack://kontentManagement/./lib/client/management-client.class.ts","webpack://kontentManagement/./lib/client/management-client.factories.ts","webpack://kontentManagement/./lib/config/imanagement-client-config.interface.ts","webpack://kontentManagement/./lib/config/index.ts","webpack://kontentManagement/./lib/contracts/asset-contracts.ts","webpack://kontentManagement/./lib/contracts/asset-folder-contracts.ts","webpack://kontentManagement/./lib/contracts/asset-rendition-contracts.ts","webpack://kontentManagement/./lib/contracts/collection-contracts.ts","webpack://kontentManagement/./lib/contracts/content-item-contracts.ts","webpack://kontentManagement/./lib/contracts/content-type-contracts.ts","webpack://kontentManagement/./lib/contracts/content-type-snippet-contracts.ts","webpack://kontentManagement/./lib/contracts/custom-apps-contracts.ts","webpack://kontentManagement/./lib/contracts/element-contracts.ts","webpack://kontentManagement/./lib/contracts/environment-contracts.ts","webpack://kontentManagement/./lib/contracts/index.ts","webpack://kontentManagement/./lib/contracts/language-contracts.ts","webpack://kontentManagement/./lib/contracts/language-variant-contracts.ts","webpack://kontentManagement/./lib/contracts/preview-contracts.ts","webpack://kontentManagement/./lib/contracts/project-user-contracts.ts","webpack://kontentManagement/./lib/contracts/role-contracts.ts","webpack://kontentManagement/./lib/contracts/shared-contracts.ts","webpack://kontentManagement/./lib/contracts/space-contracts.ts","webpack://kontentManagement/./lib/contracts/subscription-contracts.ts","webpack://kontentManagement/./lib/contracts/taxonomy-contracts.ts","webpack://kontentManagement/./lib/contracts/web-spotlight-contracts.ts","webpack://kontentManagement/./lib/contracts/webhook-contracts.ts","webpack://kontentManagement/./lib/contracts/workflow-contracts.ts","webpack://kontentManagement/./lib/index.ts","webpack://kontentManagement/./lib/mappers/asset-folder-mapper.ts","webpack://kontentManagement/./lib/mappers/asset-rendition-mapper.ts","webpack://kontentManagement/./lib/mappers/assets-mapper.ts","webpack://kontentManagement/./lib/mappers/base-mapper.ts","webpack://kontentManagement/./lib/mappers/collections-mapper.ts","webpack://kontentManagement/./lib/mappers/content-items-mapper.ts","webpack://kontentManagement/./lib/mappers/content-type-mapper.ts","webpack://kontentManagement/./lib/mappers/content-type-snippet-mapper.ts","webpack://kontentManagement/./lib/mappers/custom-app-mapper.ts","webpack://kontentManagement/./lib/mappers/elements-mapper.ts","webpack://kontentManagement/./lib/mappers/environment-mapper.ts","webpack://kontentManagement/./lib/mappers/generic-mapper.ts","webpack://kontentManagement/./lib/mappers/index.ts","webpack://kontentManagement/./lib/mappers/language-mapper.ts","webpack://kontentManagement/./lib/mappers/language-variant-mapper.ts","webpack://kontentManagement/./lib/mappers/preview-mapper.ts","webpack://kontentManagement/./lib/mappers/project-user-mapper.ts","webpack://kontentManagement/./lib/mappers/role-mapper.ts","webpack://kontentManagement/./lib/mappers/space-mapper.ts","webpack://kontentManagement/./lib/mappers/subscription-mapper.ts","webpack://kontentManagement/./lib/mappers/taxonomy-mapper.ts","webpack://kontentManagement/./lib/mappers/web-spotlight-mapper.ts","webpack://kontentManagement/./lib/mappers/webhook-mapper.ts","webpack://kontentManagement/./lib/mappers/workflow-mapper.ts","webpack://kontentManagement/./lib/models/asset-folders/asset-folder.models.ts","webpack://kontentManagement/./lib/models/asset-renditions/asset-rendition.models.ts","webpack://kontentManagement/./lib/models/assets/asset-elements.builder.ts","webpack://kontentManagement/./lib/models/assets/asset.models.ts","webpack://kontentManagement/./lib/models/collections/collection.models.ts","webpack://kontentManagement/./lib/models/content-items/content-item.models.ts","webpack://kontentManagement/./lib/models/content-management-api-endpoints.ts","webpack://kontentManagement/./lib/models/content-type-snippets/content-type-snippet-elements.builder.ts","webpack://kontentManagement/./lib/models/content-type-snippets/content-type-snippets.models.ts","webpack://kontentManagement/./lib/models/content-types/content-type-elements.builder.ts","webpack://kontentManagement/./lib/models/content-types/content-type.models.ts","webpack://kontentManagement/./lib/models/custom-apps/custom-app.models.ts","webpack://kontentManagement/./lib/models/elements/content-type-element.models.ts","webpack://kontentManagement/./lib/models/elements/elements.models.ts","webpack://kontentManagement/./lib/models/environments/environment.models.ts","webpack://kontentManagement/./lib/models/identifiers.ts","webpack://kontentManagement/./lib/models/index.ts","webpack://kontentManagement/./lib/models/language-variants/language-variant-elements-builder.ts","webpack://kontentManagement/./lib/models/language-variants/language-variant.models.ts","webpack://kontentManagement/./lib/models/languages/language.models.ts","webpack://kontentManagement/./lib/models/preview/preview.models.ts","webpack://kontentManagement/./lib/models/project-users/project-users.models.ts","webpack://kontentManagement/./lib/models/query-config.models.ts","webpack://kontentManagement/./lib/models/roles/role.models.ts","webpack://kontentManagement/./lib/models/shared/shared-models.ts","webpack://kontentManagement/./lib/models/spaces/space.models.ts","webpack://kontentManagement/./lib/models/subscriptions/subscription.models.ts","webpack://kontentManagement/./lib/models/taxonomies/taxonomy.models.ts","webpack://kontentManagement/./lib/models/web-spotlight/web-spotlight.models.ts","webpack://kontentManagement/./lib/models/webhook/webhook.models.ts","webpack://kontentManagement/./lib/models/workflow/workflow.models.ts","webpack://kontentManagement/./lib/queries/asset-folders/add-asset-folders.class.ts","webpack://kontentManagement/./lib/queries/asset-folders/index.ts","webpack://kontentManagement/./lib/queries/asset-folders/list-asset-folders.class.ts","webpack://kontentManagement/./lib/queries/asset-folders/modify-asset-folders.class.ts","webpack://kontentManagement/./lib/queries/asset-renditions/add-asset-rendition-query.class.ts","webpack://kontentManagement/./lib/queries/asset-renditions/index.ts","webpack://kontentManagement/./lib/queries/asset-renditions/list-asset-renditions-query.class.ts","webpack://kontentManagement/./lib/queries/asset-renditions/modify-asset-rendition-query.class.ts","webpack://kontentManagement/./lib/queries/asset-renditions/view-assset-rendition-query.class.ts","webpack://kontentManagement/./lib/queries/assets/add-asset-query.class.ts","webpack://kontentManagement/./lib/queries/assets/delete-asset-query.class.ts","webpack://kontentManagement/./lib/queries/assets/index.ts","webpack://kontentManagement/./lib/queries/assets/list-assets-query.class.ts","webpack://kontentManagement/./lib/queries/assets/upload-asset-from-url-query.class.ts","webpack://kontentManagement/./lib/queries/assets/upload-binary-file-query.class.ts","webpack://kontentManagement/./lib/queries/assets/upsert-asset-query.class.ts","webpack://kontentManagement/./lib/queries/assets/view-assets-query.ts","webpack://kontentManagement/./lib/queries/base-listing-query.ts","webpack://kontentManagement/./lib/queries/base-query.ts","webpack://kontentManagement/./lib/queries/collections/index.ts","webpack://kontentManagement/./lib/queries/collections/list-collections-query.class.ts","webpack://kontentManagement/./lib/queries/collections/set-collections-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/add-content-item-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/delete-content-item-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/index.ts","webpack://kontentManagement/./lib/queries/content-items/list-content-items-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/update-content-item-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/upsert-content-item-query.class.ts","webpack://kontentManagement/./lib/queries/content-items/view-content-item-query.class.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/add-content-type-snippet-query.class.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/delete-content-type-snippet-query.class.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/index.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/list-content-type-snippets-query.class.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/modify-content-type-snippet-query.class.ts","webpack://kontentManagement/./lib/queries/content-type-snippets/view-content-type-snippet-query.class.ts","webpack://kontentManagement/./lib/queries/content-types/add-content-type-query.class.ts","webpack://kontentManagement/./lib/queries/content-types/delete-content-type-query.class.ts","webpack://kontentManagement/./lib/queries/content-types/index.ts","webpack://kontentManagement/./lib/queries/content-types/list-content-types-query.class.ts","webpack://kontentManagement/./lib/queries/content-types/modify-content-type-query.class.ts","webpack://kontentManagement/./lib/queries/content-types/view-content-type-query.class.ts","webpack://kontentManagement/./lib/queries/custom-apps/add-custom-app-query.class.ts","webpack://kontentManagement/./lib/queries/custom-apps/delete-custom-app-query.class.ts","webpack://kontentManagement/./lib/queries/custom-apps/get-custom-app-query.class.ts","webpack://kontentManagement/./lib/queries/custom-apps/index.ts","webpack://kontentManagement/./lib/queries/custom-apps/list-custom-apps-query.class.ts","webpack://kontentManagement/./lib/queries/custom-apps/modify-custom-app-query.ts","webpack://kontentManagement/./lib/queries/environments/check-environment-validation-query.class.ts","webpack://kontentManagement/./lib/queries/environments/clone-environment-query.ts","webpack://kontentManagement/./lib/queries/environments/delete-environment-query.ts","webpack://kontentManagement/./lib/queries/environments/environment-information-query.class.ts","webpack://kontentManagement/./lib/queries/environments/get-environment-cloning-state-query.ts","webpack://kontentManagement/./lib/queries/environments/index.ts","webpack://kontentManagement/./lib/queries/environments/list-project-validation-issues-query.class.ts","webpack://kontentManagement/./lib/queries/environments/mark-environment-as-production-query.ts","webpack://kontentManagement/./lib/queries/environments/modify-environment-query.ts","webpack://kontentManagement/./lib/queries/environments/start-project-validation-query.class.ts","webpack://kontentManagement/./lib/queries/generic/delete-query.class.ts","webpack://kontentManagement/./lib/queries/generic/get-query.class.ts","webpack://kontentManagement/./lib/queries/generic/index.ts","webpack://kontentManagement/./lib/queries/generic/patch-query.class.ts","webpack://kontentManagement/./lib/queries/generic/post-query.class.ts","webpack://kontentManagement/./lib/queries/generic/put-query.class.ts","webpack://kontentManagement/./lib/queries/index.ts","webpack://kontentManagement/./lib/queries/language-variants/delete-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/filter-language-variants-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/index.ts","webpack://kontentManagement/./lib/queries/language-variants/list-language-variants-by-collection-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/list-language-variants-by-space-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/list-language-variants-of-content-type-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/list-language-variants-of-content-type-with-components-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/list-language-variants-of-item-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/upsert-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/language-variants/view-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/languages/add-language-query.class.ts","webpack://kontentManagement/./lib/queries/languages/index.ts","webpack://kontentManagement/./lib/queries/languages/list-languages-query.class.ts","webpack://kontentManagement/./lib/queries/languages/modify-language-query.class.ts","webpack://kontentManagement/./lib/queries/languages/view-language-query.class.ts","webpack://kontentManagement/./lib/queries/preview/get-preview-configuration-query.class.ts","webpack://kontentManagement/./lib/queries/preview/index.ts","webpack://kontentManagement/./lib/queries/preview/modify-preview-configuration-query.class.ts","webpack://kontentManagement/./lib/queries/project-users/change-user-roles-query.class.ts","webpack://kontentManagement/./lib/queries/project-users/index.ts","webpack://kontentManagement/./lib/queries/project-users/invite-user-query.class.ts","webpack://kontentManagement/./lib/queries/roles/index.ts","webpack://kontentManagement/./lib/queries/roles/list-roles-query.class.ts","webpack://kontentManagement/./lib/queries/roles/view-role-query.class.ts","webpack://kontentManagement/./lib/queries/spaces/add-space-query.class.ts","webpack://kontentManagement/./lib/queries/spaces/delete-space-query.class.ts","webpack://kontentManagement/./lib/queries/spaces/index.ts","webpack://kontentManagement/./lib/queries/spaces/list-spaces-query.class.ts","webpack://kontentManagement/./lib/queries/spaces/modify-space-query.class.ts","webpack://kontentManagement/./lib/queries/spaces/view-space-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/activate-user-in-all-projects-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/deactivate-user-in-all-projects-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/index.ts","webpack://kontentManagement/./lib/queries/subscriptions/list-subscription-projects-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/list-subscription-users-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/view-subscription-project-query.class.ts","webpack://kontentManagement/./lib/queries/subscriptions/view-subscription-user-query.class.ts","webpack://kontentManagement/./lib/queries/taxonomies/add-taxonomy-query.class.ts","webpack://kontentManagement/./lib/queries/taxonomies/delete-taxonomy-query.class.ts","webpack://kontentManagement/./lib/queries/taxonomies/get-taxonomy-query.class.ts","webpack://kontentManagement/./lib/queries/taxonomies/index.ts","webpack://kontentManagement/./lib/queries/taxonomies/list-taxonomies-query.class.ts","webpack://kontentManagement/./lib/queries/taxonomies/modify-taxonomy-query.class.ts","webpack://kontentManagement/./lib/queries/web-spotlight/activate-web-spotlight-query.class.ts","webpack://kontentManagement/./lib/queries/web-spotlight/check-web-spotlight-status-query.class.ts","webpack://kontentManagement/./lib/queries/web-spotlight/deactivate-web-spotlight-query.class.ts","webpack://kontentManagement/./lib/queries/web-spotlight/index.ts","webpack://kontentManagement/./lib/queries/webhooks/add-legacy-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/add-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/delete-legacy-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/delete-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/disable-legacy-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/disable-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/enable-legacy-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/enable-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/get-legacy-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/get-webhook-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/index.ts","webpack://kontentManagement/./lib/queries/webhooks/list-legacy-webhooks-query.class.ts","webpack://kontentManagement/./lib/queries/webhooks/list-webhooks-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/add-workflow-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/cancel-scheduled-publishing-of-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/cancel-scheduled-unpublishing-of-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/change-workflow-of-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/create-new-version-of-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/delete-workflow-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/index.ts","webpack://kontentManagement/./lib/queries/workflow/list-workflows-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/publish-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/unpublish-language-variant-query.class.ts","webpack://kontentManagement/./lib/queries/workflow/update-workflow-query.class.ts","webpack://kontentManagement/./lib/query-builders/action-query.class.ts","webpack://kontentManagement/./lib/query-builders/asset-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/collection-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/content-item-external-id-identifier.class.ts","webpack://kontentManagement/./lib/query-builders/content-item-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/content-type-codename-and-id-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/content-type-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/custom-apps-identifier.query.ts","webpack://kontentManagement/./lib/query-builders/data-query-optional.class.ts","webpack://kontentManagement/./lib/query-builders/data-query.class.ts","webpack://kontentManagement/./lib/query-builders/environment-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/id-and-external-id-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/id-codename-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/index.ts","webpack://kontentManagement/./lib/query-builders/language-id-and-codename-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/language-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/rendition-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/role-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/space-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/task-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/taxonomy-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/user-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/webhook-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/workflow-identifier-query.class.ts","webpack://kontentManagement/./lib/query-builders/workflow-step-identifier-query.class.ts","webpack://kontentManagement/./lib/responses/asset-folders/asset-folder-responses.ts","webpack://kontentManagement/./lib/responses/asset-renditions/asset-rendition-responses.ts","webpack://kontentManagement/./lib/responses/assets/asset-responses.ts","webpack://kontentManagement/./lib/responses/base-responses.ts","webpack://kontentManagement/./lib/responses/collections/collection-responses.ts","webpack://kontentManagement/./lib/responses/content-items/content-item-responses.ts","webpack://kontentManagement/./lib/responses/content-type-snippets/content-type-snippet-responses.ts","webpack://kontentManagement/./lib/responses/content-types/content-type-responses.ts","webpack://kontentManagement/./lib/responses/custom-apps/custom-apps.responses.ts","webpack://kontentManagement/./lib/responses/environments/environment-responses.ts","webpack://kontentManagement/./lib/responses/generic/generic-responses.ts","webpack://kontentManagement/./lib/responses/index.ts","webpack://kontentManagement/./lib/responses/language-variants/language-variant-responses.ts","webpack://kontentManagement/./lib/responses/languages/language-responses.ts","webpack://kontentManagement/./lib/responses/preview/preview-responses.ts","webpack://kontentManagement/./lib/responses/project-users/project-users-responses.ts","webpack://kontentManagement/./lib/responses/roles/role-responses.ts","webpack://kontentManagement/./lib/responses/spaces/space-responses.ts","webpack://kontentManagement/./lib/responses/subscriptions/subscription-responses.ts","webpack://kontentManagement/./lib/responses/taxonomies/taxonomy-responses.ts","webpack://kontentManagement/./lib/responses/web-spotlight/web-spotlight-responses.ts","webpack://kontentManagement/./lib/responses/webhook/webhook-responses.ts","webpack://kontentManagement/./lib/responses/workflow/workflow-responses.ts","webpack://kontentManagement/./lib/sdk-info.generated.ts","webpack://kontentManagement/./lib/services/base-management-service.class.ts","webpack://kontentManagement/./lib/services/index.ts","webpack://kontentManagement/./lib/services/management-query-service.class.ts","webpack://kontentManagement/./lib/services/mapping-service.class.ts","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/header.helper.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/headers-helper.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/index.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/retry-helper.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/url.helper.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.debugger.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.functions.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.models.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.service.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/ihttp.service.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/index.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/http/test-http.service.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/index.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/models/index.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/models/isdk-info.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/models/parameters.js","webpack://kontentManagement/./node_modules/@kontent-ai/core-sdk/dist/es6/models/url.models.js","webpack://kontentManagement/./node_modules/axios/lib/adapters/adapters.js","webpack://kontentManagement/./node_modules/axios/lib/adapters/fetch.js","webpack://kontentManagement/./node_modules/axios/lib/adapters/xhr.js","webpack://kontentManagement/./node_modules/axios/lib/axios.js","webpack://kontentManagement/./node_modules/axios/lib/cancel/CancelToken.js","webpack://kontentManagement/./node_modules/axios/lib/cancel/CanceledError.js","webpack://kontentManagement/./node_modules/axios/lib/cancel/isCancel.js","webpack://kontentManagement/./node_modules/axios/lib/core/Axios.js","webpack://kontentManagement/./node_modules/axios/lib/core/AxiosError.js","webpack://kontentManagement/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://kontentManagement/./node_modules/axios/lib/core/InterceptorManager.js","webpack://kontentManagement/./node_modules/axios/lib/core/buildFullPath.js","webpack://kontentManagement/./node_modules/axios/lib/core/dispatchRequest.js","webpack://kontentManagement/./node_modules/axios/lib/core/mergeConfig.js","webpack://kontentManagement/./node_modules/axios/lib/core/settle.js","webpack://kontentManagement/./node_modules/axios/lib/core/transformData.js","webpack://kontentManagement/./node_modules/axios/lib/defaults/index.js","webpack://kontentManagement/./node_modules/axios/lib/defaults/transitional.js","webpack://kontentManagement/./node_modules/axios/lib/env/data.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/bind.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/buildURL.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/combineURLs.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/composeSignals.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/cookies.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/null.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/speedometer.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/spread.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/throttle.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/toFormData.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/trackStream.js","webpack://kontentManagement/./node_modules/axios/lib/helpers/validator.js","webpack://kontentManagement/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://kontentManagement/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://kontentManagement/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://kontentManagement/./node_modules/axios/lib/platform/browser/index.js","webpack://kontentManagement/./node_modules/axios/lib/platform/common/utils.js","webpack://kontentManagement/./node_modules/axios/lib/platform/index.js","webpack://kontentManagement/./node_modules/axios/lib/utils.js","webpack://kontentManagement/./node_modules/mime/Mime.js","webpack://kontentManagement/./node_modules/mime/index.js","webpack://kontentManagement/./node_modules/mime/types/other.js","webpack://kontentManagement/./node_modules/mime/types/standard.js","webpack://kontentManagement/webpack/bootstrap","webpack://kontentManagement/webpack/runtime/define property getters","webpack://kontentManagement/webpack/runtime/hasOwnProperty shorthand","webpack://kontentManagement/webpack/runtime/make namespace object","webpack://kontentManagement/webpack/before-startup","webpack://kontentManagement/webpack/startup","webpack://kontentManagement/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kontentManagement\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kontentManagement\"] = factory();\n\telse\n\t\troot[\"kontentManagement\"] = factory();\n})(self, () => {\nreturn ","import { IHttpCancelRequestToken } from '@kontent-ai/core-sdk';\r\nimport { ContentItemContracts, LanguageVariantContracts } from '../contracts';\r\nimport {\r\n    AssetElementsBuilder,\r\n    AssetFolderModels,\r\n    AssetModels,\r\n    AssetRenditionModels,\r\n    CollectionModels,\r\n    ContentTypeElementsBuilder,\r\n    ContentTypeModels,\r\n    ContentTypeSnippetElements,\r\n    ContentTypeSnippetModels,\r\n    CustomAppModels,\r\n    LanguageModels,\r\n    LanguageVariantElementsBuilder,\r\n    PreviewModels,\r\n    ProjectUserModels,\r\n    SpaceModels,\r\n    TaxonomyModels,\r\n    WebhookModels,\r\n    WebSpotlightModels,\r\n    WorkflowModels\r\n} from '../models';\r\nimport {\r\n    ViewSubscriptionUserQuery,\r\n    ActionQuery,\r\n    AddAssetFoldersQuery,\r\n    AddAssetQuery,\r\n    AddContentItemQuery,\r\n    AddContentTypeQuery,\r\n    AddContentTypeSnippetQuery,\r\n    AddLanguageQuery,\r\n    AddSpaceQuery,\r\n    AddTaxonomyQuery,\r\n    AddLegacyWebhookQuery,\r\n    AddWebhookQuery,\r\n    AssetIdentifierQuery,\r\n    CancelScheduledPublishingOfLanguageVariantQuery,\r\n    CancelScheduledUnpublishingOfLanguageVariantQuery,\r\n    ContentItemIdentifierQuery,\r\n    ContentTypeCodenameAndIdIdentifierQuery,\r\n    ContentTypeIdentifierQuery,\r\n    CreateNewVersionOfLanguageVariantQuery,\r\n    DataQuery,\r\n    DataQueryOptional,\r\n    DeleteAssetQuery,\r\n    DeleteContentItemQuery,\r\n    DeleteContentTypeQuery,\r\n    DeleteContentTypeSnippetQuery,\r\n    DeleteLanguageVariantQuery,\r\n    DeleteSpaceQuery,\r\n    DeleteQuery,\r\n    DeleteTaxonomyQuery,\r\n    DeleteWebhookQuery,\r\n    DeleteLegacyWebhookQuery,\r\n    GetQuery,\r\n    GetTaxonomyQuery,\r\n    GetWebhookQuery,\r\n    GetLegacyWebhookQuery,\r\n    LanguageIdAndCodenameIdentifierQuery,\r\n    LanguageIdentifierQuery,\r\n    ListAssetFoldersQuery,\r\n    ListAssetsQuery,\r\n    ListContentItemsQuery,\r\n    ListContentTypeSnippetsQuery,\r\n    ListContentTypesQuery,\r\n    ListLanguagesQuery,\r\n    ListLanguageVariantsOfContentTypeQuery,\r\n    ListLanguageVariantsOfContentTypeWithComponentsQuery,\r\n    ListLanguageVariantsOfItemQuery,\r\n    ListLanguageVariantsBySpaceQuery,\r\n    ListSpacesQuery,\r\n    ListTaxonomiesQuery,\r\n    ListLegacyWebhooksQuery,\r\n    ListWebhooksQuery,\r\n    ModifyAssetFoldersQuery,\r\n    ModifyContentTypeQuery,\r\n    ModifyContentTypeSnippetQuery,\r\n    ModifyLanguageQuery,\r\n    ModifySpaceQuery,\r\n    ModifyTaxonomyQuery,\r\n    PatchQuery,\r\n    PostQuery,\r\n    EnvironmentIdentifierQuery,\r\n    EnvironmentInformationQuery,\r\n    PublishLanguageVariantQuery,\r\n    PutQuery,\r\n    SpaceIdentifierQuery,\r\n    TaxonomyIdentifierQuery,\r\n    UnpublishLanguageVariantQuery,\r\n    UpdateContentItemQuery,\r\n    UploadBinaryFileQuery,\r\n    UpsertAssetQuery,\r\n    UpsertContentItemQuery,\r\n    UpsertLanguageVariantQuery,\r\n    ViewAssetsQuery,\r\n    ViewContentItemQuery,\r\n    ViewContentTypeQuery,\r\n    ViewContentTypeSnippetQuery,\r\n    ViewLanguageQuery,\r\n    ViewLanguageVariantQuery,\r\n    ViewSpaceQuery,\r\n    WebhookIdentifierQuery,\r\n    EnableLegacyWebhookQuery,\r\n    EnableWebhookQuery,\r\n    DisableLegacyWebhookQuery,\r\n    DisableWebhookQuery,\r\n    ListCollectionsQuery,\r\n    CollectionIdentifierQuery,\r\n    ListLanguageVariantsByCollectionQuery,\r\n    SetCollectionsQuery,\r\n    UploadAssetFromUrlQuery,\r\n    ListSubscriptionProjectsQuery,\r\n    ViewSubscriptionProjectQuery,\r\n    ListSubscriptionUsersQuery,\r\n    UserIdentifierQuery,\r\n    ActivateUserInAllProjectsQuery,\r\n    DeactivateUserInAllProjectsQuery,\r\n    ListRolesQuery,\r\n    InviteProjectUserQuery,\r\n    ChangeUserRolesQuery,\r\n    RoleIdentifierQuery,\r\n    ViewRoleQuery,\r\n    ListAssetRenditionsQuery,\r\n    AddAssetRenditionQuery,\r\n    ModifyAssetRenditionQuery,\r\n    RenditionIdentifierQuery,\r\n    ViewAssetRenditionQuery,\r\n    ChangeWorkflowOfLanguageOrVariantQuery,\r\n    ListWorkflowsQuery,\r\n    WorkflowIdentifierQuery,\r\n    DeleteWorkflowQuery,\r\n    AddWorkflowQuery,\r\n    UpdateWorkflowQuery,\r\n    StartEnvironmentValidationQuery,\r\n    TaskIdentifierQuery,\r\n    CheckEnvironmentValidationQuery,\r\n    ListEnvironmentValidationIssuesQuery,\r\n    GetPreviewConfigurationQuery,\r\n    ModifyPreviewConfigurationQuery,\r\n    ActivateWebSpotlightQuery,\r\n    DeactivateWebSpotlightQuery,\r\n    CheckWebSpotlightStatusQuery,\r\n    AddCustomAppQuery,\r\n    CustomAppsIdentifierQuery,\r\n    GetCustomAppQuery,\r\n    ListCustomAppsQuery,\r\n    ModifyCustomAppQuery,\r\n    DeleteCustomAppQuery,\r\n    FilterLanguageVariantsQuery\r\n} from '../queries';\r\nimport { IMappingService } from '../services';\r\nimport { GetEnvironmentCloningStateQuery } from '../queries/environments';\r\nimport { DeleteEnvironmentQuery } from '../queries/environments/delete-environment-query';\r\nimport { EnvironmentModels } from '../models/environments/environment.models';\r\nimport { CloneEnvironmentQuery } from '../queries/environments/clone-environment-query';\r\nimport { MarkEnvironmentAsProductionQuery } from '../queries/environments/mark-environment-as-production-query';\r\nimport { ModifyEnvironmentQuery } from '../queries/environments/modify-environment-query';\r\nimport { LanguageVariantModels } from '../models';\r\n\r\nexport interface IEarlyAccess {\r\n    filterLanguageVariants(): DataQuery<FilterLanguageVariantsQuery, LanguageVariantModels.IFilterLanguageVariantsData>\r\n}\r\n\r\nexport interface IManagementClient<TCancelToken> {\r\n    mappingService: IMappingService;\r\n\r\n    /**\r\n     * Early access queries. Use with caution as these are not yet stable and may change.\r\n     */\r\n    earlyAccess: IEarlyAccess;\r\n\r\n    /**\r\n     * Creates cancel token\r\n     */\r\n    createCancelToken(): IHttpCancelRequestToken<TCancelToken>;\r\n\r\n    /**\r\n     * Custom post query\r\n     */\r\n    post(): ActionQuery<DataQuery<PostQuery, any>>;\r\n\r\n    /**\r\n     * Custom post query\r\n     */\r\n    patch(): ActionQuery<DataQuery<PatchQuery, any>>;\r\n\r\n    /**\r\n     * Custom post query\r\n     */\r\n    delete(): ActionQuery<DeleteQuery>;\r\n\r\n    /**\r\n     * Custom get query\r\n     */\r\n    get(): ActionQuery<GetQuery>;\r\n\r\n    /**\r\n     * Custom put query\r\n     */\r\n    put(): ActionQuery<DataQuery<PutQuery, any>>;\r\n\r\n    /**\r\n     * Create a new version of a published language variant while keeping the original version published and available through Delivery API. Equivalent to the UI action of creating new versions of content.\r\n     */\r\n    createNewVersionOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>\r\n    >;\r\n\r\n    /**\r\n     * Unpublish a language variant to make it no longer accessible through Delivery API. Equivalent to the UI action of unpublishing content.\r\n     * You can only unpublish language variants that are published and don't already have a Draft (unpublished) version.\r\n     */\r\n    unpublishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n        >\r\n    >;\r\n\r\n    /**\r\n     * The Management API ignores the workflow transition limitations present in the UI. This means you can change the workflow step of the language variant from any step to any other step excluding Published or Scheduled.\r\n     */\r\n    changeWorkflowOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<ChangeWorkflowOfLanguageOrVariantQuery, WorkflowModels.IChangeWorkflowOfLanguageVariantData>\r\n        >\r\n    >;\r\n\r\n    /**\r\n     * Lists all workflows in environment\r\n     */\r\n    listWorkflows(): ListWorkflowsQuery;\r\n\r\n    /**\r\n     * Deletes an unused workflow from your environment.\r\n     */\r\n    deleteWorkflow(): WorkflowIdentifierQuery<DeleteWorkflowQuery>;\r\n\r\n    /**\r\n     * Updates workflow\r\n     */\r\n    updateWorkflow(): WorkflowIdentifierQuery<DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>>;\r\n\r\n    /**\r\n     * Create a new workflow.\r\n     */\r\n    addWorkflow(): DataQuery<AddWorkflowQuery, WorkflowModels.IAddWorkflowData>;\r\n\r\n    /**\r\n     * Cancel scheduled unpublishing of the specified language variant.\r\n     */\r\n    cancelSheduledUnpublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>\r\n    >;\r\n\r\n    /**\r\n     * Cancel scheduling of a language variant. Equivalent to the UI action of canceling scheduled content. If the language variant is not scheduled, nothing happens.\r\n     */\r\n    cancelSheduledPublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>\r\n    >;\r\n\r\n    /**\r\n     * Change the workflow step of the specified language variant to \"Published\" or schedule publishing at the specified time.\r\n     */\r\n    publishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n        >\r\n    >;\r\n\r\n    /**\r\n     * Query to view content type snippet\r\n     */\r\n    viewContentTypeSnippet(): ContentTypeIdentifierQuery<ViewContentTypeSnippetQuery>;\r\n\r\n    /**\r\n     * Query to list content types\r\n     */\r\n    listContentTypeSnippets(): ListContentTypeSnippetsQuery;\r\n\r\n    /**\r\n     * Query to delete content type snippet\r\n     */\r\n    deleteContentTypeSnippet(): ContentTypeIdentifierQuery<DeleteContentTypeSnippetQuery>;\r\n\r\n    /**\r\n     * Query to add new content type snippet\r\n     */\r\n    addContentTypeSnippet(): DataQuery<\r\n        AddContentTypeSnippetQuery,\r\n        (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData\r\n    >;\r\n\r\n    /**\r\n     * Query to modify content type\r\n     */\r\n    modifyContentType(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>\r\n    >;\r\n\r\n    /**\r\n     * Query to modify taxonomy\r\n     */\r\n    modifyTaxonomy(): TaxonomyIdentifierQuery<DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>>;\r\n\r\n    /**\r\n     * Query to modify content type snippet\r\n     */\r\n    modifyContentTypeSnippet(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>\r\n    >;\r\n\r\n    /**\r\n     * Query to view language variant\r\n     */\r\n    viewLanguageVariant(): ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>>;\r\n\r\n    /**\r\n     * Query to upsert language variant\r\n     */\r\n    upsertLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<\r\n                UpsertLanguageVariantQuery,\r\n                (builder: LanguageVariantElementsBuilder) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n            >\r\n        >\r\n    >;\r\n\r\n    /**\r\n     * Query to delete language variant\r\n     */\r\n    deleteLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>\r\n    >;\r\n\r\n    /**\r\n     * Starts validating the specified environment to check for issues such as:\r\n     * - Nonexistent objects referenced in content items.\r\n     * - Content element values don't meet the limitations configured in content types.\r\n     * - Content types referencing nonexistent taxonomy groups.\r\n     * Depending on the size of your environment, the validation might take several minutes.\r\n     * After you start the environment validation, you get a validation task.\r\n     * With the validation task, you can check validation progress and list validation results once the validation is finished.\r\n     */\r\n    startEnvironmentValidation(): StartEnvironmentValidationQuery;\r\n\r\n    /**\r\n     * Retrieves information about a environment validation task by the task's internal ID.\r\n     */\r\n    checkEnvironmentValidation(): TaskIdentifierQuery<CheckEnvironmentValidationQuery>;\r\n\r\n    /**\r\n     * Retrieves a paginated list of environment validation issues.\r\n     */\r\n    listEnvironmentValidationIssues(): TaskIdentifierQuery<ListEnvironmentValidationIssuesQuery>;\r\n\r\n    /**\r\n     * Query to delete content type\r\n     */\r\n    deleteContentType(): ContentTypeIdentifierQuery<DeleteContentTypeQuery>;\r\n\r\n    /**\r\n     * Query to add new content type\r\n     */\r\n    addContentType(): DataQuery<\r\n        AddContentTypeQuery,\r\n        (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData\r\n    >;\r\n\r\n    /**\r\n     * Query to view content type\r\n     */\r\n    viewContentType(): ContentTypeIdentifierQuery<ViewContentTypeQuery>;\r\n\r\n    /**\r\n     * Query to list content types\r\n     */\r\n    listContentTypes(): ListContentTypesQuery;\r\n\r\n    /**\r\n     * Query to delete a taxonomy\r\n     */\r\n    deleteTaxonomy(): TaxonomyIdentifierQuery<DeleteTaxonomyQuery>;\r\n\r\n    /**\r\n     * Query to add a taxonomy\r\n     */\r\n    addTaxonomy(): DataQuery<AddTaxonomyQuery, TaxonomyModels.IAddTaxonomyRequestModel>;\r\n\r\n    /**\r\n     * Query to list taxonomies\r\n     */\r\n    listTaxonomies(): ListTaxonomiesQuery;\r\n\r\n    /**\r\n     * Query to view taxonomy\r\n     */\r\n    getTaxonomy(): TaxonomyIdentifierQuery<GetTaxonomyQuery>;\r\n\r\n    /**\r\n     * Query to delete an asset\r\n     */\r\n    deleteAsset(): AssetIdentifierQuery<DeleteAssetQuery>;\r\n\r\n    /**\r\n     * Query to upsert an asset from uploaded binary file\r\n     */\r\n    upsertAsset(): AssetIdentifierQuery<\r\n        DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>\r\n    >;\r\n\r\n    /**\r\n     * Query to add an asset from uploaded binary file\r\n     */\r\n    addAsset(): DataQuery<AddAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData>;\r\n\r\n    /**\r\n     * Query to upload file\r\n     */\r\n    uploadBinaryFile(): DataQuery<UploadBinaryFileQuery, AssetModels.IUploadBinaryFileRequestData>;\r\n\r\n    /**\r\n     * Query to view asset\r\n     */\r\n    viewAsset(): AssetIdentifierQuery<ViewAssetsQuery>;\r\n\r\n    /**\r\n     * Query for listing assets\r\n     */\r\n    listAssets(): ListAssetsQuery;\r\n\r\n    /**\r\n     * List of content items query\r\n     */\r\n    listContentItems(): ListContentItemsQuery;\r\n\r\n    /**\r\n     * View content item query\r\n     */\r\n    viewContentItem(): ContentItemIdentifierQuery<ViewContentItemQuery>;\r\n\r\n    /**\r\n     * Add content item query\r\n     */\r\n    addContentItem(): DataQuery<AddContentItemQuery, ContentItemContracts.IAddContentItemPostContract>;\r\n\r\n    /**\r\n     * Update content item query\r\n     */\r\n    updateContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>\r\n    >;\r\n\r\n    /**\r\n     * Upsert content item query\r\n     */\r\n    upsertContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>\r\n    >;\r\n\r\n    /**\r\n     * Delete content item query\r\n     */\r\n    deleteContentItem(): ContentItemIdentifierQuery<DeleteContentItemQuery>;\r\n\r\n    /**\r\n     * List language variants of a specific content item query\r\n     */\r\n    listLanguageVariantsOfItem(): ContentItemIdentifierQuery<ListLanguageVariantsOfItemQuery>;\r\n\r\n    /**\r\n     * List language variants of a specific content type query\r\n     */\r\n    listLanguageVariantsOfContentType(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeQuery>;\r\n\r\n    /**\r\n     * List language variants of a specific content type with components\r\n     */\r\n    listLanguageVariantsOfContentTypeWithComponents(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeWithComponentsQuery>;\r\n\r\n    /**\r\n     * List languages in environment\r\n     */\r\n    listLanguages(): ListLanguagesQuery;\r\n\r\n    /**\r\n     * View language\r\n     */\r\n    viewLanguage(): LanguageIdentifierQuery<ViewLanguageQuery>;\r\n\r\n    /**\r\n     * Adds new language\r\n     */\r\n    addLanguage(): DataQuery<AddLanguageQuery, LanguageModels.IAddLanguageData>;\r\n\r\n    /**\r\n     * Modifies existing language\r\n     */\r\n    modifyLanguage(): LanguageIdentifierQuery<DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>>;\r\n\r\n    /**\r\n     * Delete a webhook\r\n     */\r\n    deleteWebhook(): WebhookIdentifierQuery<DeleteWebhookQuery>;\r\n\r\n    /**\r\n     * Adds new webhook\r\n     */\r\n    addWebhook(): DataQuery<AddWebhookQuery, WebhookModels.IAddWebhookData>;\r\n\r\n    /**\r\n     * Gets single webhook\r\n     */\r\n    getWebhook(): WebhookIdentifierQuery<GetWebhookQuery>;\r\n\r\n    /**\r\n     * Enables webhook\r\n     */\r\n    enableWebhook(): WebhookIdentifierQuery<EnableWebhookQuery>;\r\n\r\n    /**\r\n     * Disables webhook\r\n     */\r\n    disableWebhook(): WebhookIdentifierQuery<DisableWebhookQuery>;\r\n\r\n    /**\r\n     * Gets all webhooks\r\n     */\r\n    listWebhooks(): ListWebhooksQuery;\r\n\r\n    /**\r\n     * Delete a legacy webhook\r\n     */\r\n    deleteLegacyWebhook(): WebhookIdentifierQuery<DeleteLegacyWebhookQuery>;\r\n\r\n    /**\r\n     * Adds new legacy webhook\r\n     */\r\n    addLegacyWebhook(): DataQuery<AddLegacyWebhookQuery, WebhookModels.IAddLegacyWebhookData>;\r\n\r\n    /**\r\n     * Gets single legacy webhook\r\n     */\r\n    getLegacyWebhook(): WebhookIdentifierQuery<GetLegacyWebhookQuery>;\r\n\r\n    /**\r\n     * Enableslegacy webhook\r\n     */\r\n    enableLegacyWebhook(): WebhookIdentifierQuery<EnableLegacyWebhookQuery>;\r\n\r\n    /**\r\n     * Disables legacy webhook\r\n     */\r\n    disableLegacyWebhook(): WebhookIdentifierQuery<DisableLegacyWebhookQuery>;\r\n\r\n    /**\r\n     * Gets all legacy webhooks\r\n     */\r\n    listLegacyWebhooks(): ListLegacyWebhooksQuery;\r\n\r\n    /**\r\n     * Query to get environment information\r\n     */\r\n    environmentInformation(): EnvironmentInformationQuery;\r\n\r\n    /**\r\n     * Query to list asset folders\r\n     */\r\n    listAssetFolders(): ListAssetFoldersQuery;\r\n\r\n    /**\r\n     * Query to add asset folders\r\n     */\r\n    addAssetFolders(): DataQuery<AddAssetFoldersQuery, AssetFolderModels.IAddAssetFoldersData>;\r\n\r\n    /**\r\n     * Query to modify asset folders\r\n     */\r\n    modifyAssetFolders(): DataQuery<ModifyAssetFoldersQuery, AssetFolderModels.IModifyAssetFolderData[]>;\r\n\r\n    /**\r\n     * Query to list collections\r\n     */\r\n    listCollections(): ListCollectionsQuery;\r\n\r\n    /**\r\n     * Query to list language variants of given collection\r\n     */\r\n    listLanguageVariantsByCollection(): CollectionIdentifierQuery<ListLanguageVariantsByCollectionQuery>;\r\n\r\n    /**\r\n     * Query to list language variants of given space\r\n     */\r\n    listLanguageVariantsBySpace(): SpaceIdentifierQuery<ListLanguageVariantsBySpaceQuery>;\r\n\r\n    /**\r\n     * Query to set collections\r\n     */\r\n    setCollections(): DataQuery<SetCollectionsQuery, CollectionModels.ISetCollectionData[]>;\r\n\r\n    /**\r\n     * Helper methods that uploads file from url, creates binary file & asset in one go\r\n     */\r\n    uploadAssetFromUrl(): DataQuery<UploadAssetFromUrlQuery, AssetModels.IUploadAssetFromUrlRequestData>;\r\n\r\n    /**\r\n     * Creates edit urls according to https://docs.kontent.ai/tutorials/develop-apps/build-strong-foundation/set-up-editing-from-preview\r\n     */\r\n    createLanguageVariantEditUrl(data: {\r\n        variantId: string;\r\n        languageCodename: string;\r\n        elementCodename?: string;\r\n        nestedItemId?: string;\r\n        nestedItemElementCodename?: string;\r\n    }): string;\r\n\r\n    /**\r\n     * Query to list projects in given subscription\r\n     */\r\n    listSubscriptionProjects(): ListSubscriptionProjectsQuery;\r\n\r\n    /**\r\n     * View subscription project\r\n     */\r\n    viewSubscriptionProject(): EnvironmentIdentifierQuery<ViewSubscriptionProjectQuery>;\r\n\r\n    /**\r\n     * View subscription users\r\n     */\r\n    listSubscriptionUsers(): ListSubscriptionUsersQuery;\r\n\r\n    /**\r\n     * View subscription user\r\n     */\r\n    viewSubscriptionUser(): UserIdentifierQuery<ViewSubscriptionUserQuery>;\r\n\r\n    /**\r\n     * Activates user in all projects\r\n     */\r\n    activateUserInAllProjects(): UserIdentifierQuery<ActivateUserInAllProjectsQuery>;\r\n\r\n    /**\r\n     * Deactivates user in all projects\r\n     */\r\n    deactivateUserInAllProjects(): UserIdentifierQuery<DeactivateUserInAllProjectsQuery>;\r\n\r\n    /**\r\n     * List roles\r\n     */\r\n    listRoles(): ListRolesQuery;\r\n\r\n    /**\r\n     * Invites specified user to Kontent.ai project\r\n     */\r\n    inviteUser(): DataQuery<InviteProjectUserQuery, ProjectUserModels.IInviteUserData>;\r\n\r\n    /**\r\n     * Changes roles of a specified user\r\n     */\r\n    changeUserRoles(): UserIdentifierQuery<DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>>;\r\n\r\n    /**\r\n     * View role\r\n     */\r\n    viewRole(): RoleIdentifierQuery<ViewRoleQuery>;\r\n\r\n    /**\r\n     * Get cloning state of the environment\r\n     */\r\n    getEnvironmentCloningState(): GetEnvironmentCloningStateQuery;\r\n\r\n    /**\r\n     * Delete environment\r\n     */\r\n    deleteEnvironment(): DeleteEnvironmentQuery;\r\n\r\n    /**\r\n     * Modify environment\r\n     */\r\n    modifyEnvironment(): DataQuery<ModifyEnvironmentQuery, EnvironmentModels.IModifyEnvironmentData[]>;\r\n\r\n    /**\r\n     * Clone environment\r\n     */\r\n    cloneEnvironment(): DataQuery<CloneEnvironmentQuery, EnvironmentModels.ICloneEnvironmentData>;\r\n\r\n    /**\r\n     * Mark environment as production\r\n     */\r\n    markEnvironmentAsProduction(): DataQuery<\r\n        MarkEnvironmentAsProductionQuery,\r\n        EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    >;\r\n\r\n    /**\r\n     * List asset renditions of given asset\r\n     */\r\n    listAssetRenditions(): AssetIdentifierQuery<ListAssetRenditionsQuery>;\r\n\r\n    /**\r\n     * Adds rendition to given asset\r\n     */\r\n    addAssetRendition(): AssetIdentifierQuery<\r\n        DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>\r\n    >;\r\n\r\n    /**\r\n     * Modifies asset rendition\r\n     */\r\n    modifyAssetRendition(): AssetIdentifierQuery<\r\n        RenditionIdentifierQuery<DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>>\r\n    >;\r\n\r\n    /**\r\n     * Views asset rendition\r\n     */\r\n    viewAssetRendition(): AssetIdentifierQuery<RenditionIdentifierQuery<ViewAssetRenditionQuery>>;\r\n\r\n    /**\r\n     * Adds space\r\n     */\r\n    addSpace(): DataQuery<AddSpaceQuery, SpaceModels.IAddSpaceData>;\r\n\r\n    /**\r\n     * Deletes a space\r\n     */\r\n    deleteSpace(): SpaceIdentifierQuery<DeleteSpaceQuery>;\r\n\r\n    /**\r\n     * Lists all spaces\r\n     */\r\n    listSpaces(): ListSpacesQuery;\r\n\r\n    /**\r\n     * Modifies a space\r\n     */\r\n    modifySpace(): SpaceIdentifierQuery<DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>>;\r\n\r\n    /**\r\n     * Views a space\r\n     */\r\n    viewSpace(): SpaceIdentifierQuery<ViewSpaceQuery>;\r\n\r\n    /**\r\n     * Gets preview configuration\r\n     */\r\n    getPreviewConfiguration(): GetPreviewConfigurationQuery;\r\n\r\n    /**\r\n     * Adjusts the preview URLs configured for your environment\r\n     */\r\n    modifyPreviewConfiguration(): DataQuery<\r\n        ModifyPreviewConfigurationQuery,\r\n        PreviewModels.IModifyPreviewConfigurationData\r\n    >;\r\n\r\n    /**\r\n     * Activates Web Spotlight\r\n     */\r\n    activateWebSpotlight(): DataQuery<ActivateWebSpotlightQuery, WebSpotlightModels.IActivateWebSpotlightData>;\r\n\r\n    /**\r\n     * Deactivates Web Spotlight\r\n     */\r\n    deactivateWebSpotlight(): DeactivateWebSpotlightQuery;\r\n\r\n    /**\r\n     * Checks Web Spotlight status\r\n     */\r\n    checkWebSpotlightStatus(): CheckWebSpotlightStatusQuery;\r\n\r\n    /**\r\n     * Modify custom app\r\n     */\r\n    modifyCustomApp(): CustomAppsIdentifierQuery<\r\n        DataQuery<ModifyCustomAppQuery, CustomAppModels.ModifyCustomAppOperation[]>\r\n    >;\r\n\r\n    /**\r\n     * Delete custom app\r\n     */\r\n    deleteCustomApp(): CustomAppsIdentifierQuery<DeleteCustomAppQuery>;\r\n\r\n    /**\r\n     * Add custom app\r\n     */\r\n    addCustomApp(): DataQuery<AddCustomAppQuery, CustomAppModels.IAddCustomAppData>;\r\n\r\n    /**\r\n     * List custom apps\r\n     */\r\n    listCustomApps(): ListCustomAppsQuery;\r\n\r\n    /*\r\n     * Get custom app\r\n     */\r\n    getCustomApp(): CustomAppsIdentifierQuery<GetCustomAppQuery>;\r\n}\r\n","export * from './imanagement-client.interface';\r\nexport * from './management-client.class';\r\nexport * from './management-client.factories';\r\n","import { HttpService, IHttpCancelRequestToken, IHttpService } from '@kontent-ai/core-sdk';\r\nimport {\r\n    AssetElementsBuilder,\r\n    AssetRenditionModels,\r\n    CollectionModels,\r\n    CustomAppModels,\r\n    LanguageVariantElementsBuilder,\r\n    LanguageVariantModels,\r\n    PreviewModels,\r\n    ProjectUserModels,\r\n    SpaceModels,\r\n    WebSpotlightModels\r\n} from '../models';\r\n\r\nimport { IManagementClientConfig } from '../config';\r\nimport { ContentItemContracts, LanguageVariantContracts } from '../contracts';\r\nimport {\r\n    AssetFolderModels,\r\n    AssetModels,\r\n    ContentTypeElementsBuilder,\r\n    ContentTypeModels,\r\n    ContentTypeSnippetElements,\r\n    ContentTypeSnippetModels,\r\n    LanguageModels,\r\n    TaxonomyModels,\r\n    WebhookModels,\r\n    WorkflowModels\r\n} from '../models';\r\nimport {\r\n    AddAssetFoldersQuery,\r\n    AddAssetQuery,\r\n    AddContentItemQuery,\r\n    AddContentTypeQuery,\r\n    AddContentTypeSnippetQuery,\r\n    AddLanguageQuery,\r\n    AddTaxonomyQuery,\r\n    AddWebhookQuery,\r\n    AddLegacyWebhookQuery,\r\n    AssetIdentifierQuery,\r\n    CancelScheduledPublishingOfLanguageVariantQuery,\r\n    ContentItemIdentifierQuery,\r\n    ContentTypeCodenameAndIdIdentifierQuery,\r\n    ContentTypeIdentifierQuery,\r\n    CreateNewVersionOfLanguageVariantQuery,\r\n    DataQuery,\r\n    DataQueryOptional,\r\n    DeleteAssetQuery,\r\n    DeleteContentItemQuery,\r\n    DeleteContentTypeQuery,\r\n    DeleteContentTypeSnippetQuery,\r\n    DeleteLanguageVariantQuery,\r\n    DeleteTaxonomyQuery,\r\n    DeleteWebhookQuery,\r\n    DeleteLegacyWebhookQuery,\r\n    GetTaxonomyQuery,\r\n    GetWebhookQuery,\r\n    GetLegacyWebhookQuery,\r\n    LanguageIdAndCodenameIdentifierQuery,\r\n    LanguageIdentifierQuery,\r\n    ListAssetFoldersQuery,\r\n    ListAssetsQuery,\r\n    ListContentItemsQuery,\r\n    ListContentTypeSnippetsQuery,\r\n    ListContentTypesQuery,\r\n    ListLanguagesQuery,\r\n    ListLanguageVariantsOfContentTypeQuery,\r\n    ListLanguageVariantsOfContentTypeWithComponentsQuery,\r\n    ListLanguageVariantsOfItemQuery,\r\n    ListLanguageVariantsBySpaceQuery,\r\n    ListTaxonomiesQuery,\r\n    ListWebhooksQuery,\r\n    ListLegacyWebhooksQuery,\r\n    ModifyAssetFoldersQuery,\r\n    ModifyContentTypeQuery,\r\n    ModifyContentTypeSnippetQuery,\r\n    ModifyLanguageQuery,\r\n    EnvironmentIdentifierQuery,\r\n    EnvironmentInformationQuery,\r\n    PublishLanguageVariantQuery,\r\n    TaxonomyIdentifierQuery,\r\n    UnpublishLanguageVariantQuery,\r\n    UpdateContentItemQuery,\r\n    UploadBinaryFileQuery,\r\n    UpsertAssetQuery,\r\n    UpsertContentItemQuery,\r\n    UpsertLanguageVariantQuery,\r\n    ViewAssetsQuery,\r\n    ViewContentItemQuery,\r\n    ViewContentTypeQuery,\r\n    ViewContentTypeSnippetQuery,\r\n    ViewLanguageQuery,\r\n    ViewLanguageVariantQuery,\r\n    WebhookIdentifierQuery,\r\n    ModifyTaxonomyQuery,\r\n    PostQuery,\r\n    ActionQuery,\r\n    PatchQuery,\r\n    PutQuery,\r\n    DeleteQuery,\r\n    GetQuery,\r\n    CancelScheduledUnpublishingOfLanguageVariantQuery,\r\n    EnableWebhookQuery,\r\n    EnableLegacyWebhookQuery,\r\n    DisableWebhookQuery,\r\n    DisableLegacyWebhookQuery,\r\n    ListCollectionsQuery,\r\n    CollectionIdentifierQuery,\r\n    ListLanguageVariantsByCollectionQuery,\r\n    SetCollectionsQuery,\r\n    UploadAssetFromUrlQuery,\r\n    ListSubscriptionProjectsQuery,\r\n    ViewSubscriptionProjectQuery,\r\n    ListSubscriptionUsersQuery,\r\n    UserIdentifierQuery,\r\n    ViewSubscriptionUserQuery,\r\n    ActivateUserInAllProjectsQuery,\r\n    DeactivateUserInAllProjectsQuery,\r\n    ListRolesQuery,\r\n    InviteProjectUserQuery,\r\n    ChangeUserRolesQuery,\r\n    RoleIdentifierQuery,\r\n    ViewRoleQuery,\r\n    ListAssetRenditionsQuery,\r\n    ModifyAssetRenditionQuery,\r\n    AddAssetRenditionQuery,\r\n    RenditionIdentifierQuery,\r\n    ViewAssetRenditionQuery,\r\n    ChangeWorkflowOfLanguageOrVariantQuery,\r\n    ListWorkflowsQuery,\r\n    WorkflowIdentifierQuery,\r\n    DeleteWorkflowQuery,\r\n    AddWorkflowQuery,\r\n    UpdateWorkflowQuery,\r\n    StartEnvironmentValidationQuery,\r\n    TaskIdentifierQuery,\r\n    CheckEnvironmentValidationQuery,\r\n    ListEnvironmentValidationIssuesQuery,\r\n    AddSpaceQuery,\r\n    DeleteSpaceQuery,\r\n    ListSpacesQuery,\r\n    ModifySpaceQuery,\r\n    ViewSpaceQuery,\r\n    SpaceIdentifierQuery,\r\n    GetPreviewConfigurationQuery,\r\n    ModifyPreviewConfigurationQuery,\r\n    ActivateWebSpotlightQuery,\r\n    DeactivateWebSpotlightQuery,\r\n    CheckWebSpotlightStatusQuery,\r\n    ListCustomAppsQuery,\r\n    AddCustomAppQuery,\r\n    CustomAppsIdentifierQuery,\r\n    GetCustomAppQuery,\r\n    ModifyCustomAppQuery,\r\n    DeleteCustomAppQuery,\r\n    FilterLanguageVariantsQuery\r\n} from '../queries';\r\nimport { sdkInfo } from '../sdk-info.generated';\r\nimport { ManagementQueryService, IMappingService, MappingService } from '../services';\r\nimport { IEarlyAccess, IManagementClient } from './imanagement-client.interface';\r\nimport { CancelToken } from 'axios';\r\nimport { GetEnvironmentCloningStateQuery } from '../queries/environments';\r\nimport { DeleteEnvironmentQuery } from '../queries/environments/delete-environment-query';\r\nimport { EnvironmentModels } from '../models/environments/environment.models';\r\nimport { CloneEnvironmentQuery } from '../queries/environments/clone-environment-query';\r\nimport { MarkEnvironmentAsProductionQuery } from '../queries/environments/mark-environment-as-production-query';\r\nimport { ModifyEnvironmentQuery } from '../queries/environments/modify-environment-query';\r\n\r\nexport class ManagementClient implements IManagementClient<CancelToken> {\r\n    protected readonly queryService: ManagementQueryService;\r\n    private httpService: IHttpService<CancelToken>;\r\n\r\n    public readonly mappingService: IMappingService = new MappingService();\r\n\r\n    constructor(protected readonly config: IManagementClientConfig) {\r\n        const httpService = config.httpService ? config.httpService : new HttpService();\r\n        this.queryService = new ManagementQueryService(config, httpService, {\r\n            host: sdkInfo.host,\r\n            name: sdkInfo.name,\r\n            version: sdkInfo.version\r\n        });\r\n\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    earlyAccess: IEarlyAccess = {\r\n        filterLanguageVariants: () => {\r\n            return new DataQuery<FilterLanguageVariantsQuery, LanguageVariantModels.IFilterLanguageVariantsData>(\r\n                this.config,\r\n                this.queryService,\r\n                (config, queryService, data) => new FilterLanguageVariantsQuery(config, queryService, data)\r\n            );\r\n        }\r\n    }\r\n\r\n    createCancelToken(): IHttpCancelRequestToken<CancelToken> {\r\n        return this.httpService.createCancelToken();\r\n    }\r\n\r\n    post(): ActionQuery<DataQuery<PostQuery, any>> {\r\n        return new ActionQuery<DataQuery<PostQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PostQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PostQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    patch(): ActionQuery<DataQuery<PatchQuery, any>> {\r\n        return new ActionQuery<DataQuery<PatchQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PatchQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PatchQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    put(): ActionQuery<DataQuery<PutQuery, any>> {\r\n        return new ActionQuery<DataQuery<PutQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PutQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PutQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    delete(): ActionQuery<DeleteQuery> {\r\n        return new ActionQuery<DeleteQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) => new DeleteQuery(config, queryService, action)\r\n        );\r\n    }\r\n\r\n    get(): ActionQuery<GetQuery> {\r\n        return new ActionQuery<GetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) => new GetQuery(config, queryService, action)\r\n        );\r\n    }\r\n\r\n    createNewVersionOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CreateNewVersionOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    unpublishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQueryOptional<\r\n                            UnpublishLanguageVariantQuery,\r\n                            WorkflowModels.IUnpublishLanguageVarianthData\r\n                        >(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (pConfig, pQueryService, data) =>\r\n                                new UnpublishLanguageVariantQuery(\r\n                                    pConfig,\r\n                                    pQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    data\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    cancelSheduledPublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CancelScheduledPublishingOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    cancelSheduledUnpublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CancelScheduledUnpublishingOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    changeWorkflowOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<ChangeWorkflowOfLanguageOrVariantQuery, WorkflowModels.IChangeWorkflowOfLanguageVariantData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQuery<ChangeWorkflowOfLanguageOrVariantQuery, WorkflowModels.IChangeWorkflowOfLanguageVariantData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQuery<\r\n                        ChangeWorkflowOfLanguageOrVariantQuery,\r\n                        WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n                    >\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQuery<\r\n                            ChangeWorkflowOfLanguageOrVariantQuery,\r\n                            WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n                        >(nConfig, nQueryService, (mConfig, mQueryservice, data) => {\r\n                            return new ChangeWorkflowOfLanguageOrVariantQuery(\r\n                                config,\r\n                                queryService,\r\n                                contentItemIdentifier,\r\n                                languageIdentifier,\r\n                                data\r\n                            );\r\n                        })\r\n                )\r\n        );\r\n    }\r\n\r\n    listWorkflows(): ListWorkflowsQuery {\r\n        return new ListWorkflowsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteWorkflow(): WorkflowIdentifierQuery<DeleteWorkflowQuery> {\r\n        return new WorkflowIdentifierQuery<DeleteWorkflowQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteWorkflowQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addWorkflow(): DataQuery<AddWorkflowQuery, WorkflowModels.IAddWorkflowData> {\r\n        return new DataQuery<AddWorkflowQuery, WorkflowModels.IAddWorkflowData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddWorkflowQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    updateWorkflow(): WorkflowIdentifierQuery<DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>> {\r\n        return new WorkflowIdentifierQuery<DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new UpdateWorkflowQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    publishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (pConfig, pQueryService, data) =>\r\n                                new PublishLanguageVariantQuery(\r\n                                    pConfig,\r\n                                    pQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    data\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    listContentTypeSnippets(): ListContentTypeSnippetsQuery {\r\n        return new ListContentTypeSnippetsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewContentTypeSnippet(): ContentTypeIdentifierQuery<ViewContentTypeSnippetQuery> {\r\n        return new ContentTypeIdentifierQuery<ViewContentTypeSnippetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentTypeSnippetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteContentTypeSnippet(): ContentTypeIdentifierQuery<DeleteContentTypeSnippetQuery> {\r\n        return new ContentTypeIdentifierQuery<DeleteContentTypeSnippetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentTypeSnippetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentTypeSnippet(): DataQuery<\r\n        AddContentTypeSnippetQuery,\r\n        (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData\r\n    > {\r\n        return new DataQuery<\r\n            AddContentTypeSnippetQuery,\r\n            (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentTypeSnippetQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    viewLanguageVariant(): ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>> {\r\n        return new ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new ViewLanguageVariantQuery(nConfig, nQueryService, contentItemIdentifier, languageIdentifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    upsertLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<\r\n                UpsertLanguageVariantQuery,\r\n                (builder: LanguageVariantElementsBuilder) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n            >\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQuery<\r\n                    UpsertLanguageVariantQuery,\r\n                    (\r\n                        builder: LanguageVariantElementsBuilder\r\n                    ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                >\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQuery<\r\n                        UpsertLanguageVariantQuery,\r\n                        (\r\n                            builder: LanguageVariantElementsBuilder\r\n                        ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                    >\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQuery<\r\n                            UpsertLanguageVariantQuery,\r\n                            (\r\n                                builder: LanguageVariantElementsBuilder\r\n                            ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                        >(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (mConfig, mQueryService, elements) =>\r\n                                new UpsertLanguageVariantQuery(\r\n                                    mConfig,\r\n                                    mQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    elements\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DeleteLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    startEnvironmentValidation(): StartEnvironmentValidationQuery {\r\n        return new StartEnvironmentValidationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    checkEnvironmentValidation(): TaskIdentifierQuery<CheckEnvironmentValidationQuery> {\r\n        return new TaskIdentifierQuery<CheckEnvironmentValidationQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new CheckEnvironmentValidationQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listEnvironmentValidationIssues(): TaskIdentifierQuery<ListEnvironmentValidationIssuesQuery> {\r\n        return new TaskIdentifierQuery<ListEnvironmentValidationIssuesQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListEnvironmentValidationIssuesQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteContentType(): ContentTypeIdentifierQuery<DeleteContentTypeQuery> {\r\n        return new ContentTypeIdentifierQuery<DeleteContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentType(): DataQuery<\r\n        AddContentTypeQuery,\r\n        (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData\r\n    > {\r\n        return new DataQuery<\r\n            AddContentTypeQuery,\r\n            (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentTypeQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyContentTypeSnippet(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>\r\n    > {\r\n        return new ContentTypeIdentifierQuery<\r\n            DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new ModifyContentTypeSnippetQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyContentType(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>\r\n    > {\r\n        return new ContentTypeIdentifierQuery<\r\n            DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new ModifyContentTypeQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyTaxonomy(): TaxonomyIdentifierQuery<DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>> {\r\n        return new TaxonomyIdentifierQuery<DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifyTaxonomyQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    viewContentType(): ContentTypeIdentifierQuery<ViewContentTypeQuery> {\r\n        return new ContentTypeIdentifierQuery<ViewContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listContentTypes(): ListContentTypesQuery {\r\n        return new ListContentTypesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listAssetRenditions(): AssetIdentifierQuery<ListAssetRenditionsQuery> {\r\n        return new AssetIdentifierQuery<ListAssetRenditionsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ListAssetRenditionsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addAssetRendition(): AssetIdentifierQuery<\r\n        DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>\r\n    > {\r\n        return new AssetIdentifierQuery<DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new AddAssetRenditionQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyAssetRendition(): AssetIdentifierQuery<\r\n        RenditionIdentifierQuery<DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>>\r\n    > {\r\n        return new AssetIdentifierQuery<\r\n            RenditionIdentifierQuery<\r\n                DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, assetIdentifier) =>\r\n                new RenditionIdentifierQuery<\r\n                    DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>\r\n                >(config, queryService, (mConfig, mQueryService, renditionIdentifier) => {\r\n                    return new DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>(\r\n                        config,\r\n                        queryService,\r\n                        (nConfig, nQueryService, data) =>\r\n                            new ModifyAssetRenditionQuery(\r\n                                nConfig,\r\n                                nQueryService,\r\n                                assetIdentifier,\r\n                                renditionIdentifier,\r\n                                data\r\n                            )\r\n                    );\r\n                })\r\n        );\r\n    }\r\n\r\n    viewAssetRendition(): AssetIdentifierQuery<RenditionIdentifierQuery<ViewAssetRenditionQuery>> {\r\n        return new AssetIdentifierQuery<RenditionIdentifierQuery<ViewAssetRenditionQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, assetIdentifier) =>\r\n                new RenditionIdentifierQuery<ViewAssetRenditionQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (xConfig, xQueryService, renditionIdentifier) => {\r\n                        return new ViewAssetRenditionQuery(config, queryService, assetIdentifier, renditionIdentifier);\r\n                    }\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteTaxonomy(): TaxonomyIdentifierQuery<DeleteTaxonomyQuery> {\r\n        return new TaxonomyIdentifierQuery<DeleteTaxonomyQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteTaxonomyQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addTaxonomy(): DataQuery<AddTaxonomyQuery, TaxonomyModels.IAddTaxonomyRequestModel> {\r\n        return new DataQuery<AddTaxonomyQuery, TaxonomyModels.IAddTaxonomyRequestModel>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddTaxonomyQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    listTaxonomies(): ListTaxonomiesQuery {\r\n        return new ListTaxonomiesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    getTaxonomy(): TaxonomyIdentifierQuery<GetTaxonomyQuery> {\r\n        return new TaxonomyIdentifierQuery<GetTaxonomyQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetTaxonomyQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteAsset(): AssetIdentifierQuery<DeleteAssetQuery> {\r\n        return new AssetIdentifierQuery<DeleteAssetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteAssetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    upsertAsset(): AssetIdentifierQuery<\r\n        DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>\r\n    > {\r\n        return new AssetIdentifierQuery<\r\n            DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>(\r\n                    this.config,\r\n                    this.queryService,\r\n                    (xConfig, xQueryService, data) => new UpsertAssetQuery(config, queryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    addAsset(): DataQuery<AddAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData> {\r\n        return new DataQuery<AddAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddAssetQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    uploadBinaryFile(): DataQuery<UploadBinaryFileQuery, AssetModels.IUploadBinaryFileRequestData> {\r\n        return new DataQuery<UploadBinaryFileQuery, AssetModels.IUploadBinaryFileRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new UploadBinaryFileQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    uploadAssetFromUrl(): DataQuery<UploadAssetFromUrlQuery, AssetModels.IUploadAssetFromUrlRequestData> {\r\n        return new DataQuery<UploadAssetFromUrlQuery, AssetModels.IUploadAssetFromUrlRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new UploadAssetFromUrlQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    viewAsset(): AssetIdentifierQuery<ViewAssetsQuery> {\r\n        return new AssetIdentifierQuery<ViewAssetsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewAssetsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listAssets(): ListAssetsQuery {\r\n        return new ListAssetsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listContentItems(): ListContentItemsQuery {\r\n        return new ListContentItemsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewContentItem(): ContentItemIdentifierQuery<ViewContentItemQuery> {\r\n        return new ContentItemIdentifierQuery<ViewContentItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentItem(): DataQuery<AddContentItemQuery, ContentItemContracts.IAddContentItemPostContract> {\r\n        return new DataQuery<AddContentItemQuery, ContentItemContracts.IAddContentItemPostContract>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentItemQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    updateContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new UpdateContentItemQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    upsertContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new UpsertContentItemQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteContentItem(): ContentItemIdentifierQuery<DeleteContentItemQuery> {\r\n        return new ContentItemIdentifierQuery<DeleteContentItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsOfItem(): ContentItemIdentifierQuery<ListLanguageVariantsOfItemQuery> {\r\n        return new ContentItemIdentifierQuery<ListLanguageVariantsOfItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ListLanguageVariantsOfItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsOfContentType(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeQuery> {\r\n        return new ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsOfContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsByCollection(): CollectionIdentifierQuery<ListLanguageVariantsByCollectionQuery> {\r\n        return new CollectionIdentifierQuery<ListLanguageVariantsByCollectionQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsByCollectionQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsBySpace(): SpaceIdentifierQuery<ListLanguageVariantsBySpaceQuery> {\r\n        return new SpaceIdentifierQuery<ListLanguageVariantsBySpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ListLanguageVariantsBySpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsOfContentTypeWithComponents(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeWithComponentsQuery> {\r\n        return new ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeWithComponentsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsOfContentTypeWithComponentsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguages(): ListLanguagesQuery {\r\n        return new ListLanguagesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewLanguage(): LanguageIdentifierQuery<ViewLanguageQuery> {\r\n        return new LanguageIdentifierQuery<ViewLanguageQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewLanguageQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addLanguage(): DataQuery<AddLanguageQuery, LanguageModels.IAddLanguageData> {\r\n        return new DataQuery<AddLanguageQuery, LanguageModels.IAddLanguageData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddLanguageQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyLanguage(): LanguageIdentifierQuery<DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>> {\r\n        return new LanguageIdentifierQuery<DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifyLanguageQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteWebhook(): WebhookIdentifierQuery<DeleteWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DeleteWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addWebhook(): DataQuery<AddWebhookQuery, WebhookModels.IAddWebhookData> {\r\n        return new DataQuery<AddWebhookQuery, WebhookModels.IAddWebhookData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddWebhookQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    enableWebhook(): WebhookIdentifierQuery<EnableWebhookQuery> {\r\n        return new WebhookIdentifierQuery<EnableWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new EnableWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    disableWebhook(): WebhookIdentifierQuery<DisableWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DisableWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DisableWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getWebhook(): WebhookIdentifierQuery<GetWebhookQuery> {\r\n        return new WebhookIdentifierQuery<GetWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listWebhooks(): ListWebhooksQuery {\r\n        return new ListWebhooksQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteLegacyWebhook(): WebhookIdentifierQuery<DeleteLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DeleteLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addLegacyWebhook(): DataQuery<AddLegacyWebhookQuery, WebhookModels.IAddLegacyWebhookData> {\r\n        return new DataQuery<AddLegacyWebhookQuery, WebhookModels.IAddLegacyWebhookData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddLegacyWebhookQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    enableLegacyWebhook(): WebhookIdentifierQuery<EnableLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<EnableLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new EnableLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    disableLegacyWebhook(): WebhookIdentifierQuery<DisableLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DisableLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DisableLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getLegacyWebhook(): WebhookIdentifierQuery<GetLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<GetLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLegacyWebhooks(): ListLegacyWebhooksQuery {\r\n        return new ListLegacyWebhooksQuery(this.config, this.queryService);\r\n    }\r\n\r\n    environmentInformation(): EnvironmentInformationQuery {\r\n        return new EnvironmentInformationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listAssetFolders(): ListAssetFoldersQuery {\r\n        return new ListAssetFoldersQuery(this.config, this.queryService);\r\n    }\r\n\r\n    addAssetFolders(): DataQuery<AddAssetFoldersQuery, AssetFolderModels.IAddAssetFoldersData> {\r\n        return new DataQuery<AddAssetFoldersQuery, AssetFolderModels.IAddAssetFoldersData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddAssetFoldersQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyAssetFolders(): DataQuery<ModifyAssetFoldersQuery, AssetFolderModels.IModifyAssetFolderData[]> {\r\n        return new DataQuery<ModifyAssetFoldersQuery, AssetFolderModels.IModifyAssetFolderData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyAssetFoldersQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    listCollections(): ListCollectionsQuery {\r\n        return new ListCollectionsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    setCollections(): DataQuery<SetCollectionsQuery, CollectionModels.ISetCollectionData[]> {\r\n        return new DataQuery<SetCollectionsQuery, CollectionModels.ISetCollectionData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new SetCollectionsQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    createLanguageVariantEditUrl(data: {\r\n        variantId: string;\r\n        languageCodename: string;\r\n        elementCodename?: string;\r\n        nestedItemId?: string;\r\n        nestedItemElementCodename?: string;\r\n    }): string {\r\n        let url: string = `https://app.kontent.ai/goto/edit-item/project/${this.config.environmentId}/variant-codename/${data.languageCodename}/item/${data.variantId}`;\r\n\r\n        if (data.elementCodename) {\r\n            url += `/element/${data.elementCodename}`;\r\n        }\r\n\r\n        if (data.nestedItemId) {\r\n            url += `/item/${data.nestedItemId}`;\r\n\r\n            if (data.nestedItemElementCodename) {\r\n                url += `/element/${data.nestedItemElementCodename}`;\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    listSubscriptionProjects(): ListSubscriptionProjectsQuery {\r\n        return new ListSubscriptionProjectsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listSubscriptionUsers(): ListSubscriptionUsersQuery {\r\n        return new ListSubscriptionUsersQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewSubscriptionProject(): EnvironmentIdentifierQuery<ViewSubscriptionProjectQuery> {\r\n        return new EnvironmentIdentifierQuery<ViewSubscriptionProjectQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSubscriptionProjectQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    viewSubscriptionUser(): UserIdentifierQuery<ViewSubscriptionUserQuery> {\r\n        return new UserIdentifierQuery<ViewSubscriptionUserQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSubscriptionUserQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    activateUserInAllProjects(): UserIdentifierQuery<ActivateUserInAllProjectsQuery> {\r\n        return new UserIdentifierQuery<ActivateUserInAllProjectsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ActivateUserInAllProjectsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deactivateUserInAllProjects(): UserIdentifierQuery<DeactivateUserInAllProjectsQuery> {\r\n        return new UserIdentifierQuery<DeactivateUserInAllProjectsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeactivateUserInAllProjectsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listRoles(): ListRolesQuery {\r\n        return new ListRolesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewRole(): RoleIdentifierQuery<ViewRoleQuery> {\r\n        return new RoleIdentifierQuery<ViewRoleQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewRoleQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getPreviewConfiguration(): GetPreviewConfigurationQuery {\r\n        return new GetPreviewConfigurationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifyPreviewConfiguration(): DataQuery<\r\n        ModifyPreviewConfigurationQuery,\r\n        PreviewModels.IModifyPreviewConfigurationData\r\n    > {\r\n        return new DataQuery<ModifyPreviewConfigurationQuery, PreviewModels.IModifyPreviewConfigurationData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyPreviewConfigurationQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    inviteUser(): DataQuery<InviteProjectUserQuery, ProjectUserModels.IInviteUserData> {\r\n        return new DataQuery<InviteProjectUserQuery, ProjectUserModels.IInviteUserData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new InviteProjectUserQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    changeUserRoles(): UserIdentifierQuery<DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>> {\r\n        return new UserIdentifierQuery<DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ChangeUserRolesQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    getEnvironmentCloningState(): GetEnvironmentCloningStateQuery {\r\n        return new GetEnvironmentCloningStateQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteEnvironment(): DeleteEnvironmentQuery {\r\n        return new DeleteEnvironmentQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifyEnvironment(): DataQuery<ModifyEnvironmentQuery, EnvironmentModels.IModifyEnvironmentData[]> {\r\n        return new DataQuery<ModifyEnvironmentQuery, EnvironmentModels.IModifyEnvironmentData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyEnvironmentQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    cloneEnvironment(): DataQuery<CloneEnvironmentQuery, EnvironmentModels.ICloneEnvironmentData> {\r\n        return new DataQuery<CloneEnvironmentQuery, EnvironmentModels.ICloneEnvironmentData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new CloneEnvironmentQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    markEnvironmentAsProduction(): DataQuery<\r\n        MarkEnvironmentAsProductionQuery,\r\n        EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    > {\r\n        return new DataQuery<MarkEnvironmentAsProductionQuery, EnvironmentModels.IMarkEnvironmentAsProductionData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new MarkEnvironmentAsProductionQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    addSpace(): DataQuery<AddSpaceQuery, SpaceModels.IAddSpaceData> {\r\n        return new DataQuery<AddSpaceQuery, SpaceModels.IAddSpaceData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddSpaceQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    deleteSpace(): SpaceIdentifierQuery<DeleteSpaceQuery> {\r\n        return new SpaceIdentifierQuery<DeleteSpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteSpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listSpaces(): ListSpacesQuery {\r\n        return new ListSpacesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifySpace(): SpaceIdentifierQuery<DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>> {\r\n        return new SpaceIdentifierQuery<DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifySpaceQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    viewSpace(): SpaceIdentifierQuery<ViewSpaceQuery> {\r\n        return new SpaceIdentifierQuery<ViewSpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    activateWebSpotlight(): DataQuery<ActivateWebSpotlightQuery, WebSpotlightModels.IActivateWebSpotlightData> {\r\n        return new DataQuery<ActivateWebSpotlightQuery, WebSpotlightModels.IActivateWebSpotlightData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ActivateWebSpotlightQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    deactivateWebSpotlight(): DeactivateWebSpotlightQuery {\r\n        return new DeactivateWebSpotlightQuery(this.config, this.queryService);\r\n    }\r\n\r\n    checkWebSpotlightStatus(): CheckWebSpotlightStatusQuery {\r\n        return new CheckWebSpotlightStatusQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifyCustomApp(): CustomAppsIdentifierQuery<\r\n        DataQuery<ModifyCustomAppQuery, CustomAppModels.ModifyCustomAppOperation[]>\r\n    > {\r\n        return new CustomAppsIdentifierQuery<\r\n            DataQuery<ModifyCustomAppQuery, CustomAppModels.ModifyCustomAppOperation[]>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyCustomAppQuery, CustomAppModels.ModifyCustomAppOperation[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifyCustomAppQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteCustomApp(): CustomAppsIdentifierQuery<DeleteCustomAppQuery> {\r\n        return new CustomAppsIdentifierQuery<DeleteCustomAppQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteCustomAppQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addCustomApp(): DataQuery<AddCustomAppQuery, CustomAppModels.IAddCustomAppData> {\r\n        return new DataQuery<AddCustomAppQuery, CustomAppModels.IAddCustomAppData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddCustomAppQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    listCustomApps(): ListCustomAppsQuery {\r\n        return new ListCustomAppsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    getCustomApp(): CustomAppsIdentifierQuery<GetCustomAppQuery> {\r\n        return new CustomAppsIdentifierQuery<GetCustomAppQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetCustomAppQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n}\r\n","import { ManagementClient } from './management-client.class';\r\nimport { IManagementClientConfig } from '../config';\r\n\r\nexport function createManagementClient(config: IManagementClientConfig): ManagementClient {\r\n    return new ManagementClient(config);\r\n}\r\n\r\n","import { IHeader, IHttpService, IRetryStrategyOptions } from '@kontent-ai/core-sdk';\r\nimport { IContentManagementListQueryConfig } from '../models';\r\n\r\nexport interface IManagementClientConfig {\r\n    /**\r\n     * API key\r\n     */\r\n    apiKey: string;\r\n\r\n    /**\r\n     * Kontent.ai environment id\r\n     */\r\n    environmentId?: string;\r\n\r\n    /**\r\n     * Kontent.ai subscription id\r\n     */\r\n    subscriptionId?: string;\r\n\r\n    /**\r\n     * Base Url. Can be overriden if e.g. a proxy is required\r\n     */\r\n    baseUrl?: string;\r\n\r\n    /**\r\n     * Can be used to inject custom Http service to perform requests\r\n     */\r\n    httpService?: IHttpService<any>;\r\n\r\n    /**\r\n     * retry strategy options\r\n     */\r\n    retryStrategy?: IRetryStrategyOptions;\r\n\r\n    /**\r\n     * Custom default list query config. Applied to all list query configs unless overriden by query.\r\n     */\r\n    listQueryConfig?: IContentManagementListQueryConfig<any>;\r\n\r\n    /**\r\n     * Custom headers to be added to each request\r\n     */\r\n    headers?: IHeader[];\r\n}\r\n","export * from './imanagement-client-config.interface';\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace AssetContracts {\r\n    export interface IAssetModelContract {\r\n        id: string;\r\n        file_name: string;\r\n        title: string;\r\n        image_width: number | null;\r\n        image_height: number | null;\r\n        size: number;\r\n        type: string;\r\n        file_reference: IAssetFileReferenceContract;\r\n        descriptions: IAssetFileDescriptionContract[];\r\n        external_id: string;\r\n        last_modified: string;\r\n        url: string;\r\n        codename: string;\r\n        collection?: IAssetCollectionReferenceContract;\r\n        folder?: IAssetFolderReferenceContract;\r\n        elements?: IAssetElement[];\r\n    }\r\n\r\n    export interface IAssetElement {\r\n        element: SharedContracts.IIdReferenceContract;\r\n        value: SharedContracts.IIdReferenceContract[];\r\n    }\r\n\r\n    export interface IAssetFileReferenceContract  {\r\n        id: string;\r\n        type: 'internal';\r\n    }\r\n\r\n    export interface IAssetFolderReferenceContract {\r\n        id?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IAssetFileDescriptionContract {\r\n        language: SharedContracts.IReferenceObjectContract;\r\n        description: string;\r\n    }\r\n\r\n    export interface IAssetCollectionReferenceContract {\r\n        reference: SharedContracts.IReferenceObjectContract | null;\r\n    }\r\n\r\n    export interface IAssetsListingResponseContract {\r\n        assets: IAssetModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IUploadBinaryFileResponseContract extends IAssetFileReferenceContract {\r\n    }\r\n\r\n    export interface IAddAssetResponseContract extends IAssetModelContract {\r\n    }\r\n\r\n    export interface IUpdateAssetResponseContract extends IAssetModelContract {\r\n    }\r\n\r\n    export interface IUpsertAssetResponseContract extends IAssetModelContract {\r\n    }\r\n\r\n    export interface IDeleteAssetResponseContract {\r\n    }\r\n}\r\n\r\n\r\n","export namespace AssetFolderContracts {\r\n    export interface IAssetFolderContract {\r\n        id: string;\r\n        name: string;\r\n        external_id?: string;\r\n        folders: IAssetFolderContract[];\r\n        codename: string;\r\n    }\r\n\r\n    export interface IListAssetFoldersResponseContract {\r\n        folders: IAssetFolderContract[];\r\n        last_modified: string;\r\n    }\r\n\r\n    export interface IAddAssetFoldersResponseContract extends IListAssetFoldersResponseContract {}\r\n\r\n    export interface IModifyAssetFoldersDataResponseContract extends IListAssetFoldersResponseContract {}\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace AssetRenditionContracts {\r\n    export interface IAssetRenditionContract {\r\n        rendition_id: string;\r\n        asset_id: string;\r\n        external_id: string;\r\n        last_modified: string;\r\n        transformation: IAssetRenditionTransformationContract;\r\n    }\r\n\r\n    export interface IAssetRenditionTransformationContract {\r\n        mode: 'rect';\r\n        fit: 'clip';\r\n        custom_width?: number;\r\n        custom_height?: number;\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n    }\r\n\r\n    export interface IListRenditionResponseContract {\r\n        asset_renditions: IAssetRenditionContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IAddAssetRenditionResponseContract extends IAssetRenditionContract {}\r\n\r\n    export interface IModifyAssetRenditionResponseContract extends IAssetRenditionContract {}\r\n\r\n    export interface IViewRenditionResponseContract extends IAssetRenditionContract {}\r\n}\r\n","export namespace CollectionContracts {\r\n    export interface ICollectionContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface ICollectionListResponseContract {\r\n        collections: ICollectionContract[];\r\n        last_modified?: string;\r\n    }\r\n\r\n    export interface ISetCollectionsResponseContract {\r\n        collections: ICollectionContract[];\r\n        last_modified?: string;\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace ContentItemContracts {\r\n    export interface IContentItemModelContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        type: SharedContracts.IIdReferenceContract;\r\n        external_id?: string;\r\n        last_modified: string;\r\n        spaces: SharedContracts.IIdReferenceContract[];\r\n        collection: SharedContracts.IIdReferenceContract;\r\n        sitemap_locations?: SharedContracts.IIdReferenceContract[];\r\n    }\r\n\r\n    export interface IContentItemsListingResponseContract {\r\n        items: IContentItemModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IAddContentItemResponseContract extends IContentItemModelContract {}\r\n\r\n    export interface IViewContentItemResponseContract extends IContentItemModelContract {}\r\n\r\n    export interface IUpdateContentItemResponseContract extends IContentItemModelContract {}\r\n\r\n    export interface IUpsertContentItemResponseContract extends IContentItemModelContract {}\r\n\r\n    export interface IDeleteContentItemResponseContract {}\r\n\r\n    export interface IUpdateContentItemPostContract {\r\n        name: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IUpsertContentItemPostContract {\r\n        name: string;\r\n        type?: SharedContracts.IReferenceObjectContract;\r\n        codename?: string;\r\n        collection?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IAddContentItemPostContract {\r\n        name: string;\r\n        type: {\r\n            codename?: string;\r\n            id?: string;\r\n            external_id?: string;\r\n        };\r\n        codename?: string;\r\n        external_id?: string;\r\n        collection?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n}\r\n","import { ElementContracts } from './element-contracts';\r\nimport { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace ContentTypeContracts {\r\n\r\n    export interface IContentTypeContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        last_modified: string;\r\n        elements: ElementContracts.IContentTypeElementContract[];\r\n        external_id?: string;\r\n        content_groups?: IContentTypeGroup[];\r\n    }\r\n\r\n    export interface IContentTypeListResponseContract {\r\n        types: IContentTypeContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IModifyContentTypeResponseContract extends IContentTypeContract {\r\n    }\r\n\r\n    export interface IViewContentTypeResponseContract extends IContentTypeContract {\r\n    }\r\n\r\n    export interface IDeleteContentTypeResponseContract {\r\n    }\r\n\r\n    export interface IAddContentTypeResponseContract extends IContentTypeContract {\r\n    }\r\n\r\n    export interface IContentTypeGroup {\r\n        name: string;\r\n        codename?: string;\r\n        external_id?: string;\r\n        id?: string;\r\n    }\r\n}\r\n","import { ElementContracts } from './element-contracts';\r\nimport { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace ContentTypeSnippetContracts {\r\n\r\n    export interface IContentTypeSnippetContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        last_modified: string;\r\n        external_id?: string;\r\n        elements: ElementContracts.IContentTypeElementContract[];\r\n    }\r\n\r\n    export interface IContentTypeSnippetListResponseContract {\r\n        snippets: IContentTypeSnippetContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IViewContentTypeSnippetResponseContract extends IContentTypeSnippetContract {\r\n    }\r\n\r\n    export interface IAddContentTypeSnippetResponseContract extends IContentTypeSnippetContract {\r\n    }\r\n\r\n    export interface IModifyContentTypeSnippetResponseContract extends IContentTypeSnippetContract {\r\n    }\r\n\r\n    export interface IDeleteContentTypeSnippetResponseContract {\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace CustomAppsContracts {\r\n    export interface ICustomAppContract {\r\n        name: string;\r\n        codename: string;\r\n        source_url: string;\r\n        config: string | null;\r\n        allowed_roles?: SharedContracts.ICodenameIdReferenceContract[];\r\n    }\r\n\r\n    export interface ICustomAppsListResponseContract {\r\n        custom_apps: ICustomAppContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace ElementContracts {\r\n    export interface IContentTypeElementMultipleChoiceElementOptionsContract {\r\n        name: string;\r\n        id: string;\r\n        codename: string;\r\n    }\r\n\r\n    export type ElementValueContract = string | number | SharedContracts.IIdReferenceContract[];\r\n\r\n    export type IContentTypeElementModeTypeContract = 'single' | 'multiple';\r\n\r\n    export interface IContentTypeElementContract {\r\n        name: string;\r\n        type: string;\r\n        id?: string;\r\n        external_id?: string;\r\n        codename?: string;\r\n        content_group?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IContentItemElementContract {\r\n        element: SharedContracts.IIdReferenceContract;\r\n        value: ElementValueContract;\r\n        components?: IContentItemElementComponent[];\r\n        searchable_value?: string | null;\r\n        display_timezone?: string | null;\r\n        mode?: 'autogenerated' | 'custom';\r\n    }\r\n\r\n    export interface IContentItemElementComponent {\r\n        id: string;\r\n        type: SharedContracts.IIdReferenceContract;\r\n        elements: IContentItemElementContract[];\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace EnvironmentContracts {\r\n    export interface IEnvironmentCloningStateResponseContract {\r\n        cloning_state: 'in_progress' | 'failed' | 'done';\r\n    }\r\n\r\n    export interface IDeleteEnvironmentResponseContract {}\r\n\r\n    export interface IEnvironmentResponseContract {\r\n        id: string;\r\n        name: string;\r\n        is_production: boolean;\r\n    }\r\n\r\n    export interface IModifyEnvironmentResponseContract extends IEnvironmentResponseContract {}\r\n\r\n    export interface ICloneEnvironmentResponseContract {\r\n        id: string;\r\n        management_api_key: string;\r\n        delivery_preview_api_key: string;\r\n        secured_delivery_api_key: string;\r\n    }\r\n\r\n    export interface IMarkEnvironmentAsProductionResponseContract {}\r\n\r\n    export interface IEnvironmentInformationResponseContract {\r\n        id: string;\r\n        name: string;\r\n        environment: string;\r\n    }\r\n\r\n    export type EnvironmentValidationIssueType = 'type_issue' | 'variant_issue';\r\n\r\n    export interface IEnvironmentValidationItemIssueContract {\r\n        element: IEnvironmentVariantElementContract;\r\n        messages: string[];\r\n    }\r\n\r\n    export interface IEnvironmentValidationIssueContract {\r\n        issue_type: EnvironmentValidationIssueType;\r\n        item?: IEnvironmentVariantContentItemContract;\r\n        type?: IEnvironmentTypeContract;\r\n        language?: IEnvironmentVariantLanguageContract;\r\n        issues: IEnvironmentValidationItemIssueContract[];\r\n    }\r\n\r\n    export interface IEnvironmentValidationListResponseContract {\r\n        issues: IEnvironmentValidationIssueContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export type EnvironmentValidationStatus = 'finished' | 'queued' | 'failed';\r\n    export type EnvironmentValidationResult = 'none' | 'no_issues' | 'issues_found';\r\n\r\n    export interface IStartEnvironmentValidationResponseContract {\r\n        id: string;\r\n        status: EnvironmentValidationStatus;\r\n        validation_result: EnvironmentValidationResult;\r\n    }\r\n\r\n    export interface ICheckEnvironmentValidationResponseContract {\r\n        id: string;\r\n        status: EnvironmentValidationStatus;\r\n        validation_result: EnvironmentValidationResult;\r\n    }\r\n\r\n    export interface IEnvironmentReportModelContract {\r\n        id: string;\r\n        name: string;\r\n    }\r\n\r\n    export interface IEnvironmentVariantContentItemContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface IEnvironmentVariantLanguageContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface IEnvironmentVariantElementContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface IEnvironmentTypeContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface IEnvironmentTypeIssueContract {\r\n        type: IEnvironmentTypeContract;\r\n        issues: IEnvironmentIssueContract[];\r\n    }\r\n\r\n    export interface IEnvironmentIssueContract {\r\n        element: IEnvironmentVariantElementContract;\r\n        messages: string[];\r\n    }\r\n\r\n    export interface IEnvironmentVariantIssueContract {\r\n        item: IEnvironmentVariantContentItemContract;\r\n        language: IEnvironmentVariantLanguageContract;\r\n        issues: IEnvironmentIssueContract[];\r\n    }\r\n}\r\n","export * from './content-item-contracts';\r\nexport * from './shared-contracts';\r\nexport * from './element-contracts';\r\nexport * from './asset-contracts';\r\nexport * from './taxonomy-contracts';\r\nexport * from './content-type-contracts';\r\nexport * from './element-contracts';\r\nexport * from './language-variant-contracts';\r\nexport * from './content-type-snippet-contracts';\r\nexport * from './workflow-contracts';\r\nexport * from './language-contracts';\r\nexport * from './webhook-contracts';\r\nexport * from './asset-folder-contracts';\r\nexport * from './collection-contracts';\r\nexport * from './subscription-contracts';\r\nexport * from './role-contracts';\r\nexport * from './project-user-contracts';\r\nexport * from './environment-contracts';\r\nexport * from './asset-rendition-contracts';\r\nexport * from './space-contracts';\r\nexport * from './preview-contracts';\r\nexport * from './web-spotlight-contracts';\r\nexport * from './custom-apps-contracts';\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace LanguageContracts {\r\n\r\n    export interface ILanguageModelContract {\r\n        name: string;\r\n        id: string;\r\n        codename: string;\r\n        external_id?: string;\r\n        is_active: boolean;\r\n        is_default: boolean;\r\n        fallback_language?: IFallbackLanguageContract;\r\n    }\r\n\r\n    export interface IFallbackLanguageContract {\r\n        id: string;\r\n    }\r\n\r\n    export interface IListLanguagesResponseContract {\r\n        languages: ILanguageModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IViewLanguageResponseContract extends ILanguageModelContract {\r\n    }\r\n\r\n    export interface IAddLanguageResponseContract extends ILanguageModelContract {\r\n    }\r\n\r\n    export interface IModifyLanguageResponseContract extends ILanguageModelContract {\r\n    }\r\n}\r\n","import { ElementContracts } from './element-contracts';\r\nimport { SharedContracts } from './shared-contracts';\r\nimport { LanguageVariantElements } from '../models';\r\nimport { ContentItemContracts } from './content-item-contracts';\r\n\r\nexport namespace LanguageVariantContracts {\r\n    export interface ILanguageVariantModelContract {\r\n        item: SharedContracts.IIdReferenceContract;\r\n        elements: ElementContracts.IContentItemElementContract[];\r\n        language: SharedContracts.IIdReferenceContract;\r\n        last_modified: string;\r\n        workflow: ILanguageVariantWorkflowContract;\r\n        schedule: ILanguageVariantSchedule;\r\n        due_date: ILanguageVariantDueDate;\r\n        contributors: SharedContracts.UserReferenceContract[];\r\n        workflow_step: SharedContracts.IIdReferenceContract;\r\n        note?: string | null;\r\n    }\r\n\r\n    export interface ILanguageVariantModelsContract {\r\n        item: SharedContracts.IReferenceObjectContract;\r\n        elements: ElementContracts.IContentItemElementContract[];\r\n        language: SharedContracts.IReferenceObjectContract;\r\n        last_modified: string;\r\n        workflow: ILanguageVariantWorkflowContract;\r\n        schedule: ILanguageVariantSchedule;\r\n        due_date: ILanguageVariantDueDate;\r\n    }\r\n\r\n    export interface IListLanguageVariantsOfItemResponseContract extends ILanguageVariantModelContract { }\r\n\r\n    export interface IUpsertLanguageVariantPostContract {\r\n        elements: LanguageVariantElements.ILanguageVariantElementBase[];\r\n        workflow?: ILanguageVariantWorkflowContract;\r\n        due_date?: ILanguageVariantDueDate;\r\n        note?: string;\r\n        contributors?: SharedContracts.UserReferenceDataContract[];\r\n    }\r\n    export interface IListLanguageVariantsOfContentTypeWithComponentsResponseContract {\r\n        variants: ILanguageVariantModelsContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IListLanguageVariantsByCollectionResponseContract {\r\n        variants: ILanguageVariantModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IFilterLanguageVariantsResponseContract {\r\n        data: IFilterLanguageVariantsResponseDataContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IFilterLanguageVariantsResponseDataContract {\r\n        item: ContentItemContracts.IContentItemModelContract,\r\n        variant: ILanguageVariantModelContract,\r\n    }\r\n\r\n    export interface IListLanguageVariantsBySpaceResponseContract {\r\n        variants: ILanguageVariantModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface IListLanguageVariantsOfContentTypeResponseContract {\r\n        variants: ILanguageVariantModelContract[];\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n    }\r\n\r\n    export interface ILanguageVariantWorkflowContract {\r\n        workflow_identifier: SharedContracts.ICodenameIdReferenceContract;\r\n        step_identifier: SharedContracts.ICodenameIdReferenceContract;\r\n    }\r\n\r\n    export interface ILanguageVariantSchedule {\r\n        publish_time: string | null;\r\n        publish_display_timezone: string | null;\r\n        unpublish_time: string | null;\r\n        unpublish_display_timezone: string | null;\r\n    }\r\n\r\n    export interface ILanguageVariantDueDate {\r\n        value: string | null;\r\n    }\r\n\r\n    export interface IUpsertLanguageVariantResponseContract extends ILanguageVariantModelContract { }\r\n\r\n    export interface IViewLanguageVariantResponseContract extends ILanguageVariantModelContract { }\r\n}\r\n","export namespace PreviewContracts {\r\n    export interface IPreviewSpaceContract {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewContentTypeContract {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPatternContract {\r\n        space: IPreviewSpaceContract | null;\r\n        url_pattern: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPatternsContract {\r\n        content_type: IPreviewContentTypeContract;\r\n        url_patterns: IPreviewUrlPatternContract[];\r\n    }\r\n\r\n    export interface IPreviewSpaceDomainContract {\r\n        space: IPreviewSpaceContract;\r\n        domain: string;\r\n    }\r\n\r\n    export interface IPreviewConfigurationContract {\r\n        space_domains: IPreviewSpaceDomainContract[];\r\n        preview_url_patterns: IPreviewUrlPatternsContract[];\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace ProjectUserContracts {\r\n    export interface IProjectUserRoleContract {\r\n        id: string;\r\n        languages: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface IUserContract {\r\n        user_id: string;\r\n        collection_groups: IProjectUserCollectionGroupContract[];\r\n    }\r\n\r\n    export interface IProjectUserCollectionGroupContract {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: IProjectUserRoleContract[];\r\n    }\r\n\r\n    export interface IInviteUserResponseContract extends IUserContract {}\r\n\r\n    export interface IChangeUserRolesResponseContract extends IUserContract {}\r\n}\r\n","export namespace RoleContracts {\r\n    export interface IRoleContract {\r\n        id: string;\r\n        name: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IRoleListResponseContract {\r\n        roles: IRoleContract[];\r\n    }\r\n}\r\n","export namespace SharedContracts {\r\n    export interface IPaginationModelContract {\r\n        continuation_token: string | null;\r\n        next_page: string | null;\r\n    }\r\n\r\n    export interface IReferenceObjectContract {\r\n        id?: string;\r\n        codename?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export type UserReferenceContract = Required<Pick<UserReferenceDataContract, 'id'>>;\r\n\r\n    export type UserReferenceDataContract =\r\n        | {\r\n            id: string;\r\n            email?: never;\r\n        }\r\n        | {\r\n            id?: never;\r\n            email: string;\r\n        };\r\n\r\n    export interface ICodenameIdReferenceContract {\r\n        id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IIdReferenceContract {\r\n        id: string;\r\n    }\r\n\r\n    export interface IValidationErrorContract {\r\n        message: string;\r\n    }\r\n\r\n    export interface IContentManagementError {\r\n        message: string;\r\n        request_id: string;\r\n        error_code: number;\r\n        validation_errors?: IValidationErrorContract[];\r\n    }\r\n\r\n    export interface IResponseWorkflowStepsReferenceContract {\r\n        workflow_identifier: IIdReferenceContract;\r\n        step_identifier: IIdReferenceContract;\r\n    }\r\n\r\n    export interface IRequestWorkflowStepsReferenceContract {\r\n        workflow_identifier: IReferenceObjectContract;\r\n        step_identifiers: IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface ITaxonomyGroupReferenceContract {\r\n        taxonomy_identifier: IReferenceObjectContract;\r\n        term_identifiers?: IReferenceObjectContract[];\r\n        include_uncategorized?: boolean;\r\n    }\r\n\r\n    export interface IEmptyResponseContract { }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\nexport namespace SpaceContracts {\r\n    export interface ISpaceContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        web_spotlight_root_item?: SharedContracts.IReferenceObjectContract;\r\n        collections?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export type ISpacesListingResponseContract = ISpaceContract[];\r\n\r\n    export interface IAddSpaceResponseContract extends ISpaceContract {}\r\n\r\n    export interface IViewSpaceResponseContract extends ISpaceContract {}\r\n\r\n    export interface IAddSpaceResponseContract extends ISpaceContract {}\r\n\r\n    export interface IModifySpaceResponseContract extends ISpaceContract {}\r\n\r\n    export interface IDeleteSpaceResponseContact {}\r\n\r\n    export interface IModifySpacePostContract {\r\n        name: string;\r\n        codename: string;\r\n    }\r\n    export interface IAddSpacePostContract {\r\n        name: string;\r\n        codename: string;\r\n        webSpotlightRootItem?: SharedContracts.IReferenceObjectContract;\r\n        collections?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace SubscriptionContracts {\r\n    export interface ISubscriptionProjectEnvironmentContract {\r\n        id: string;\r\n        name: string;\r\n    }\r\n\r\n    export interface ISubscriptionProjectContract {\r\n        id: string;\r\n        is_active: boolean;\r\n        name: string;\r\n        environments: ISubscriptionProjectEnvironmentContract[];\r\n    }\r\n\r\n    export interface IListSubscriptionProjectsResponseContract {\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n        projects: ISubscriptionProjectContract[];\r\n    }\r\n\r\n    export interface IListSubscriptionUsersResponseContract {\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n        users: ISubscriptionUserContract[];\r\n    }\r\n\r\n    export interface ISubscriptionCollectionGroupContract {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: ISubscriptionUserRoleContract[];\r\n    }\r\n\r\n    export interface ISubscriptionUserRoleLanguageContract {\r\n      id: string;\r\n      external_id?: string;\r\n      codename: string;\r\n      name: string;\r\n      is_active: boolean;\r\n    }\r\n\r\n    export interface ISubscriptionUserRoleContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        languages: ISubscriptionUserRoleLanguageContract[];\r\n    }\r\n\r\n    export interface ISubscriptionUserEnvironmentContract {\r\n        id: string;\r\n        name: string;\r\n        is_user_active: boolean;\r\n        last_activity_at?: string;\r\n        collection_groups: ISubscriptionCollectionGroupContract[];\r\n    }\r\n\r\n    export interface ISubscriptionUserProjectContract {\r\n        id: string;\r\n        name: string;\r\n        environments: ISubscriptionUserEnvironmentContract[];\r\n    }\r\n\r\n    export interface ISubscriptionUserContract {\r\n        id: string;\r\n        email: string;\r\n        has_pending_invitation: boolean;\r\n        projects: ISubscriptionUserProjectContract[];\r\n\r\n        first_name?: string;\r\n        last_name?: string;\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace TaxonomyContracts {\r\n\r\n    export interface ITaxonomyContract {\r\n        last_modified: string;\r\n        name: string;\r\n        id: string;\r\n        codename: string;\r\n        terms: ITaxonomyContract[];\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IListTaxonomyResponseContract {\r\n        pagination: SharedContracts.IPaginationModelContract;\r\n        taxonomies: ITaxonomyContract[];\r\n    }\r\n\r\n    export interface IViewTaxonomyResponseContract extends ITaxonomyContract {\r\n    }\r\n\r\n    export interface IAddTaxonomyResponseContract extends ITaxonomyContract {\r\n    }\r\n\r\n    export interface IGetTaxonomyResponseContract extends ITaxonomyContract {\r\n    }\r\n\r\n    export interface IModifyTaxonomyResponseContract extends ITaxonomyContract {\r\n    }\r\n\r\n    export interface IDeleteTaxonomyResponseContract {\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace WebSpotlightContracts {\r\n    export interface IWebSpotlightStatus {\r\n        enabled: boolean;\r\n        root_type: SharedContracts.IIdReferenceContract | null;\r\n    }\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace WebhookContracts {\r\n    export type WebhookWorkflowStepOperationContract = 'publish' | 'unpublish' | 'archive' | 'restore' | 'upsert';\r\n    export type WebhookManagementContentChangesOperation = 'archive' | 'create' | 'restore';\r\n    export type WebhookPreviewContentChangesOperation = 'archive' | 'upsert' | 'restore';\r\n    export type WebhookContentTypeAction = 'created' | 'changed' | 'deleted';\r\n    export type WebhookAssetAction = 'created' | 'changed' | 'metadata_changed' | 'deleted';\r\n    export type WebhookTaxonomyAction =\r\n        | 'created'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'term_created'\r\n        | 'term_changed'\r\n        | 'term_deleted'\r\n        | 'terms_moved';\r\n    export type WebhookLanguageAction = 'created' | 'changed' | 'deleted';\r\n    export type WebhookContentItemAction =\r\n        | 'published'\r\n        | 'unpublished'\r\n        | 'created'\r\n        | 'changed'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'workflow_step_changed';\r\n    export type WebhookDeliveryTriggerSlot = 'published' | 'preview';\r\n    export type WebhookDeliveryTriggersEvent = 'all' | 'specific';\r\n\r\n    export interface IDeleteWebhookResponseContract {}\r\n\r\n    export interface ILegacyWebhookTransitionsToContract {\r\n        id: string;\r\n    }\r\n\r\n    export interface ILegacyWebhookWorkflowStepChangesContract {\r\n        type: 'content_item_variant';\r\n        transitions_to: ILegacyWebhookTransitionsToContract[];\r\n    }\r\n\r\n    export interface ILegacyWebhookManagementApiContentChangesContract {\r\n        type: 'content_item_variant';\r\n        operations: WebhookManagementContentChangesOperation[];\r\n    }\r\n\r\n    export interface ILegacyWebhookDeliveryApiContentChangesContract {\r\n        type: 'taxonomy' | 'content_item_variant';\r\n        operations: WebhookWorkflowStepOperationContract[];\r\n    }\r\n\r\n    export interface ILegacyWebhookPreviewDeliveryApiContentChangesContract {\r\n        type: 'taxonomy' | 'content_item_variant';\r\n        operations: WebhookPreviewContentChangesOperation[];\r\n    }\r\n\r\n    export type WebhookAction<\r\n        T extends\r\n            | WebhookContentTypeAction\r\n            | WebhookAssetAction\r\n            | WebhookTaxonomyAction\r\n            | WebhookLanguageAction\r\n            | WebhookContentItemAction\r\n    > = {\r\n        action: T;\r\n    };\r\n\r\n    export interface IWebhookContentTypeContract {\r\n        enabled: boolean;\r\n        actions?: WebhookAction<WebhookContentTypeAction>[];\r\n        filters?: IContentTypeFilters;\r\n    }\r\n\r\n    export interface IWebhookAssetContract {\r\n        enabled: boolean;\r\n        actions?: WebhookAction<WebhookAssetAction>[];\r\n    }\r\n\r\n    export interface IWebhookTaxonomyContract {\r\n        enabled: boolean;\r\n        actions?: WebhookAction<WebhookTaxonomyAction>[];\r\n        filters?: ITaxonomyFilters;\r\n    }\r\n\r\n    export interface IWebhookLanguageContract {\r\n        enabled: boolean;\r\n        actions?: WebhookAction<WebhookLanguageAction>[];\r\n        filters?: ILanguageFilters;\r\n    }\r\n\r\n    export interface IContentItemFilters {\r\n        collections?: SharedContracts.IReferenceObjectContract[];\r\n        content_types?: SharedContracts.IReferenceObjectContract[];\r\n        languages?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface IContentTypeFilters {\r\n        content_types?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface ITaxonomyFilters {\r\n        taxonomies?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface ILanguageFilters {\r\n        languages?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export type ContentItemTransitionTo = {\r\n        workflow_identifier: SharedContracts.ICodenameIdReferenceContract;\r\n        step_identifier: SharedContracts.ICodenameIdReferenceContract;\r\n    };\r\n\r\n    export interface IWebhookContentItemContract {\r\n        enabled: boolean;\r\n        actions?: (WebhookAction<WebhookContentItemAction> & { transition_to?: ContentItemTransitionTo[] })[];\r\n        filters?: IContentItemFilters;\r\n    }\r\n\r\n    export interface ILegacyWebhookContract {\r\n        id: string;\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        last_modified?: string;\r\n        health_status?: string;\r\n        triggers: {\r\n            delivery_api_content_changes: ILegacyWebhookDeliveryApiContentChangesContract[];\r\n            workflow_step_changes: ILegacyWebhookWorkflowStepChangesContract[];\r\n            preview_delivery_api_content_changes: ILegacyWebhookPreviewDeliveryApiContentChangesContract[];\r\n            management_api_content_changes: ILegacyWebhookManagementApiContentChangesContract[];\r\n        };\r\n    }\r\n\r\n    export interface IWebhookHeaderContract {\r\n        key: string;\r\n        value: string;\r\n    }\r\n\r\n    export interface IWebhookContract {\r\n        id: string;\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        last_modified?: string;\r\n        enabled?: boolean;\r\n        headers?: IWebhookHeaderContract[];\r\n        health_status?: string;\r\n        delivery_triggers: {\r\n            slot: WebhookDeliveryTriggerSlot;\r\n            events: WebhookDeliveryTriggersEvent;\r\n            asset?: IWebhookAssetContract;\r\n            content_type?: IWebhookContentTypeContract;\r\n            taxonomy?: IWebhookTaxonomyContract;\r\n            language?: IWebhookLanguageContract;\r\n            content_item?: IWebhookContentItemContract;\r\n        };\r\n    }\r\n\r\n    export interface IGetLegacyWebhookContract extends ILegacyWebhookContract {}\r\n\r\n    export interface IGetWebhookContract extends IWebhookContract {}\r\n\r\n    export interface IAddLegacyWebhookContract extends ILegacyWebhookContract {}\r\n\r\n    export interface IAddWebhookContract extends IWebhookContract {}\r\n\r\n    export type ILegacyWebhookListContract = ILegacyWebhookContract[];\r\n\r\n    export type IWebhookListContract = IWebhookContract[];\r\n}\r\n","import { SharedContracts } from './shared-contracts';\r\n\r\nexport namespace WorkflowContracts {\r\n    export interface IWorkflowStepContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        transitions_to: string[];\r\n    }\r\n\r\n    export type WorkflowColor =\r\n        | 'gray'\r\n        | 'red'\r\n        | 'rose'\r\n        | 'light-purple'\r\n        | 'dark-purple'\r\n        | 'dark-blue'\r\n        | 'light-blue'\r\n        | 'sky-blue'\r\n        | 'mint-green'\r\n        | 'persian-green'\r\n        | 'dark-green'\r\n        | 'light-green'\r\n        | 'yellow'\r\n        | 'pink'\r\n        | 'orange'\r\n        | 'brown';\r\n\r\n    export type IListWorkflowsResponseContract = IWorkflowContract[];\r\n\r\n    export type IAddWorkflowContract = IWorkflowContract;\r\n\r\n    export type IUpdateWorkflowContract = IWorkflowContract;\r\n\r\n    export interface IWorkflowScopeContract {\r\n        content_types: SharedContracts.IReferenceObjectContract[];\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface IWorkflowStepTransitionsToContract {\r\n        step: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IWorkflowPublishedStepContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        create_new_version_role_ids: string[];\r\n        unpublish_role_ids: string[];\r\n    }\r\n\r\n    export interface IWorkflowScheduledStepContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n    }\r\n\r\n    export interface IWorkflowArchivedStepContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        role_ids: string[];\r\n    }\r\n\r\n    export interface IWorkflowStepNewContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        color: WorkflowColor;\r\n        transitions_to: IWorkflowStepTransitionsToContract[];\r\n        role_ids: string[];\r\n    }\r\n\r\n    export interface IWorkflowContract {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        scopes: IWorkflowScopeContract[];\r\n        steps: IWorkflowStepNewContract[];\r\n        published_step: IWorkflowPublishedStepContract;\r\n        scheduled_step: IWorkflowPublishedStepContract;\r\n        archived_step: IWorkflowArchivedStepContract;\r\n    }\r\n}\r\n","/* Public API */\r\nexport * from './queries';\r\nexport * from './models';\r\nexport * from './mappers';\r\nexport * from './config';\r\nexport * from './client';\r\nexport * from './services';\r\nexport * from './contracts';\r\nexport * from './responses';\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetFolderContracts } from '../contracts';\r\nimport { AssetFolderModels } from '../models';\r\nimport { AssetFolderResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetFolderMapper extends BaseMapper {\r\n    mapListAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IListAssetFoldersResponseContract>\r\n    ): AssetFolderResponses.AssetFoldersListResponse {\r\n        const items = response.data.folders.map((m) => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.AssetFoldersListResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapAddAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IAddAssetFoldersResponseContract>\r\n    ): AssetFolderResponses.AddAssetFoldersResponse {\r\n        const items = response.data.folders.map((m) => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.AddAssetFoldersResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapModifyAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IModifyAssetFoldersDataResponseContract>\r\n    ): AssetFolderResponses.ModifyAssetFoldersResponse {\r\n        const items = response.data.folders.map((m) => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.ModifyAssetFoldersResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapAssetFolder(rawFolder: AssetFolderContracts.IAssetFolderContract): AssetFolderModels.AssetFolder {\r\n        return new AssetFolderModels.AssetFolder({\r\n            externalId: rawFolder.external_id,\r\n            id: rawFolder.id,\r\n            name: rawFolder.name,\r\n            folders: rawFolder.folders.map((m) => this.mapAssetFolder(m)),\r\n            codename: rawFolder.codename,\r\n            _raw: rawFolder\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetFolderMapper = new AssetFolderMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetRenditionContracts } from '../contracts';\r\nimport { AssetRenditionModels } from '../models';\r\nimport { AssetRenditionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetRenditionMapper extends BaseMapper {\r\n    mapListAssetRenditionsResponse(\r\n        response: IResponse<AssetRenditionContracts.IListRenditionResponseContract>\r\n    ): AssetRenditionResponses.AssetRenditionsListResponse {\r\n        return new AssetRenditionResponses.AssetRenditionsListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: response.data.asset_renditions.map((m) => this.mapAssetRendition(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IViewRenditionResponseContract>\r\n    ): AssetRenditionResponses.ViewAssetRenditionResponse {\r\n        return new AssetRenditionResponses.ViewAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IModifyAssetRenditionResponseContract>\r\n    ): AssetRenditionResponses.ModifyAssetRenditionResponse {\r\n        return new AssetRenditionResponses.ModifyAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IAddAssetRenditionResponseContract>\r\n    ): AssetRenditionResponses.AddAssetRenditionResponse {\r\n        return new AssetRenditionResponses.AddAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapAssetRendition(raw: AssetRenditionContracts.IAssetRenditionContract): AssetRenditionModels.AssetRendition {\r\n        return new AssetRenditionModels.AssetRendition({\r\n            assetId: raw.asset_id,\r\n            externalId: raw.external_id,\r\n            lastModified: new Date(raw.last_modified),\r\n            renditionId: raw.rendition_id,\r\n            transformation: {\r\n                fit: raw.transformation.fit,\r\n                height: raw.transformation.height,\r\n                mode: raw.transformation.mode,\r\n                width: raw.transformation.width,\r\n                x: raw.transformation.x,\r\n                y: raw.transformation.y,\r\n                customHeight: raw.transformation.custom_height,\r\n                customWidth: raw.transformation.custom_width\r\n            },\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetRenditionMapper = new AssetRenditionMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetContracts } from '../contracts';\r\nimport { AssetModels } from '../models';\r\nimport { AssetResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetsMapper extends BaseMapper {\r\n    mapListingAssetsResponse(\r\n        response: IResponse<AssetContracts.IAssetsListingResponseContract>\r\n    ): AssetResponses.AssetsListResponse {\r\n        const pagination = super.mapPagination(response.data.pagination);\r\n        const items = response.data.assets.map((m) => this.mapAsset(m));\r\n\r\n        return new AssetResponses.AssetsListResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapViewAssetResponse(response: IResponse<AssetContracts.IAssetModelContract>): AssetResponses.ViewAssetResponse {\r\n        return new AssetResponses.ViewAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUploadBinaryFileResponse(\r\n        response: IResponse<AssetContracts.IUploadBinaryFileResponseContract>\r\n    ): AssetResponses.UploadBinaryFileResponse {\r\n        return new AssetResponses.UploadBinaryFileResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetReference(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddAssetResponse(\r\n        response: IResponse<AssetContracts.IAddAssetResponseContract>\r\n    ): AssetResponses.AddAssetResponse {\r\n        return new AssetResponses.AddAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpdateAssetResponse(\r\n        response: IResponse<AssetContracts.IUpdateAssetResponseContract>\r\n    ): AssetResponses.UpdateAssetResponse {\r\n        return new AssetResponses.UpdateAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpsertAssetResponse(\r\n        response: IResponse<AssetContracts.IUpsertAssetResponseContract>\r\n    ): AssetResponses.UpsertAssertResponse {\r\n        return new AssetResponses.UpsertAssertResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapAssetReference(rawFileReference: AssetContracts.IAssetFileReferenceContract): AssetModels.AssetFileReference {\r\n        return new AssetModels.AssetFileReference({\r\n            id: rawFileReference.id,\r\n            type: rawFileReference.type\r\n        });\r\n    }\r\n\r\n    mapAsset(rawAsset: AssetContracts.IAssetModelContract): AssetModels.Asset {\r\n        return new AssetModels.Asset({\r\n            descriptions: rawAsset.descriptions.map(\r\n                (m) =>\r\n                    new AssetModels.AssetFileDescription({\r\n                        description: m.description,\r\n                        language: super.mapReference(m.language)\r\n                    })\r\n            ),\r\n            externalId: rawAsset.external_id,\r\n            fileName: rawAsset.file_name,\r\n            fileReference: this.mapAssetReference(rawAsset.file_reference),\r\n            id: rawAsset.id,\r\n            url: rawAsset.url,\r\n            imageHeight: rawAsset.image_height,\r\n            imageWidth: rawAsset.image_width,\r\n            lastModified: new Date(rawAsset.last_modified),\r\n            size: rawAsset.size,\r\n            title: rawAsset.title,\r\n            type: rawAsset.type,\r\n            folder: rawAsset.folder,\r\n            codename: rawAsset.codename,\r\n            collection: rawAsset.collection,\r\n            elements: rawAsset.elements,\r\n            _raw: rawAsset\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetsMapper = new AssetsMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SharedContracts } from '../contracts';\r\nimport { SharedModels } from '../models';\r\nimport { BaseResponses } from '../responses';\r\n\r\nexport abstract class BaseMapper {\r\n    mapResponseDebug(baseResponse: IResponse<any>): BaseResponses.IContentManagementResponseDebug {\r\n        if (!baseResponse) {\r\n            throw Error(`Cannot map debug model from the response`);\r\n        }\r\n\r\n        return {\r\n            response: baseResponse\r\n        };\r\n    }\r\n\r\n    mapPagination(rawPagination: SharedContracts.IPaginationModelContract): SharedModels.Pagination {\r\n        return new SharedModels.Pagination(rawPagination.continuation_token, rawPagination.next_page);\r\n    }\r\n\r\n    mapReference(rawReference: SharedContracts.IReferenceObjectContract): SharedModels.ReferenceObject {\r\n        return new SharedModels.ReferenceObject({\r\n            codename: rawReference.codename,\r\n            externalId: rawReference.external_id,\r\n            id: rawReference.id\r\n        });\r\n    }\r\n\r\n    mapIdReference(rawReference: SharedContracts.IIdReferenceContract): SharedModels.IIdRefenceObject {\r\n        return {\r\n            id: rawReference.id\r\n        };\r\n    }\r\n\r\n    mapEmptyResponse(response: IResponse<any>): BaseResponses.EmptyContentManagementResponse {\r\n        return new BaseResponses.EmptyContentManagementResponse(this.mapResponseDebug(response), undefined, undefined);\r\n    }\r\n}\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { CollectionContracts } from '../contracts';\r\nimport { CollectionModels } from '../models';\r\nimport { CollectionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class CollectionsMapper extends BaseMapper {\r\n    mapListCollectionsResponse(\r\n        response: IResponse<CollectionContracts.ICollectionListResponseContract>\r\n    ): CollectionResponses.CollectionsListResponse {\r\n        const items = response.data.collections.map((m) => this.mapCollection(m));\r\n\r\n        return new CollectionResponses.CollectionsListResponse(super.mapResponseDebug(response), response.data, {\r\n            lastModified: response.data.last_modified ? new Date(response.data.last_modified) : undefined,\r\n            collections: items\r\n        });\r\n    }\r\n\r\n    mapSetCollectionsResponse(\r\n        response: IResponse<CollectionContracts.ISetCollectionsResponseContract>\r\n    ): CollectionResponses.SetCollectionsResponse {\r\n        const items = response.data.collections.map((m) => this.mapCollection(m));\r\n\r\n        return new CollectionResponses.SetCollectionsResponse(super.mapResponseDebug(response), response.data, {\r\n            lastModified: response.data.last_modified ? new Date(response.data.last_modified) : undefined,\r\n            collections: items\r\n        });\r\n    }\r\n\r\n    mapCollection(rawCollection: CollectionContracts.ICollectionContract): CollectionModels.Collection {\r\n        return new CollectionModels.Collection({\r\n            id: rawCollection.id,\r\n            name: rawCollection.name,\r\n            codename: rawCollection.codename,\r\n            _raw: rawCollection\r\n        });\r\n    }\r\n}\r\n\r\nexport const collectionsMappers = new CollectionsMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { ContentItemContracts } from '../contracts';\r\nimport { ContentItemModels } from '../models';\r\nimport { ContentItemResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ContentItemsMapper extends BaseMapper {\r\n    mapListingItemsResponse(\r\n        response: IResponse<ContentItemContracts.IContentItemsListingResponseContract>\r\n    ): ContentItemResponses.ContentItemsResponse {\r\n        const pagination = super.mapPagination(response.data.pagination);\r\n        const items = response.data.items.map((m) => this.mapContentItem(m));\r\n\r\n        return new ContentItemResponses.ContentItemsResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapViewContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IContentItemModelContract>\r\n    ): ContentItemResponses.ViewContentItemResponse {\r\n        return new ContentItemResponses.ViewContentItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapContentItem(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IAddContentItemResponseContract>\r\n    ): ContentItemResponses.AddContentItemResponse {\r\n        return new ContentItemResponses.AddContentItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapContentItem(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpdateContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IUpdateContentItemResponseContract>\r\n    ): ContentItemResponses.UpdateContentItemResponse {\r\n        return new ContentItemResponses.UpdateContentItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapContentItem(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpsertContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IUpsertContentItemResponseContract>\r\n    ): ContentItemResponses.UpsertContentItemResponse {\r\n        return new ContentItemResponses.UpsertContentItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapContentItem(response.data)\r\n        );\r\n    }\r\n\r\n    mapContentItem(rawItem: ContentItemContracts.IContentItemModelContract): ContentItemModels.ContentItem {\r\n        return new ContentItemModels.ContentItem({\r\n            codename: rawItem.codename,\r\n            externalId: rawItem.external_id,\r\n            id: rawItem.id,\r\n            lastModified: new Date(rawItem.last_modified),\r\n            name: rawItem.name,\r\n            type: rawItem.type,\r\n            collection: super.mapIdReference(rawItem.collection),\r\n            spaces: rawItem.spaces.map((m) => super.mapIdReference(m)),\r\n            sitemapLocations: rawItem.sitemap_locations?.map((m) => super.mapIdReference(m)) ?? [],\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const contentItemsMapper = new ContentItemsMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ContentTypeContracts } from '../contracts';\r\nimport { ContentTypeModels } from '../models';\r\nimport { ContentTypeResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class ContentTypeMapper extends BaseMapper {\r\n\r\n    mapListingResponse(response: IResponse<ContentTypeContracts.IContentTypeListResponseContract>): ContentTypeResponses.ContentTypeListResponse {\r\n        return new ContentTypeResponses.ContentTypeListResponse(\r\n            super.mapResponseDebug(response), response.data, {\r\n                items: response.data.types.map(m => this.mapContentType(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewContentTypeResponse(response: IResponse<ContentTypeContracts.IViewContentTypeResponseContract>): ContentTypeResponses.ViewContentTypeResponse {\r\n        return new ContentTypeResponses.ViewContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyContentTypeResponse(response: IResponse<ContentTypeContracts.IModifyContentTypeResponseContract>): ContentTypeResponses.ModifyContentTypeResponse {\r\n        return new ContentTypeResponses.ModifyContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddContentTypeResponse(response: IResponse<ContentTypeContracts.IAddContentTypeResponseContract>): ContentTypeResponses.AddContentTypeResponse {\r\n        return new ContentTypeResponses.AddContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapContentType(rawContentType: ContentTypeContracts.IContentTypeContract): ContentTypeModels.ContentType {\r\n        return new ContentTypeModels.ContentType({\r\n            codename: rawContentType.codename,\r\n            id: rawContentType.id,\r\n            name: rawContentType.name,\r\n            elements: elementsMapper.mapTypeElements(rawContentType.elements),\r\n            lastModified: new Date(rawContentType.last_modified),\r\n            externalId: rawContentType.external_id,\r\n            contentGroups: rawContentType.content_groups ? rawContentType.content_groups.map(m => this.mapContentTypeGroup(m)) : undefined,\r\n            _raw: rawContentType\r\n        });\r\n    }\r\n\r\n    mapContentTypeGroup(rawContentTypeGroup: ContentTypeContracts.IContentTypeGroup): ContentTypeModels.ContentTypeGroup {\r\n        return new ContentTypeModels.ContentTypeGroup({\r\n            name: rawContentTypeGroup.name,\r\n            codename: rawContentTypeGroup.codename,\r\n            externalId: rawContentTypeGroup.external_id,\r\n            id: rawContentTypeGroup.id\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const contentTypeMapper = new ContentTypeMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ContentTypeSnippetContracts } from '../contracts';\r\nimport { ContentTypeSnippetModels } from '../models';\r\nimport { ContentTypeSnippetResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class ContentTypeSnippetMapper extends BaseMapper {\r\n\r\n    mapListingResponse(response: IResponse<ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract>): ContentTypeSnippetResponses.ContentTypeSnippetListResponse {\r\n        return new ContentTypeSnippetResponses.ContentTypeSnippetListResponse(\r\n            super.mapResponseDebug(response), response.data, {\r\n                items: response.data.snippets.map(m => this.mapContentTypeSnippet(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.ViewContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.ViewContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.AddContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.AddContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.AddContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapContentTypeSnippet(rawContentType: ContentTypeSnippetContracts.IContentTypeSnippetContract): ContentTypeSnippetModels.ContentTypeSnippet {\r\n        return new ContentTypeSnippetModels.ContentTypeSnippet({\r\n            codename: rawContentType.codename,\r\n            id: rawContentType.id,\r\n            name: rawContentType.name,\r\n            elements: elementsMapper.mapTypeElements(rawContentType.elements),\r\n            lastModified: new Date(rawContentType.last_modified),\r\n            externalId: rawContentType.external_id,\r\n            _raw: rawContentType\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const contentTypeSnippetMapper = new ContentTypeSnippetMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { CustomAppsContracts } from '../contracts';\r\nimport { CustomAppModels } from '../models';\r\nimport { CustomAppsResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class CustomAppMapper extends BaseMapper {\r\n    mapGetCustomAppResponse(\r\n        response: IResponse<CustomAppsContracts.ICustomAppContract>\r\n    ): CustomAppsResponses.GetCustomAppResponse {\r\n        return new CustomAppsResponses.GetCustomAppResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapCustomApp(response.data)\r\n        );\r\n    }\r\n\r\n    mapListCustomAppsResponse(\r\n        response: IResponse<CustomAppsContracts.ICustomAppsListResponseContract>\r\n    ): CustomAppsResponses.CustomAppsListResponse {\r\n        return new CustomAppsResponses.CustomAppsListResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: super.mapPagination(response.data.pagination),\r\n            items: response.data.custom_apps.map((m) => this.mapCustomApp(m))\r\n        });\r\n    }\r\n\r\n    mapModifyCustomAppResponse(\r\n        response: IResponse<CustomAppsContracts.ICustomAppContract>\r\n    ): CustomAppsResponses.ModifyCustomAppResponse {\r\n        return new CustomAppsResponses.ModifyCustomAppResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapCustomApp(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddCustomAppResponse(\r\n        response: IResponse<CustomAppsContracts.ICustomAppContract>\r\n    ): CustomAppsResponses.AddCustomAppResponse {\r\n        return new CustomAppsResponses.AddCustomAppResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapCustomApp(response.data)\r\n        );\r\n    }\r\n\r\n    mapCustomApp(rawCustomApp: CustomAppsContracts.ICustomAppContract): CustomAppModels.CustomApp {\r\n        return new CustomAppModels.CustomApp({\r\n            ...rawCustomApp,\r\n            _raw: rawCustomApp\r\n        });\r\n    }\r\n}\r\n\r\nexport const customAppMapper = new CustomAppMapper();\r\n","import { ElementContracts, SharedContracts } from '../contracts';\r\nimport { ContentTypeElements, ElementModels, SharedModels } from '../models';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ElementsMapper extends BaseMapper {\r\n    mapTypeElements(\r\n        elementsRaw: ElementContracts.IContentTypeElementContract[]\r\n    ): ContentTypeElements.ContentTypeElementModel[] {\r\n        return elementsRaw.map((m) => this.mapTypeElement(m));\r\n    }\r\n\r\n    mapTypeElement(\r\n        rawElement: ElementContracts.IContentTypeElementContract\r\n    ): ContentTypeElements.ContentTypeElementModel {\r\n        return rawElement as ContentTypeElements.ContentTypeElementModel;\r\n    }\r\n\r\n    mapElements(elementsRaw: ElementContracts.IContentItemElementContract[]): ElementModels.ContentItemElement[] {\r\n        return elementsRaw.map((m) => {\r\n            return this.mapElement(m);\r\n        });\r\n    }\r\n\r\n    mapElement(rawElement: ElementContracts.IContentItemElementContract): ElementModels.ContentItemElement {\r\n        return new ElementModels.ContentItemElement({\r\n            element: super.mapReference(rawElement.element),\r\n            value: this.mapElementValue(rawElement.value),\r\n            components: this.mapElementComponents(rawElement.components ?? []),\r\n            display_timezone: rawElement.display_timezone,\r\n            mode: rawElement.mode,\r\n            searchableValue: rawElement.searchable_value,\r\n            _raw: rawElement\r\n        });\r\n    }\r\n\r\n    private mapElementComponents(\r\n        components: ElementContracts.IContentItemElementComponent[]\r\n    ): ElementModels.ContentItemElementComponent[] {\r\n        return components.map(\r\n            (m) =>\r\n                new ElementModels.ContentItemElementComponent({\r\n                    elements: this.mapElements(m.elements),\r\n                    id: m.id,\r\n                    type: m.type,\r\n                    _raw: m\r\n                })\r\n        );\r\n    }\r\n\r\n    private mapElementValue(\r\n        rawValue: string | number | SharedContracts.IReferenceObjectContract[]\r\n    ): string | number | SharedModels.ReferenceObject[] {\r\n        if (Array.isArray(rawValue)) {\r\n            return rawValue.map((m) => super.mapReference(m));\r\n        }\r\n\r\n        return rawValue;\r\n    }\r\n}\r\n\r\nexport const elementsMapper = new ElementsMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { EnvironmentModels } from '../models';\r\nimport { EnvironmentResponses } from '../responses';\r\n\r\nimport { EnvironmentContracts } from '../contracts';\r\nimport { BaseMapper } from './base-mapper';\r\nimport CloneEnvironmentModel = EnvironmentModels.CloneEnvironmentModel;\r\n\r\nexport class EnvironmentMapper extends BaseMapper {\r\n    mapGetEnvironmentCloningStateResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentCloningStateResponseContract>\r\n    ): EnvironmentResponses.GetCloningStateResponse {\r\n        return new EnvironmentResponses.GetCloningStateResponse(super.mapResponseDebug(response), response.data, {\r\n            cloningInfo: new EnvironmentModels.EnvironmentCloningStateModel(response.data.cloning_state)\r\n        });\r\n    }\r\n\r\n    mapModifyEnvironmentResponse(\r\n        response: IResponse<EnvironmentContracts.IModifyEnvironmentResponseContract>\r\n    ): EnvironmentResponses.ModifyEnvironmentResponse {\r\n        return new EnvironmentResponses.ModifyEnvironmentResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            new EnvironmentModels.EnvironmentModel(response.data.id, response.data.name, response.data.is_production)\r\n        );\r\n    }\r\n\r\n    mapCloneEnvironmentResponse(\r\n        response: IResponse<EnvironmentContracts.ICloneEnvironmentResponseContract>\r\n    ): EnvironmentResponses.CloneEnvironmentResponse {\r\n        return new EnvironmentResponses.CloneEnvironmentResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            new CloneEnvironmentModel(\r\n                response.data.id,\r\n                response.data.management_api_key,\r\n                response.data.delivery_preview_api_key,\r\n                response.data.secured_delivery_api_key\r\n            )\r\n        );\r\n    }\r\n\r\n    mapProjectValidationIssuesListResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentValidationListResponseContract>\r\n    ): EnvironmentResponses.EnvironmentValidationIssuesListResponse {\r\n        return new EnvironmentResponses.EnvironmentValidationIssuesListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: response.data.issues.map((m) => this.mapEnvironmentValidationIssue(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapStartEnvironmentValidationResponse(\r\n        response: IResponse<EnvironmentContracts.IStartEnvironmentValidationResponseContract>\r\n    ): EnvironmentResponses.StartEnvironmentValidationResponse {\r\n        return new EnvironmentResponses.StartEnvironmentValidationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                id: response.data.id,\r\n                status: response.data.status,\r\n                validation_result: response.data.validation_result\r\n            }\r\n        );\r\n    }\r\n\r\n    mapCheckEnvironmentValidationResponse(\r\n        response: IResponse<EnvironmentContracts.ICheckEnvironmentValidationResponseContract>\r\n    ): EnvironmentResponses.CheckEnvironmentValidationResponse {\r\n        return new EnvironmentResponses.CheckEnvironmentValidationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                id: response.data.id,\r\n                status: response.data.status,\r\n                validation_result: response.data.validation_result\r\n            }\r\n        );\r\n    }\r\n\r\n    mapEnvironmentInformationResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentInformationResponseContract>\r\n    ): EnvironmentResponses.EnvironmentInformationResponse {\r\n        return new EnvironmentResponses.EnvironmentInformationResponse(super.mapResponseDebug(response), response.data, {\r\n            project: new EnvironmentModels.EnvironmentInformationModel(\r\n                response.data.id,\r\n                response.data.name,\r\n                response.data.environment\r\n            )\r\n        });\r\n    }\r\n\r\n    mapProjectModel(raw: EnvironmentContracts.IEnvironmentReportModelContract): EnvironmentModels.EnvironmentReportModel {\r\n        return new EnvironmentModels.EnvironmentReportModel(raw.id, raw.name);\r\n    }\r\n\r\n    mapTypeModel(raw: EnvironmentContracts.IEnvironmentTypeContract): EnvironmentModels.EnvironmentTypeModel {\r\n        return new EnvironmentModels.EnvironmentTypeModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapItemModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantContentItemContract\r\n    ): EnvironmentModels.EnvironmentVariantContentItemModel {\r\n        return new EnvironmentModels.EnvironmentVariantContentItemModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapLanguageModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantLanguageContract\r\n    ): EnvironmentModels.EnvironmentVariantLanguageModel {\r\n        return new EnvironmentModels.EnvironmentVariantLanguageModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapIssueModel(raw: EnvironmentContracts.IEnvironmentIssueContract): EnvironmentModels.EnvironmentIssueModel {\r\n        return new EnvironmentModels.EnvironmentIssueModel(this.mapVariantElementModel(raw.element), raw.messages);\r\n    }\r\n\r\n    mapTypeIssue(raw: EnvironmentContracts.IEnvironmentTypeIssueContract): EnvironmentModels.EnvironmentTypeIssueModel {\r\n        return new EnvironmentModels.EnvironmentTypeIssueModel(\r\n            this.mapTypeModel(raw.type),\r\n            raw.issues.map((m) => this.mapIssueModel(m))\r\n        );\r\n    }\r\n\r\n    mapVariantIssue(\r\n        raw: EnvironmentContracts.IEnvironmentVariantIssueContract\r\n    ): EnvironmentModels.EnvironmentVariantIssueModel {\r\n        return new EnvironmentModels.EnvironmentVariantIssueModel(\r\n            this.mapItemModel(raw.item),\r\n            this.mapLanguageModel(raw.language),\r\n            raw.issues.map((m) => this.mapIssueModel(m))\r\n        );\r\n    }\r\n\r\n    mapVariantElementModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantElementContract\r\n    ): EnvironmentModels.EnvironmentVariantElementModel {\r\n        return new EnvironmentModels.EnvironmentVariantElementModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapEnvironmentValidationIssue(\r\n        raw: EnvironmentContracts.IEnvironmentValidationIssueContract\r\n    ): EnvironmentModels.EnvironmentValidationVariantIssueModel | EnvironmentModels.EnvironmentValidationTypeIssueModel {\r\n        if (raw.issue_type === 'variant_issue') {\r\n            return new EnvironmentModels.EnvironmentValidationVariantIssueModel(\r\n                this.mapItemModel(raw.item as EnvironmentContracts.IEnvironmentVariantContentItemContract),\r\n                this.mapLanguageModel(raw.language as EnvironmentContracts.IEnvironmentVariantLanguageContract),\r\n                raw.issues.map((m) => this.mapIssueModel(m))\r\n            );\r\n        }\r\n\r\n        if (raw.issue_type === 'type_issue') {\r\n            return new EnvironmentModels.EnvironmentValidationTypeIssueModel(\r\n                this.mapTypeModel(raw.type as EnvironmentContracts.IEnvironmentTypeContract),\r\n                raw.issues.map((m) => this.mapIssueModel(m))\r\n            );\r\n        }\r\n\r\n        throw Error(`Unsupported issue type '${raw.issue_type}'`);\r\n    }\r\n}\r\n\r\nexport const environmentMapper = new EnvironmentMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { GenericResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class GenericMapper extends BaseMapper {\r\n    mapGenericResponse(response: IResponse<any>): GenericResponses.GenericResponse {\r\n        return new GenericResponses.GenericResponse(super.mapResponseDebug(response), response.data);\r\n    }\r\n}\r\n\r\nexport const genericMapper = new GenericMapper();\r\n","export * from './base-mapper';\r\nexport * from './content-items-mapper';\r\nexport * from './elements-mapper';\r\nexport * from './assets-mapper';\r\nexport * from './taxonomy-mapper';\r\nexport * from './content-type-mapper';\r\nexport * from './environment-mapper';\r\nexport * from './language-variant-mapper';\r\nexport * from './content-type-snippet-mapper';\r\nexport * from './workflow-mapper';\r\nexport * from './language-mapper';\r\nexport * from './webhook-mapper';\r\nexport * from './asset-folder-mapper';\r\nexport * from './generic-mapper';\r\nexport * from './collections-mapper';\r\nexport * from './subscription-mapper';\r\nexport * from './role-mapper';\r\nexport * from './project-user-mapper';\r\nexport * from './asset-rendition-mapper';\r\nexport * from './space-mapper';\r\nexport * from './preview-mapper';\r\nexport * from './web-spotlight-mapper';\r\nexport * from './custom-app-mapper';\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { LanguageContracts } from '../contracts';\r\nimport { LanguageModels } from '../models';\r\nimport { LanguageResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class LanguageMapper extends BaseMapper {\r\n    mapViewLanguageResponse(\r\n        response: IResponse<LanguageContracts.IViewLanguageResponseContract>\r\n    ): LanguageResponses.ViewLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.ViewLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapModifyLanguageResponse(\r\n        response: IResponse<LanguageContracts.IModifyLanguageResponseContract>\r\n    ): LanguageResponses.ModifyLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.ModifyLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapAddLanguageResponse(\r\n        response: IResponse<LanguageContracts.IAddLanguageResponseContract>\r\n    ): LanguageResponses.AddLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.AddLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapListLanguagesResponse(\r\n        response: IResponse<LanguageContracts.IListLanguagesResponseContract>\r\n    ): LanguageResponses.ListLanguagesResponse {\r\n        const languages = response.data.languages.map(m => this.mapLanguage(m));\r\n        return new LanguageResponses.ListLanguagesResponse(super.mapResponseDebug(response), response.data, {\r\n            items: languages,\r\n            pagination: super.mapPagination(response.data.pagination)\r\n        });\r\n    }\r\n\r\n    mapLanguage(rawModel: LanguageContracts.ILanguageModelContract): LanguageModels.LanguageModel {\r\n        return new LanguageModels.LanguageModel({\r\n            codename: rawModel.codename,\r\n            externalId: rawModel.external_id,\r\n            id: rawModel.id,\r\n            isActive: rawModel.is_active,\r\n            isDefault: rawModel.is_default,\r\n            name: rawModel.name,\r\n            fallbackLanguage: rawModel.fallback_language\r\n                ? new LanguageModels.FallbackLanguageModel({\r\n                      id: rawModel.fallback_language.id\r\n                  })\r\n                : undefined,\r\n            _raw: rawModel\r\n        });\r\n    }\r\n}\r\n\r\nexport const languageMapper = new LanguageMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { LanguageVariantContracts } from '../contracts';\r\nimport { LanguageVariantModels } from '../models';\r\nimport { LanguageVariantResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class LanguageVariantMapper extends BaseMapper {\r\n    mapUpsertLanguageVariantResponse(\r\n        response: IResponse<LanguageVariantContracts.IUpsertLanguageVariantResponseContract>\r\n    ): LanguageVariantResponses.UpsertLanguageVariantResponse {\r\n        const variant = this.mapLanguageVariant(response.data);\r\n        return new LanguageVariantResponses.UpsertLanguageVariantResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            variant\r\n        );\r\n    }\r\n\r\n    mapViewLanguageVariantResponse(\r\n        response: IResponse<LanguageVariantContracts.IViewLanguageVariantResponseContract>\r\n    ): LanguageVariantResponses.ViewLanguageVariantResponse {\r\n        const variant = this.mapLanguageVariant(response.data);\r\n        return new LanguageVariantResponses.ViewLanguageVariantResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            variant\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsOfItemResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[]>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfItemResponse {\r\n        const variants = response.data.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsByCollectionResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsByCollectionResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsByCollectionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapFilterLanguageVariantsResponse(\r\n        response: IResponse<LanguageVariantContracts.IFilterLanguageVariantsResponseContract>\r\n    ): LanguageVariantResponses.FilterLanguageVariantsResponse {\r\n        return new LanguageVariantResponses.FilterLanguageVariantsResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: response.data.data,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    mapLanguageVariantsBySpaceResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsBySpaceResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsBySpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsOfContentTypeResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsOfContentTypeWithComponentsResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariantWithComponents(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantWithComponents(\r\n        rawVariant: LanguageVariantContracts.ILanguageVariantModelsContract\r\n    ): LanguageVariantModels.ContentItemLanguageWithComponentsVariant {\r\n        return new LanguageVariantModels.ContentItemLanguageWithComponentsVariant({\r\n            rawElements: rawVariant.elements,\r\n            elements: elementsMapper.mapElements(rawVariant.elements),\r\n            item: super.mapReference(rawVariant.item),\r\n            language: super.mapReference(rawVariant.language),\r\n            lastModified: new Date(rawVariant.last_modified),\r\n            dueDate: this.mapDueDate(rawVariant.due_date),\r\n            schedule: this.mapSchedule(rawVariant.schedule),\r\n            workflow: {\r\n                workflowIdentifier: super.mapReference(rawVariant.workflow.workflow_identifier),\r\n                stepIdentifier: super.mapReference(rawVariant.workflow.step_identifier)\r\n            },\r\n            _raw: rawVariant\r\n        });\r\n    }\r\n\r\n    mapLanguageVariant(\r\n        rawVariant: LanguageVariantContracts.ILanguageVariantModelContract\r\n    ): LanguageVariantModels.ContentItemLanguageVariant {\r\n        return new LanguageVariantModels.ContentItemLanguageVariant({\r\n            elements: elementsMapper.mapElements(rawVariant.elements),\r\n            item: super.mapReference(rawVariant.item),\r\n            language: super.mapReference(rawVariant.language),\r\n            lastModified: new Date(rawVariant.last_modified),\r\n            dueDate: this.mapDueDate(rawVariant.due_date),\r\n            schedule: this.mapSchedule(rawVariant.schedule),\r\n            note: rawVariant.note,\r\n            contributors: rawVariant.contributors,\r\n            workflow: {\r\n                workflowIdentifier: super.mapReference(rawVariant.workflow.workflow_identifier),\r\n                stepIdentifier: super.mapReference(rawVariant.workflow.step_identifier)\r\n            },\r\n            _raw: rawVariant\r\n        });\r\n    }\r\n\r\n    private mapDueDate(\r\n        dueDateRaw: LanguageVariantContracts.ILanguageVariantDueDate\r\n    ): LanguageVariantModels.ILanguageVariantDueDate {\r\n        return dueDateRaw;\r\n    }\r\n\r\n    private mapSchedule(\r\n        scheduleRaw: LanguageVariantContracts.ILanguageVariantSchedule\r\n    ): LanguageVariantModels.ILanguageVariantSchedule {\r\n        return {\r\n            publishDisplayTimezone: scheduleRaw.publish_display_timezone,\r\n            publishTime: scheduleRaw.publish_time,\r\n            unpublishDisplayTimezone: scheduleRaw.unpublish_display_timezone,\r\n            unpublishTime: scheduleRaw.unpublish_time\r\n        };\r\n    }\r\n}\r\n\r\nexport const languageVariantMapper = new LanguageVariantMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { PreviewContracts } from '../contracts';\r\nimport { PreviewModels } from '../models';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { PreviewResponses } from '../responses/preview/preview-responses';\r\n\r\nexport class PreviewMapper extends BaseMapper {\r\n    mapPreviewConfigurationResponse(\r\n        response: IResponse<PreviewContracts.IPreviewConfigurationContract>\r\n    ): PreviewResponses.PreviewConfigurationResponse {\r\n        return new PreviewResponses.PreviewConfigurationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapPreviewConfiguration(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyConfigurationResponse(\r\n        response: IResponse<PreviewContracts.IPreviewConfigurationContract>\r\n    ): PreviewResponses.ModifyConfigurationResponse {\r\n        return new PreviewResponses.ModifyConfigurationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapPreviewConfiguration(response.data)\r\n        );\r\n    }\r\n\r\n    private mapPreviewConfiguration(\r\n        rawItem: PreviewContracts.IPreviewConfigurationContract\r\n    ): PreviewModels.PreviewConfiguration {\r\n        return new PreviewModels.PreviewConfiguration({\r\n            _raw: rawItem,\r\n            previewUrlPatterns: rawItem.preview_url_patterns.map((urlPatternsContract) => {\r\n                const urlPatterns: PreviewModels.IPreviewUrlPatterns = {\r\n                    contentType: urlPatternsContract.content_type,\r\n                    urlPatterns: urlPatternsContract.url_patterns.map((urlPatternContract) => {\r\n                        const urlPattern: PreviewModels.IPreviewUrlPattern = {\r\n                            space: urlPatternContract.space,\r\n                            urlPattern: urlPatternContract.url_pattern\r\n                        };\r\n\r\n                        return urlPattern;\r\n                    })\r\n                };\r\n\r\n                return urlPatterns;\r\n            }),\r\n            spaceDomains: rawItem.space_domains\r\n        });\r\n    }\r\n}\r\n\r\nexport const previewMapper = new PreviewMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ProjectUserContracts } from '../contracts';\r\nimport { ProjectUserModels } from '../models';\r\nimport { ProjectUsersResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ProjectUserMapper extends BaseMapper {\r\n    mapInviteUserResponse(\r\n        response: IResponse<ProjectUserContracts.IInviteUserResponseContract>\r\n    ): ProjectUsersResponses.InviteUserResponse {\r\n        return new ProjectUsersResponses.InviteUserResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapProjectUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapChangeUserRolesResponse(\r\n        response: IResponse<ProjectUserContracts.IChangeUserRolesResponseContract>\r\n    ): ProjectUsersResponses.ChangeUserRolesResponse {\r\n        return new ProjectUsersResponses.ChangeUserRolesResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapProjectUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapCollectionGroup(\r\n        rawItem: ProjectUserContracts.IProjectUserCollectionGroupContract\r\n    ): ProjectUserModels.CollectionGroup {\r\n        return new ProjectUserModels.CollectionGroup({\r\n            collections: rawItem.collections,\r\n            roles: rawItem.roles,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n\r\n    mapProjectUser(rawItem: ProjectUserContracts.IUserContract): ProjectUserModels.ProjectUser {\r\n        return new ProjectUserModels.ProjectUser({\r\n            userId: rawItem.user_id,\r\n            collectionGroups: rawItem.collection_groups.map((m) => this.mapCollectionGroup(m)),\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const projectUserMapper = new ProjectUserMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { RoleContracts } from '../contracts';\r\nimport { RoleModels } from '../models';\r\nimport { RoleResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class RoleMapper extends BaseMapper {\r\n    mapRoleListResponse(response: IResponse<RoleContracts.IRoleListResponseContract>): RoleResponses.RoleListResponse {\r\n        const items = response.data.roles.map((m) => this.mapRole(m));\r\n\r\n        return new RoleResponses.RoleListResponse(super.mapResponseDebug(response), response.data, {\r\n            roles: items\r\n        });\r\n    }\r\n\r\n    mapViewRoleResponse(response: IResponse<RoleContracts.IRoleContract>): RoleResponses.ViewRoleResponse {\r\n        return new RoleResponses.ViewRoleResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapRole(response.data)\r\n        );\r\n    }\r\n\r\n    mapRole(rawItem: RoleContracts.IRoleContract): RoleModels.Role {\r\n        return new RoleModels.Role({\r\n            id: rawItem.id,\r\n            name: rawItem.name,\r\n            codename: rawItem.codename,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const roleMapper = new RoleMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SpaceContracts } from '../contracts';\r\nimport { SpaceModels } from '../models';\r\nimport { SpaceResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class SpacesMapper extends BaseMapper {\r\n    mapListingSpacesResponse(\r\n        response: IResponse<SpaceContracts.ISpacesListingResponseContract>\r\n    ): SpaceResponses.SpacesListResponse {\r\n        const items = response.data.map((m) => this.mapSpace(m));\r\n\r\n        return new SpaceResponses.SpacesListResponse(super.mapResponseDebug(response), response.data, items);\r\n    }\r\n\r\n    mapViewSpaceResponse(response: IResponse<SpaceContracts.ISpaceContract>): SpaceResponses.ViewSpaceResponse {\r\n        return new SpaceResponses.ViewSpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddSpaceResponse(\r\n        response: IResponse<SpaceContracts.IAddSpaceResponseContract>\r\n    ): SpaceResponses.AddSpaceResponse {\r\n        return new SpaceResponses.AddSpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifySpaceResponse(\r\n        response: IResponse<SpaceContracts.IModifySpaceResponseContract>\r\n    ): SpaceResponses.ModifySpaceResponse {\r\n        return new SpaceResponses.ModifySpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapSpace(rawItem: SpaceContracts.ISpaceContract): SpaceModels.Space {\r\n        return new SpaceModels.Space({\r\n            codename: rawItem.codename,\r\n            id: rawItem.id,\r\n            name: rawItem.name,\r\n            webSpotlightRootItem: rawItem.web_spotlight_root_item,\r\n            collections: rawItem.collections,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const spacesMapper = new SpacesMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SubscriptionContracts } from '../contracts';\r\nimport { SharedModels, SubscriptionModels } from '../models';\r\nimport { SubscriptionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class SubscriptionMapper extends BaseMapper {\r\n    mapSubscriptionProjectsListResponse(\r\n        response: IResponse<SubscriptionContracts.IListSubscriptionProjectsResponseContract>\r\n    ): SubscriptionResponses.SubscriptionProjectsListResponse {\r\n        const subscriptionProjects: SubscriptionModels.SubscriptionProject[] = response.data.projects.map((m) =>\r\n            this.mapSubscriptionProject(m)\r\n        );\r\n        const pagination: SharedModels.Pagination = super.mapPagination(response.data.pagination);\r\n\r\n        return new SubscriptionResponses.SubscriptionProjectsListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                pagination: pagination,\r\n                items: subscriptionProjects\r\n            }\r\n        );\r\n    }\r\n\r\n    mapSubscriptionUsersListResponse(\r\n        response: IResponse<SubscriptionContracts.IListSubscriptionUsersResponseContract>\r\n    ): SubscriptionResponses.SubscriptionUsersListResponse {\r\n        const subscriptionProjects: SubscriptionModels.SubscriptionUser[] = response.data.users.map((m) =>\r\n            this.mapSubscriptionUser(m)\r\n        );\r\n        const pagination: SharedModels.Pagination = super.mapPagination(response.data.pagination);\r\n\r\n        return new SubscriptionResponses.SubscriptionUsersListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                pagination: pagination,\r\n                items: subscriptionProjects\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewSubscriptionProjectResponse(\r\n        response: IResponse<SubscriptionContracts.ISubscriptionProjectContract>\r\n    ): SubscriptionResponses.ViewSubscriptionProjectResponse {\r\n        return new SubscriptionResponses.ViewSubscriptionProjectResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSubscriptionProject(response.data)\r\n        );\r\n    }\r\n\r\n    mapViewSubscriptionUserResponse(\r\n        response: IResponse<SubscriptionContracts.ISubscriptionUserContract>\r\n    ): SubscriptionResponses.ViewSubscriptionUserResponse {\r\n        return new SubscriptionResponses.ViewSubscriptionUserResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSubscriptionUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapSubscriptionProject(\r\n        raw: SubscriptionContracts.ISubscriptionProjectContract\r\n    ): SubscriptionModels.SubscriptionProject {\r\n        return new SubscriptionModels.SubscriptionProject({\r\n            environments: raw.environments,\r\n            id: raw.id,\r\n            isActive: raw.is_active,\r\n            name: raw.name,\r\n            _raw: raw\r\n        });\r\n    }\r\n\r\n    mapSubscriptionUser(raw: SubscriptionContracts.ISubscriptionUserContract): SubscriptionModels.SubscriptionUser {\r\n        return new SubscriptionModels.SubscriptionUser({\r\n            email: raw.email,\r\n            hasPendingInvitation: raw.has_pending_invitation,\r\n            id: raw.id,\r\n            firstName: raw.first_name,\r\n            lastName: raw.last_name,\r\n            projects: raw.projects.map((rawProject) => {\r\n                const project: SubscriptionModels.ISubscriptionUserProject = {\r\n                    id: rawProject.id,\r\n                    name: rawProject.name,\r\n                    environments: rawProject.environments.map((rawEnvironment) => {\r\n                        const environment: SubscriptionModels.ISubscriptionUserEnvironment = {\r\n                            id: rawEnvironment.id,\r\n                            name: rawEnvironment.name,\r\n                            isUserActive: rawEnvironment.is_user_active,\r\n                            lastActivityAt: rawEnvironment.last_activity_at\r\n                                ? new Date(rawEnvironment.last_activity_at)\r\n                                : undefined,\r\n                            collectionGroups: rawEnvironment.collection_groups.map((rawCollectionGroup) => {\r\n                                const collectionGroup: SubscriptionModels.ISubscriptionCollectionGroup = {\r\n                                    collections: rawCollectionGroup.collections,\r\n                                    roles: rawCollectionGroup.roles.map((rawRole) => {\r\n                                        const role: SubscriptionModels.ISubscriptionUserRole = {\r\n                                            codename: rawRole.codename,\r\n                                            id: rawRole.id,\r\n                                            languages: rawRole.languages.map((rawLanguage) => {\r\n                                                const language: SubscriptionModels.ISubscriptionUserRoleLanguage = {\r\n                                                    codename: rawLanguage.codename,\r\n                                                    id: rawLanguage.id,\r\n                                                    isActive: rawLanguage.is_active,\r\n                                                    name: rawLanguage.name\r\n                                                };\r\n\r\n                                                return language;\r\n                                            }),\r\n                                            name: rawRole.name\r\n                                        };\r\n\r\n                                        return role;\r\n                                    })\r\n                                };\r\n\r\n                                return collectionGroup;\r\n                            })\r\n                        };\r\n                        return environment;\r\n                    })\r\n                };\r\n                return project;\r\n            }),\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscriptionMapper = new SubscriptionMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { TaxonomyContracts } from '../contracts';\r\nimport { TaxonomyModels, SharedModels } from '../models';\r\nimport { TaxonomyResponses as TaxonomyResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class TaxonomyMapper extends BaseMapper {\r\n    mapListingTaxonomysResponse(\r\n        response: IResponse<TaxonomyContracts.IListTaxonomyResponseContract>\r\n    ): TaxonomyResponses.TaxonomyListResponse {\r\n        let taxonomies: TaxonomyModels.Taxonomy[];\r\n        let pagination: SharedModels.Pagination;\r\n\r\n        // temporary mapping of taxonomies before API breaking change\r\n        if (Array.isArray(response.data)) {\r\n            taxonomies = response.data.map((m) => this.mapTaxonomy(m));\r\n            pagination = new SharedModels.Pagination(null, null);\r\n        } else {\r\n            // new API response model\r\n            taxonomies = response.data.taxonomies.map((m) => this.mapTaxonomy(m));\r\n            pagination = super.mapPagination(response.data.pagination);\r\n        }\r\n\r\n        return new TaxonomyResponses.TaxonomyListResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: taxonomies\r\n        });\r\n    }\r\n\r\n    mapGetTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IGetTaxonomyResponseContract>\r\n    ): TaxonomyResponses.GetTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.GetTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapModifyTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IModifyTaxonomyResponseContract>\r\n    ): TaxonomyResponses.ModifyTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.ModifyTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapAddTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IAddTaxonomyResponseContract>\r\n    ): TaxonomyResponses.AddTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.AddTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapTaxonomy(rawTaxonomy: TaxonomyContracts.ITaxonomyContract): TaxonomyModels.Taxonomy {\r\n        return new TaxonomyModels.Taxonomy({\r\n            codename: rawTaxonomy.codename,\r\n            id: rawTaxonomy.id,\r\n            lastModified: new Date(rawTaxonomy.last_modified),\r\n            name: rawTaxonomy.name,\r\n            terms: rawTaxonomy.terms.map((m) => this.mapTaxonomy(m)),\r\n            externalId: rawTaxonomy.external_id,\r\n            _raw: rawTaxonomy\r\n        });\r\n    }\r\n}\r\n\r\nexport const taxonomyMappper = new TaxonomyMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { WebSpotlightContracts } from '../contracts';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { WebSpotlightResponses } from '../responses';\r\nimport { WebSpotlightModels } from '../models';\r\n\r\nexport class WebSpotlightMapper extends BaseMapper {\r\n    mapWebSpotlightStatusResponse(\r\n        response: IResponse<WebSpotlightContracts.IWebSpotlightStatus>\r\n    ): WebSpotlightResponses.WebSpotlightStatusResponse {\r\n        return new WebSpotlightResponses.WebSpotlightStatusResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWebSpotlightStatus(response.data)\r\n        );\r\n    }\r\n\r\n    private mapWebSpotlightStatus(\r\n        rawData: WebSpotlightContracts.IWebSpotlightStatus\r\n    ): WebSpotlightModels.WebSpotlightStatus {\r\n        return new WebSpotlightModels.WebSpotlightStatus({\r\n            _raw: rawData,\r\n            enabled: rawData.enabled,\r\n            rootType: rawData.root_type ? this.mapIdReference(rawData.root_type) : undefined\r\n        });\r\n    }\r\n}\r\n\r\nexport const webSpotlightMapper = new WebSpotlightMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { WebhookContracts } from '../contracts/webhook-contracts';\r\nimport { WebhookModels } from '../models/webhook/webhook.models';\r\nimport { WebhookResponses } from '../responses';\r\n\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class WebhookMapper extends BaseMapper {\r\n    mapGetWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetWebhookContract>\r\n    ): WebhookResponses.GetWebhookResponse {\r\n        return new WebhookResponses.GetWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapGetLegacyWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetLegacyWebhookContract>\r\n    ): WebhookResponses.GetLegacyWebhookResponse {\r\n        return new WebhookResponses.GetLegacyWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapLegacyWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetWebhookContract>\r\n    ): WebhookResponses.AddWebhookResponse {\r\n        return new WebhookResponses.AddWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddLegacyWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetLegacyWebhookContract>\r\n    ): WebhookResponses.AddLegacyWebhookResponse {\r\n        return new WebhookResponses.AddLegacyWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapLegacyWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapWebhooksListResponse(\r\n        response: IResponse<WebhookContracts.IWebhookListContract>\r\n    ): WebhookResponses.WebhookListResponse {\r\n        return new WebhookResponses.WebhookListResponse(super.mapResponseDebug(response), response.data, {\r\n            webhooks: response.data.map((m) => this.mapWebhook(m))\r\n        });\r\n    }\r\n\r\n    mapLegacyWebhooksListResponse(\r\n        response: IResponse<WebhookContracts.ILegacyWebhookListContract>\r\n    ): WebhookResponses.LegacyWebhookListResponse {\r\n        return new WebhookResponses.LegacyWebhookListResponse(super.mapResponseDebug(response), response.data, {\r\n            webhooks: response.data.map((m) => this.mapLegacyWebhook(m))\r\n        });\r\n    }\r\n\r\n    mapLegacyWebhook(rawWebhook: WebhookContracts.ILegacyWebhookContract): WebhookModels.LegacyWebhook {\r\n        return new WebhookModels.LegacyWebhook({\r\n            id: rawWebhook.id,\r\n            name: rawWebhook.name,\r\n            lastModified: rawWebhook.last_modified ? new Date(rawWebhook.last_modified) : undefined,\r\n            healthStatus: rawWebhook.health_status ? rawWebhook.health_status : undefined,\r\n            secret: rawWebhook.secret,\r\n            triggers: {\r\n                deliveryApiContentChanges: rawWebhook.triggers.delivery_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookDeliveryApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                workflowStepChanges: rawWebhook.triggers.workflow_step_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookWorkflowStepChanges({\r\n                            transitionsTo: m.transitions_to.map(\r\n                                (s) =>\r\n                                    new WebhookModels.WebhookTransitionsTo({\r\n                                        id: s.id\r\n                                    })\r\n                            ),\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                previewDeliveryContentChanges: rawWebhook.triggers.preview_delivery_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookPreviewDeliveryApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                managementApiContentChanges: rawWebhook.triggers.management_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookManagementApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                )\r\n            },\r\n            url: rawWebhook.url,\r\n            _raw: rawWebhook\r\n        });\r\n    }\r\n\r\n    mapWebhook(rawWebhook: WebhookContracts.IWebhookContract): WebhookModels.Webhook {\r\n        return new WebhookModels.Webhook({\r\n            id: rawWebhook.id,\r\n            name: rawWebhook.name,\r\n            lastModified: rawWebhook.last_modified ? new Date(rawWebhook.last_modified) : undefined,\r\n            healthStatus: rawWebhook.health_status as WebhookModels.WebhookHealthStatus,\r\n            enabled: rawWebhook.enabled,\r\n            headers: rawWebhook.headers,\r\n            secret: rawWebhook.secret,\r\n            deliveryTriggers: {\r\n                slot: rawWebhook.delivery_triggers.slot,\r\n                events: rawWebhook.delivery_triggers.events,\r\n                asset: rawWebhook.delivery_triggers.asset\r\n                    ? new WebhookModels.WebhookDeliveryTriggersAsset({\r\n                          enabled: rawWebhook.delivery_triggers.asset.enabled,\r\n                          actions: rawWebhook.delivery_triggers.asset.actions\r\n                      })\r\n                    : undefined,\r\n                contentType: rawWebhook.delivery_triggers.content_type\r\n                    ? new WebhookModels.WebhookDeliveryTriggersContentType({\r\n                          enabled: rawWebhook.delivery_triggers.content_type.enabled,\r\n                          actions: rawWebhook.delivery_triggers.content_type.actions,\r\n                          filters: rawWebhook.delivery_triggers.content_type.filters\r\n                      })\r\n                    : undefined,\r\n                taxonomy: rawWebhook.delivery_triggers.taxonomy\r\n                    ? new WebhookModels.WebhookDeliveryTriggersTaxonomy({\r\n                          enabled: rawWebhook.delivery_triggers.taxonomy.enabled,\r\n                          actions: rawWebhook.delivery_triggers.taxonomy.actions,\r\n                          filters: rawWebhook.delivery_triggers.taxonomy.filters\r\n                      })\r\n                    : undefined,\r\n                language: rawWebhook.delivery_triggers.language\r\n                    ? new WebhookModels.WebhookDeliveryTriggersLanguage({\r\n                          enabled: rawWebhook.delivery_triggers.language.enabled,\r\n                          actions: rawWebhook.delivery_triggers.language.actions,\r\n                          filters: rawWebhook.delivery_triggers.language.filters\r\n                      })\r\n                    : undefined,\r\n                contentItem: rawWebhook.delivery_triggers.content_item\r\n                    ? new WebhookModels.WebhookDeliveryTriggersContentItem({\r\n                          enabled: rawWebhook.delivery_triggers.content_item.enabled,\r\n                          actions: rawWebhook.delivery_triggers.content_item.actions,\r\n                          filters: rawWebhook.delivery_triggers.content_item.filters\r\n                      })\r\n                    : undefined\r\n            },\r\n            url: rawWebhook.url,\r\n            _raw: rawWebhook\r\n        });\r\n    }\r\n}\r\n\r\nexport const webhookMapper = new WebhookMapper();\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { WorkflowContracts } from '../contracts/workflow-contracts';\r\nimport { WorkflowModels } from '../models';\r\nimport { WorkflowResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class WorkflowMapper extends BaseMapper {\r\n    mapListWorkflowsResponse(\r\n        response: IResponse<WorkflowContracts.IListWorkflowsResponseContract>\r\n    ): WorkflowResponses.ListWorkflowsResponse {\r\n        const workflows = response.data.map((m) => this.mapWorkflow(m));\r\n\r\n        return new WorkflowResponses.ListWorkflowsResponse(super.mapResponseDebug(response), response.data, workflows);\r\n    }\r\n\r\n    mapAddWorkflowResponse(\r\n        response: IResponse<WorkflowContracts.IAddWorkflowContract>\r\n    ): WorkflowResponses.AddWorkflowResponse {\r\n        return new WorkflowResponses.AddWorkflowResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWorkflow(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpdateWorkflowResponse(\r\n        response: IResponse<WorkflowContracts.IUpdateWorkflowContract>\r\n    ): WorkflowResponses.UpdateWorkflowResponse {\r\n        return new WorkflowResponses.UpdateWorkflowResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWorkflow(response.data)\r\n        );\r\n    }\r\n\r\n    mapWorkflowStep(rawStep: WorkflowContracts.IWorkflowStepContract): WorkflowModels.WorkflowStep {\r\n        return new WorkflowModels.WorkflowStep({\r\n            id: rawStep.id,\r\n            name: rawStep.name,\r\n            codename: rawStep.codename,\r\n            transitionsTo: rawStep.transitions_to,\r\n            _raw: rawStep\r\n        });\r\n    }\r\n\r\n    mapWorkflow(raw: WorkflowContracts.IWorkflowContract): WorkflowModels.Workflow {\r\n        return new WorkflowModels.Workflow({\r\n            id: raw.id,\r\n            name: raw.name,\r\n            codename: raw.codename,\r\n            archivedStep: raw.archived_step,\r\n            publishedStep: raw.published_step,\r\n            scheduledStep: raw.scheduled_step,\r\n            scopes: raw.scopes,\r\n            steps: raw.steps,\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const workflowMapper = new WorkflowMapper();\r\n","import { AssetFolderContracts, SharedContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace AssetFolderModels {\r\n    export class AssetFolder implements SharedModels.IBaseModel<AssetFolderContracts.IAssetFolderContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public externalId?: string;\r\n        public folders: AssetFolder[];\r\n        public codename: string;\r\n        public _raw!: AssetFolderContracts.IAssetFolderContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            externalId?: string;\r\n            folders: AssetFolder[];\r\n            codename: string;\r\n            _raw: AssetFolderContracts.IAssetFolderContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.externalId = data.externalId;\r\n            this.folders = data.folders;\r\n            this.codename = data.codename;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export interface IAssetFolderValue {\r\n        name: string;\r\n        folders: IAssetFolderValue[];\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IAddAssetFoldersData {\r\n        folders: IAssetFolderValue[];\r\n    }\r\n\r\n    export type IModifyAssetFolderData = AddIntoOperation | RemoveOperation | RenameOperation;\r\n\r\n    export type AddIntoOperation = {\r\n        op: 'addInto';\r\n        reference?: SharedContracts.IReferenceObjectContract;\r\n        value: IAssetFolderValue;\r\n        before?: SharedContracts.IReferenceObjectContract;\r\n        after?: SharedContracts.IReferenceObjectContract;\r\n    };\r\n\r\n    export type RemoveOperation = {\r\n        op: 'remove';\r\n        reference: SharedContracts.IReferenceObjectContract;\r\n    };\r\n\r\n    export type RenameOperation = {\r\n        op: 'rename';\r\n        reference: SharedContracts.IReferenceObjectContract;\r\n        value: string;\r\n    };\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { AssetRenditionContracts } from '../../contracts';\r\n\r\nexport namespace AssetRenditionModels {\r\n    export interface IAssetRenditionTransformation {\r\n        mode: 'rect';\r\n        fit: 'clip';\r\n        customWidth?: number;\r\n        customHeight?: number;\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n    }\r\n\r\n    export class AssetRendition implements SharedModels.IBaseModel<AssetRenditionContracts.IAssetRenditionContract> {\r\n        public renditionId!: string;\r\n        public assetId!: string;\r\n        public externalId!: string;\r\n        public lastModified!: Date;\r\n        public transformation!: IAssetRenditionTransformation;\r\n        public _raw!: AssetRenditionContracts.IAssetRenditionContract;\r\n\r\n        constructor(data: {\r\n            renditionId: string;\r\n            assetId: string;\r\n            externalId: string;\r\n            lastModified: Date;\r\n            transformation: IAssetRenditionTransformation;\r\n            _raw: AssetRenditionContracts.IAssetRenditionContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddAssetRenditionData {\r\n        external_id?: string;\r\n        transformation: AssetRenditionContracts.IAssetRenditionTransformationContract;\r\n    }\r\n\r\n    export interface IModifyAssetRenditionData {\r\n        transformation: AssetRenditionContracts.IAssetRenditionTransformationContract;\r\n    }\r\n}\r\n","import { SharedContracts } from '../../contracts';\r\nimport { AssetModels } from './asset.models';\r\n\r\nexport class AssetElementsBuilder {\r\n    taxonomyElement(\r\n        element: AssetModels.IAssetElementData<SharedContracts.IReferenceObjectContract[]>\r\n    ): AssetModels.IAssetElementValueType {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const assetElementsBuilder = new AssetElementsBuilder();\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, AssetContracts } from '../../contracts';\r\n\r\nexport namespace AssetModels {\r\n    export class Asset implements SharedModels.IBaseModel<AssetContracts.IAssetModelContract> {\r\n        public id!: string;\r\n        public fileName!: string;\r\n        public title!: string | null;\r\n        public imageWidth!: number | null;\r\n        public imageHeight!: number | null;\r\n        public size!: number;\r\n        public type!: string;\r\n        public fileReference!: AssetFileReference;\r\n        public descriptions!: AssetFileDescription[];\r\n        public externalId?: string;\r\n        public lastModified!: Date;\r\n        public url!: string;\r\n        public codename!: string;\r\n        public collection?: IAssetCollectionReferenceObject;\r\n        public folder?: SharedContracts.IReferenceObjectContract;\r\n        public elements?: IAssetElement[];\r\n        public _raw!: AssetContracts.IAssetModelContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            fileName: string;\r\n            title: string | null;\r\n            imageWidth: number | null;\r\n            imageHeight: number | null;\r\n            size: number;\r\n            type: string;\r\n            fileReference: AssetFileReference;\r\n            descriptions: AssetFileDescription[];\r\n            externalId?: string;\r\n            lastModified: Date;\r\n            url: string;\r\n            codename: string;\r\n            collection?: IAssetCollectionReferenceObject;\r\n            folder?: SharedContracts.IReferenceObjectContract;\r\n            elements?: IAssetElement[];\r\n            _raw: AssetContracts.IAssetModelContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAssetElement {\r\n        element: SharedContracts.IIdReferenceContract;\r\n        value: SharedContracts.IIdReferenceContract[];\r\n    }\r\n\r\n    export interface IAssetFileReference {\r\n        id: string;\r\n        type: 'internal';\r\n    }\r\n\r\n    export class AssetFileReference implements IAssetFileReference {\r\n        public id: string;\r\n        public type: 'internal';\r\n\r\n        constructor(data: { id: string; type: 'internal' }) {\r\n            this.id = data.id;\r\n            this.type = data.type;\r\n        }\r\n    }\r\n\r\n    export interface IAssetFileDescription {\r\n        language: SharedContracts.IReferenceObjectContract;\r\n        description: string;\r\n    }\r\n\r\n    export interface IAssetCollectionReferenceObject {\r\n        reference: SharedModels.IReferenceObject | null;\r\n    }\r\n\r\n    export class AssetFileDescription {\r\n        public language: SharedModels.ReferenceObject;\r\n        public description: string | null;\r\n\r\n        constructor(data: { language: SharedModels.ReferenceObject; description: string | null }) {\r\n            this.language = data.language;\r\n            this.description = data.description;\r\n        }\r\n    }\r\n\r\n    export interface IUploadBinaryFileRequestData {\r\n        binaryData: any;\r\n        contentType: string;\r\n        contentLength?: number;\r\n        filename: string;\r\n    }\r\n\r\n    /**\r\n     * Currently only reference to taxonomy terms are supported. In future more elements will be allowed\r\n     */\r\n    export type IAssetElementValueType = IAssetElementData<SharedContracts.IReferenceObjectContract[]>;\r\n\r\n    export interface IAssetElementData<TValue> {\r\n        element: SharedContracts.IReferenceObjectContract;\r\n        value: TValue;\r\n    }\r\n\r\n    export interface IAddAssetRequestData {\r\n        file_reference: IAssetFileReference;\r\n        title?: string;\r\n        external_id?: string;\r\n        descriptions?: IAssetFileDescription[];\r\n        folder?: SharedContracts.IReferenceObjectContract;\r\n        elements?: IAssetElementValueType[];\r\n        collection?: IAssetCollectionReferenceObject;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IUpsertAssetRequestData {\r\n        descriptions: IAssetFileDescription[];\r\n        title?: string;\r\n        file_reference?: IAssetFileReference;\r\n        folder?: SharedContracts.IReferenceObjectContract;\r\n        collection?: IAssetCollectionReferenceObject;\r\n        elements?: IAssetElementValueType[];\r\n    }\r\n\r\n    export interface IUploadAssetFromUrlRequestData {\r\n        asset: {\r\n            title?: string;\r\n            external_id?: string;\r\n            descriptions?: IAssetFileDescription[];\r\n            folder?: SharedContracts.IReferenceObjectContract;\r\n            elements?: IAssetElementValueType[];\r\n            collection?: IAssetCollectionReferenceObject;\r\n            codename?: string;\r\n        };\r\n        binaryFile: {\r\n            filename: string;\r\n        };\r\n        fileUrl: string;\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { CollectionContracts } from '../../contracts';\r\n\r\nexport namespace CollectionModels {\r\n    export class Collection implements SharedModels.IBaseModel<CollectionContracts.ICollectionContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public _raw!: CollectionContracts.ICollectionContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            _raw: CollectionContracts.ICollectionContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ISetCollectionData {\r\n        op: 'addInto' | 'replace' | 'move' | 'remove';\r\n        value?:\r\n            | string\r\n            | {\r\n                  name: string;\r\n                  codename?: string;\r\n                  externalId?: string;\r\n              };\r\n        after?: SharedModels.IReferenceObject;\r\n        before?: SharedModels.IReferenceObject;\r\n        reference?: SharedModels.IReferenceObject;\r\n        property_name?: string;\r\n    }\r\n}\r\n","import { ContentItemContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentItemModels {\r\n    export class ContentItem implements SharedModels.IBaseModel<ContentItemContracts.IContentItemModelContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public type!: SharedModels.IIdRefenceObject;\r\n        public externalId?: string;\r\n        public lastModified!: Date;\r\n        public collection!: SharedModels.IIdRefenceObject;\r\n        public spaces: SharedModels.IIdRefenceObject[] = [];\r\n        public sitemapLocations: SharedModels.IIdRefenceObject[] = [];\r\n        public _raw!: ContentItemContracts.IContentItemModelContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            type: SharedModels.IIdRefenceObject;\r\n            externalId?: string;\r\n            lastModified: Date;\r\n            collection: SharedModels.IIdRefenceObject;\r\n            spaces: SharedModels.IIdRefenceObject[];\r\n            sitemapLocations: SharedModels.IIdRefenceObject[];\r\n            _raw: ContentItemContracts.IContentItemModelContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","import { Identifiers } from './identifiers';\r\n\r\nexport class ContentManagementApiEndpoints {\r\n    private readonly environmentId?: string;\r\n    private readonly subscriptionId?: string;\r\n\r\n    private readonly projectsPath: string = 'projects';\r\n    private readonly subscriptionsPath: string = 'subscriptions';\r\n\r\n    constructor(data: { environmentId?: string; subscriptionId?: string }) {\r\n        this.environmentId = data.environmentId;\r\n        this.subscriptionId = data.subscriptionId;\r\n    }\r\n\r\n    changeWorkflowStepOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier,\r\n        workflowIdentifier: Identifiers.WorkflowIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/workflow/${workflowIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    publishLaguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/publish`;\r\n    }\r\n\r\n    createNewVersionOfALanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/new-version`;\r\n    }\r\n\r\n    unpublishLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/unpublish-and-archive`;\r\n    }\r\n\r\n    cancelScheduledPublishingOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/cancel-scheduled-publish`;\r\n    }\r\n\r\n    cancelScheduledUnpublishingOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/cancel-scheduled-unpublish`;\r\n    }\r\n\r\n    listWorkflowSteps(): string {\r\n        return `${this.getEnvironmentsPath()}/workflow`;\r\n    }\r\n\r\n    listWorkflows(): string {\r\n        return `${this.getEnvironmentsPath()}/workflows`;\r\n    }\r\n\r\n    addWorkflow(): string {\r\n        return `${this.getEnvironmentsPath()}/workflows`;\r\n    }\r\n\r\n    updateWorkflow(workflowIdentifier: Identifiers.WorkflowIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/workflows/${workflowIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteWorkflow(identifier: Identifiers.WorkflowIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/workflows/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    changeWorkflowOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/change-workflow`;\r\n    }\r\n\r\n    listContentTypeSnippets(): string {\r\n        return `${this.getEnvironmentsPath()}/snippets`;\r\n    }\r\n\r\n    viewContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addContentTypeSnippet(): string {\r\n        return `${this.getEnvironmentsPath()}/snippets`;\r\n    }\r\n\r\n    deleteContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifyContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    startProjectValidation(): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async`;\r\n    }\r\n\r\n    checkEnvironmentValidation(identifier: Identifiers.TaskIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async/tasks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listEnvironmentIssues(identifier: Identifiers.TaskIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async/tasks/${identifier.getParamValue()}/issues`;\r\n    }\r\n\r\n    environmentInformation(): string {\r\n        return `${this.getEnvironmentsPath()}`;\r\n    }\r\n\r\n    listContentTypes(): string {\r\n        return `${this.getEnvironmentsPath()}/types`;\r\n    }\r\n\r\n    addContentType(): string {\r\n        return `${this.getEnvironmentsPath()}/types`;\r\n    }\r\n\r\n    deleteContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    viewContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifyContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addCustomApp(): string {\r\n        return `${this.getEnvironmentsPath()}/custom-apps`;\r\n    }\r\n\r\n    modifyCustomApp(identifier: Identifiers.CustomAppIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/custom-apps/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteCustomApp(identifier: Identifiers.CustomAppIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/custom-apps/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getCustomApp(identifier: Identifiers.CustomAppIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/custom-apps/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listCustomApps(): string {\r\n        return `${this.getEnvironmentsPath()}/custom-apps`;\r\n    }\r\n\r\n    addTaxonomy(): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies`;\r\n    }\r\n\r\n    modifyTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listTaxonomies(): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies`;\r\n    }\r\n\r\n    getTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addAsset(): string {\r\n        return `${this.getEnvironmentsPath()}/assets`;\r\n    }\r\n\r\n    deleteAsset(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    upsertAsset(assetIdentifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    uploadBinaryFile(filename: string): string {\r\n        return `${this.getEnvironmentsPath()}/files/${filename}`;\r\n    }\r\n\r\n    listAssets(): string {\r\n        return `${this.getEnvironmentsPath()}/assets`;\r\n    }\r\n\r\n    viewAsset(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    items(): string {\r\n        return `${this.getEnvironmentsPath()}/items`;\r\n    }\r\n\r\n    viewContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addContentItem(): string {\r\n        return `${this.getEnvironmentsPath()}/items`;\r\n    }\r\n\r\n    updateContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    upsertContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listLanguageVariantsOfItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsOfContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsByCollection(identifier: Identifiers.CollectionIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/collections/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsBySpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsOfContentTypeWithComponents(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}/components`;\r\n    }\r\n\r\n    filterLanguageVariants(): string {\r\n        return `${this.getEnvironmentsPath()}/early-access/variants/filter`;\r\n    }\r\n\r\n    deleteLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        langaugeIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${langaugeIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        langaugeIdentifier: Identifiers.LanguageIdentifier,\r\n        isPublished: boolean\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${langaugeIdentifier.getParamValue()}${\r\n            isPublished ? '/published' : ''\r\n        }`;\r\n    }\r\n\r\n    upsertLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        langaugeIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${langaugeIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewLanguage(identifier: Identifiers.LanguageIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/languages/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addLanguage(): string {\r\n        return `${this.getEnvironmentsPath()}/languages`;\r\n    }\r\n\r\n    modifyLanguage(identifier: Identifiers.LanguageIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/languages/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listLanguages(): string {\r\n        return `${this.getEnvironmentsPath()}/languages`;\r\n    }\r\n\r\n    deleteLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addLegacyWebhook(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks`;\r\n    }\r\n\r\n    enableLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}/enable`;\r\n    }\r\n\r\n    disableLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}/disable`;\r\n    }\r\n\r\n    listLegacyWebhooks(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks`;\r\n    }\r\n\r\n    deleteWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addWebhook(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext`;\r\n    }\r\n\r\n    enableWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}/enable`;\r\n    }\r\n\r\n    disableWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}/disable`;\r\n    }\r\n\r\n    listWebhooks(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext`;\r\n    }\r\n\r\n    listAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    addAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    modifyAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    listCollections(): string {\r\n        return `${this.getEnvironmentsPath()}/collections`;\r\n    }\r\n\r\n    setCollections(): string {\r\n        return `${this.getEnvironmentsPath()}/collections`;\r\n    }\r\n\r\n    listAssetRenditions(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}/renditions`;\r\n    }\r\n\r\n    addAssetRendition(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}/renditions`;\r\n    }\r\n\r\n    modifyAssetRendition(\r\n        assetIdentifier: Identifiers.AssetIdentifier,\r\n        renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}/renditions/${renditionIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewAssetRendition(\r\n        assetIdentifier: Identifiers.AssetIdentifier,\r\n        renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}/renditions/${renditionIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    listSubscriptionProjects(): string {\r\n        return `${this.getSubscriptionPath()}/projects`;\r\n    }\r\n\r\n    listSubscriptionUsers(): string {\r\n        return `${this.getSubscriptionPath()}/users`;\r\n    }\r\n\r\n    viewSubscriptionProject(identifier: Identifiers.EnvironmentIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/projects/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    viewSubscriptionUser(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    activateUserInAllProjects(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}/activate`;\r\n    }\r\n\r\n    deactivateUserInAllProjects(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}/deactivate`;\r\n    }\r\n\r\n    listRoles(): string {\r\n        return `${this.getEnvironmentsPath()}/roles`;\r\n    }\r\n\r\n    viewRole(identifier: Identifiers.RoleIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/roles/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getPreviewConfigruation(): string {\r\n        return `${this.getEnvironmentsPath()}/preview-configuration`;\r\n    }\r\n\r\n    modifyPreviewConfigruation(): string {\r\n        return `${this.getEnvironmentsPath()}/preview-configuration`;\r\n    }\r\n\r\n    inviteProjectUser(): string {\r\n        return `${this.getEnvironmentsPath()}/users`;\r\n    }\r\n\r\n    changeProjectUserRoles(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/users/${identifier.getParamValue()}/roles`;\r\n    }\r\n\r\n    getEnvironmentCloningStatus(): string {\r\n        return `${this.getEnvironmentsPath()}/environment-cloning-state`;\r\n    }\r\n\r\n    deleteEnvironment(): string {\r\n        return this.getEnvironmentsPath();\r\n    }\r\n\r\n    modifyEnvironment(): string {\r\n        return this.getEnvironmentsPath();\r\n    }\r\n\r\n    cloneEnvironment(): string {\r\n        return `${this.getEnvironmentsPath()}/clone-environment`;\r\n    }\r\n\r\n    markEnvironmentAsProduction(): string {\r\n        return `${this.getEnvironmentsPath()}/mark-environment-as-production`;\r\n    }\r\n\r\n    listSpaces(): string {\r\n        return `${this.getEnvironmentsPath()}/spaces`;\r\n    }\r\n\r\n    viewSpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addSpace(): string {\r\n        return `${this.getEnvironmentsPath()}/spaces`;\r\n    }\r\n\r\n    deleteSpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifySpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    activateWebSpotlight(): string {\r\n        return `${this.getEnvironmentsPath()}/web-spotlight/activate`;\r\n    }\r\n\r\n    deactivateWebSpotlight(): string {\r\n        return `${this.getEnvironmentsPath()}/web-spotlight/deactivate`;\r\n    }\r\n\r\n    checkWebSpotlightStatus(): string {\r\n        return `${this.getEnvironmentsPath()}/web-spotlight/status`;\r\n    }\r\n\r\n    private getSubscriptionPath(): string {\r\n        if (!this.subscriptionId) {\r\n            throw Error(`SubscriptionId was not provided in client configuration`);\r\n        }\r\n        return `${this.subscriptionsPath}/${this.subscriptionId}`;\r\n    }\r\n\r\n    private getEnvironmentsPath(): string {\r\n        if (!this.environmentId) {\r\n            throw Error(`EnvironmentId was not provided in client configuration`);\r\n        }\r\n        return `${this.projectsPath}/${this.environmentId}`;\r\n    }\r\n}\r\n","import { ContentTypeElements } from '../elements/content-type-element.models';\r\n\r\nexport class ContentTypeSnippetElements {\r\n    assetElement(element: ContentTypeElements.IAssetElementData): ContentTypeElements.IAssetElementData {\r\n        return element;\r\n    }\r\n\r\n    customElement(element: ContentTypeElements.ICustomElementData): ContentTypeElements.ICustomElementData {\r\n        return element;\r\n    }\r\n\r\n    dateTimeElement(element: ContentTypeElements.IDateTimeElementData): ContentTypeElements.IDateTimeElementData {\r\n        return element;\r\n    }\r\n\r\n    guidelinesElement(element: ContentTypeElements.IGuidelinesElementData): ContentTypeElements.IGuidelinesElementData {\r\n        return element;\r\n    }\r\n\r\n    linkedItemsElement(element: ContentTypeElements.ILinkedItemsElementData): ContentTypeElements.ILinkedItemsElementData {\r\n        return element;\r\n    }\r\n\r\n    subpagesElement(element: ContentTypeElements.ISubpagesElementData): ContentTypeElements.ISubpagesElementData {\r\n        return element;\r\n    }\r\n\r\n    multipleChoiceElement(element: ContentTypeElements.IMultipleChoiceElementData): ContentTypeElements.IMultipleChoiceElementData {\r\n        return element;\r\n    }\r\n\r\n    numberElement(element: ContentTypeElements.INumberElementData): ContentTypeElements.INumberElementData {\r\n        return element;\r\n    }\r\n\r\n    richTextElement(element: ContentTypeElements.IRichTextElementData): ContentTypeElements.IRichTextElementData {\r\n        return element;\r\n    }\r\n\r\n    taxonomyElement(element: ContentTypeElements.ITaxonomyElementData): ContentTypeElements.ITaxonomyElementData {\r\n        return element;\r\n    }\r\n\r\n    textElement(element: ContentTypeElements.ITextElementData): ContentTypeElements.ITextElementData {\r\n        return element;\r\n    }\r\n\r\n    any<TElementData extends ContentTypeElements.Element>(element: TElementData): TElementData {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const contentTypeSnippetElementsBuilder = new ContentTypeSnippetElements();\r\n","import { ContentTypeSnippetContracts } from '../../contracts';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentTypeSnippetModels {\r\n    export type ModifyContentTypeSnippetOperation = 'addInto' | 'remove' | 'replace' | 'move';\r\n\r\n    export class ContentTypeSnippet\r\n        implements SharedModels.IBaseModel<ContentTypeSnippetContracts.IContentTypeSnippetContract>\r\n    {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public lastModified!: Date;\r\n        public elements!: ContentTypeElements.ContentTypeElementModel[];\r\n        public externalId?: string;\r\n        public _raw!: ContentTypeSnippetContracts.IContentTypeSnippetContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            lastModified: Date;\r\n            elements: ContentTypeElements.ContentTypeElementModel[];\r\n            externalId?: string;\r\n            _raw: ContentTypeSnippetContracts.IContentTypeSnippetContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddContentTypeSnippetData {\r\n        name: string;\r\n        elements: ContentTypeElements.Element[];\r\n\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IModifyContentTypeSnippetData {\r\n        op: ModifyContentTypeSnippetOperation;\r\n        path: string;\r\n        value?: any;\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n    }\r\n}\r\n","import { ContentTypeSnippetElements } from '../content-type-snippets/content-type-snippet-elements.builder';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\n\r\nexport class ContentTypeElementsBuilder extends ContentTypeSnippetElements {\r\n    urlSlugElement(element: ContentTypeElements.IUrlSlugElementData): ContentTypeElements.IUrlSlugElementData {\r\n        return element;\r\n    }\r\n\r\n    snippetElement(element: ContentTypeElements.ISnippetElementData): ContentTypeElements.ISnippetElementData {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const contentTypeElementsBuilder = new ContentTypeElementsBuilder();\r\n","import { SharedContracts, ContentTypeContracts } from '../../contracts';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentTypeModels {\r\n    export type ModifyContentTypeOperation = 'addInto' | 'remove' | 'replace' | 'move';\r\n\r\n    export interface IModifyContentTypeData {\r\n        op: ModifyContentTypeOperation;\r\n        path: string;\r\n        value?: any;\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export class ContentTypeGroup {\r\n\r\n        public name!: string;\r\n        public codename?: string;\r\n        public externalId?: string;\r\n        public id?: string;\r\n\r\n        constructor(data: {\r\n             name: string;\r\n             codename?: string;\r\n             externalId?: string;\r\n             id?: string;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentType implements SharedModels.IBaseModel<ContentTypeContracts.IContentTypeContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public lastModified!: Date;\r\n        public elements!: ContentTypeElements.ContentTypeElementModel[];\r\n        public contentGroups?: ContentTypeGroup[];\r\n        public externalId?: string;\r\n\r\n        public _raw!: ContentTypeContracts.IContentTypeContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            lastModified: Date;\r\n            elements: ContentTypeElements.ContentTypeElementModel[];\r\n            externalId?: string;\r\n            contentGroups?: ContentTypeGroup[];\r\n            _raw: ContentTypeContracts.IContentTypeContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddContentTypeContentGroup {\r\n        name: string;\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IAddContentTypeData {\r\n        name: string;\r\n        elements: ContentTypeElements.Element[];\r\n\r\n        external_id?: string;\r\n        codename?: string;\r\n        content_groups?: IAddContentTypeContentGroup[];\r\n    }\r\n\r\n    export interface IAddContentTypeCustomElementData {\r\n        sourceUrl: string;\r\n        json_parameters?: string;\r\n    }\r\n\r\n    export interface IAddContentTypeElementDependsOnData {\r\n        element?: SharedContracts.IReferenceObjectContract;\r\n        snippet?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IAddContentTypeElementMultipleChoiceElementOptionsData {\r\n        name: string;\r\n    }\r\n\r\n}\r\n","import { CustomAppsContracts, SharedContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace CustomAppModels {\r\n    export class CustomApp implements SharedModels.IBaseModel<CustomAppsContracts.ICustomAppContract> {\r\n        public name: string;\r\n        public codename: string;\r\n        public source_url: string;\r\n        public config: string | null;\r\n        public allowed_roles?: SharedContracts.ICodenameIdReferenceContract[];\r\n        public _raw!: CustomAppsContracts.ICustomAppContract;\r\n\r\n        constructor(data: {\r\n            name: string;\r\n            codename: string;\r\n            source_url: string;\r\n            config: string | null;\r\n            allowed_roles?: SharedContracts.ICodenameIdReferenceContract[];\r\n            _raw: CustomAppsContracts.ICustomAppContract;\r\n        }) {\r\n            this.name = data.name;\r\n            this.codename = data.codename;\r\n            this._raw = data._raw;\r\n            this.source_url = data.source_url;\r\n            this.config = data.config;\r\n        }\r\n    }\r\n\r\n    export interface IAddCustomAppData {\r\n        name: string;\r\n        codename: string;\r\n        source_url: string;\r\n        config?: string | null;\r\n        allowed_roles?: SharedContracts.ICodenameIdReferenceContract[];\r\n    }\r\n\r\n    export type ModifyCustomAppPropertyName = 'name' | 'source_url' | 'config' | 'allowed_roles';\r\n\r\n    export type ModifyCustomAppOperation =\r\n        | {\r\n              op: 'addInto';\r\n              value: SharedContracts.IReferenceObjectContract;\r\n              property_name: Extract<ModifyCustomAppPropertyName, 'allowed_roles'>;\r\n          }\r\n        | (\r\n              | {\r\n                    op: 'replace';\r\n                    value: SharedContracts.IReferenceObjectContract;\r\n                    property_name: Extract<ModifyCustomAppPropertyName, 'allowed_roles'>;\r\n                }\r\n              | {\r\n                    op: 'replace';\r\n                    value: string;\r\n                    property_name: Extract<ModifyCustomAppPropertyName, 'name' | 'source_url'>;\r\n                }\r\n              | {\r\n                    op: 'replace';\r\n                    value: string | null;\r\n                    property_name: Extract<ModifyCustomAppPropertyName, 'config'>;\r\n                }\r\n          )\r\n        | {\r\n              op: 'remove';\r\n              value: SharedContracts.IReferenceObjectContract;\r\n              property_name: Extract<ModifyCustomAppPropertyName, 'allowed_roles'>;\r\n          };\r\n}\r\n","import { SharedContracts } from '../../contracts';\r\nimport { ElementModels } from './elements.models';\r\n\r\nexport namespace ContentTypeElements {\r\n    export type RichTextAllowedBlock = 'images' | 'text' | 'tables' | 'components-and-items';\r\n    export type RichTextAllowedTextBlock =\r\n        | 'paragraph'\r\n        | 'heading-one'\r\n        | 'heading-two'\r\n        | 'heading-three'\r\n        | 'heading-four'\r\n        | 'heading-five'\r\n        | 'heading-six'\r\n        | 'ordered-list'\r\n        | 'unordered-list';\r\n    export type RichTextAllowedFormatting =\r\n        | 'unstyled'\r\n        | 'bold'\r\n        | 'italic'\r\n        | 'code'\r\n        | 'link'\r\n        | 'subscript'\r\n        | 'superscript';\r\n    export type RichTextAllowedTableBlock = 'images' | 'text';\r\n    export type RichTextImageCondition = 'at_most' | 'exactly' | 'at_least';\r\n    export type RichTextallowedImageType = 'adjustable' | 'any';\r\n    export type RichTextMaximumLengthAppliesTo = 'words' | 'characters';\r\n\r\n    export type Element =\r\n        | IAssetElement\r\n        | ICustomElement\r\n        | IDateTimeElement\r\n        | IGuidelinesElement\r\n        | ILinkedItemsElement\r\n        | ISubpagesElement\r\n        | IMultipleChoiceElement\r\n        | INumberElement\r\n        | IRichTextElement\r\n        | ISnippetElement\r\n        | ITaxonomyElement\r\n        | ITextElement\r\n        | IUrlSlugElement;\r\n        \r\n    interface IBaseElement {\r\n        type: ElementModels.ElementType;\r\n        content_group?: SharedContracts.IReferenceObjectContract;\r\n        id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IContentGroup extends IBaseElement {\r\n        name: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IAssetElementData extends IBaseElement {\r\n        name: string;\r\n        type: 'asset';\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        asset_count_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        maximum_file_size?: number;\r\n        allowed_file_types?: 'adjustable' | 'any';\r\n        image_width_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        image_height_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        default?: {\r\n            global: {\r\n                value: SharedContracts.IReferenceObjectContract[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface ISnippetElementData extends IBaseElement {\r\n        snippet: SharedContracts.IReferenceObjectContract;\r\n        type: 'snippet';\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface ICustomElementData extends IBaseElement {\r\n        name: string;\r\n        type: 'custom';\r\n        source_url: string;\r\n        json_parameters?: string;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        allowed_elements?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export interface IDateTimeElementData extends IBaseElement {\r\n        name: string;\r\n        type: 'date_time';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        guidelines?: string;\r\n        external_id?: string;\r\n        default?: {\r\n            global: {\r\n                value: string;\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface IGuidelinesElementData extends IBaseElement {\r\n        guidelines: string;\r\n        type: 'guidelines';\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface ILinkedItemsElementData extends IBaseElement {\r\n        item_count_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        allowed_content_types?: SharedContracts.IReferenceObjectContract[];\r\n        name: string;\r\n        guidelines?: string;\r\n        type: 'modular_content';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        default?: {\r\n            global: {\r\n                value: SharedContracts.IReferenceObjectContract[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface ISubpagesElementData extends IBaseElement {\r\n        item_count_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        allowed_content_types?: SharedContracts.IReferenceObjectContract[];\r\n        name: string;\r\n        guidelines?: string;\r\n        type: 'subpages';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceOption {\r\n        name: string;\r\n        id?: string;\r\n        codename?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceElementData extends IBaseElement {\r\n        mode: 'single' | 'multiple';\r\n        options: IMultipleChoiceOption[];\r\n        name: string;\r\n        type: 'multiple_choice';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        default?: {\r\n            global: {\r\n                value: SharedContracts.IReferenceObjectContract[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface INumberElementData extends IBaseElement {\r\n        name: string;\r\n        type: 'number';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        default?: {\r\n            global: {\r\n                value: number;\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface IRichTextElementData extends IBaseElement {\r\n        maximum_text_length?: {\r\n            value: number;\r\n            applies_to: RichTextMaximumLengthAppliesTo;\r\n        };\r\n        maximum_image_size?: number;\r\n        allowed_content_types?: SharedContracts.IReferenceObjectContract[];\r\n        allowed_item_link_types?: SharedContracts.IReferenceObjectContract[];\r\n        image_width_limit?: {\r\n            value: number;\r\n            condition: RichTextImageCondition;\r\n        };\r\n        image_height_limit?: {\r\n            value: number;\r\n            condition: RichTextImageCondition;\r\n        };\r\n        allowed_image_types?: RichTextallowedImageType;\r\n        name: string;\r\n        type: 'rich_text';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        allowed_blocks?: RichTextAllowedBlock[];\r\n        allowed_text_blocks?: RichTextAllowedTextBlock[];\r\n        allowed_formatting?: RichTextAllowedFormatting[];\r\n        allowed_table_blocks?: RichTextAllowedTableBlock[];\r\n        allowed_table_text_blocks?: RichTextAllowedTextBlock[];\r\n        allowed_table_formatting?: RichTextAllowedFormatting[];\r\n    }\r\n\r\n    export interface ITaxonomyElementData extends IBaseElement {\r\n        name?: string;\r\n        taxonomy_group: SharedContracts.IReferenceObjectContract;\r\n        guidelines?: string;\r\n        type: 'taxonomy';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        term_count_limit?: {\r\n            value: number;\r\n            condition: 'at_most' | 'exactly' | 'at_least';\r\n        };\r\n        default?: {\r\n            global: {\r\n                value: SharedContracts.IReferenceObjectContract[];\r\n            };\r\n        };\r\n    }\r\n\r\n    export interface ITextElementData extends IBaseElement {\r\n        name: string;\r\n        type: 'text';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        maximum_text_length?: {\r\n            value: number;\r\n            applies_to: 'words' | 'characters';\r\n        };\r\n        default?: {\r\n            global: {\r\n                value: string;\r\n            };\r\n        };\r\n        validation_regex?: {\r\n            is_active: boolean;\r\n            regex: string;\r\n            flags?: string | null;\r\n            validation_message?: string;\r\n        };\r\n    }\r\n\r\n    export interface IUrlSlugElementData extends IBaseElement {\r\n        depends_on: {\r\n            element: SharedContracts.IReferenceObjectContract;\r\n            snippet?: SharedContracts.IReferenceObjectContract;\r\n        };\r\n        name: string;\r\n        type: 'url_slug';\r\n        is_required?: boolean;\r\n        is_non_localizable?: boolean;\r\n        codename?: string;\r\n        external_id?: string;\r\n        guidelines?: string;\r\n        validation_regex?: {\r\n            is_active: boolean;\r\n            regex: string;\r\n            flags?: string;\r\n            validation_message?: string;\r\n        };\r\n    }\r\n\r\n    export interface IAssetElement extends IAssetElementData {}\r\n\r\n    export interface ICustomElement extends ICustomElementData {}\r\n\r\n    export interface IDateTimeElement extends IDateTimeElementData {}\r\n\r\n    export interface IGuidelinesElement extends IGuidelinesElementData {}\r\n\r\n    export interface ILinkedItemsElement extends ILinkedItemsElementData {}\r\n\r\n    export interface ISubpagesElement extends ISubpagesElementData {}\r\n\r\n    export interface IMultipleChoiceElement extends IMultipleChoiceElementData {}\r\n\r\n    export interface INumberElement extends INumberElementData {}\r\n\r\n    export interface IRichTextElement extends IRichTextElementData {}\r\n\r\n    export interface ISnippetElement extends ISnippetElementData {}\r\n\r\n    export interface ITaxonomyElement extends ITaxonomyElementData {}\r\n\r\n    export interface ITextElement extends ITextElementData {}\r\n\r\n    export interface IUrlSlugElement extends IUrlSlugElementData {}\r\n\r\n    export type ContentTypeElementModel =\r\n        | IAssetElement\r\n        | ICustomElement\r\n        | IDateTimeElement\r\n        | IGuidelinesElement\r\n        | ILinkedItemsElement\r\n        | ISubpagesElement\r\n        | IMultipleChoiceElement\r\n        | INumberElement\r\n        | IRichTextElement\r\n        | ISnippetElement\r\n        | ITaxonomyElement\r\n        | ITextElement\r\n        | IUrlSlugElement;\r\n}\r\n","import { ElementContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ElementModels {\r\n    export type ElementMode = 'single' | 'multiple';\r\n\r\n    export type ElementType =\r\n        | 'text'\r\n        | 'rich_text'\r\n        | 'number'\r\n        | 'multiple_choice'\r\n        | 'date_time'\r\n        | 'asset'\r\n        | 'modular_content'\r\n        | 'taxonomy'\r\n        | 'url_slug'\r\n        | 'guidelines'\r\n        | 'snippet'\r\n        | 'custom'\r\n        | 'subpages';\r\n\r\n    export class ContentItemElement implements SharedModels.IBaseModel<ElementContracts.IContentItemElementContract> {\r\n        public element!: SharedModels.ReferenceObject;\r\n        public value?: string | number | SharedModels.ReferenceObject[];\r\n        public searchableValue?: string | null;\r\n        public display_timezone?: string | null;\r\n        public components!: ContentItemElementComponent[];\r\n        public mode?: 'autogenerated' | 'custom';\r\n        public _raw!: ElementContracts.IContentItemElementContract;\r\n\r\n        constructor(data: {\r\n            element: SharedModels.ReferenceObject;\r\n            value?: string | number | SharedModels.ReferenceObject[];\r\n            components?: ContentItemElementComponent[];\r\n            searchableValue?: string | null;\r\n            display_timezone?: string | null;\r\n            mode?: 'autogenerated' | 'custom';\r\n            _raw: ElementContracts.IContentItemElementContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemElementComponent\r\n        implements SharedModels.IBaseModel<ElementContracts.IContentItemElementComponent>\r\n    {\r\n        public id!: string;\r\n        public type!: SharedModels.ReferenceObject;\r\n        public elements!: ContentItemElement[];\r\n        public _raw!: ElementContracts.IContentItemElementComponent;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            type: SharedModels.ReferenceObject;\r\n            elements: ContentItemElement[];\r\n            _raw: ElementContracts.IContentItemElementComponent;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IElementData {\r\n        id: string;\r\n        name?: string;\r\n        codename: string;\r\n        type: ElementType;\r\n        guidelines: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceOptionData {\r\n        name: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceElementData extends IElementData {\r\n        options: IMultipleChoiceOptionData[];\r\n        mode: ElementMode;\r\n    }\r\n}\r\n","import { EnvironmentContracts } from '../../contracts';\r\n\r\nexport namespace EnvironmentModels {\r\n    export class EnvironmentReportModel {\r\n        constructor(public id: string, public name: string) {}\r\n    }\r\n\r\n    export class EnvironmentValidationVariantIssueModel {\r\n        public readonly issue_type: EnvironmentContracts.EnvironmentValidationIssueType = 'variant_issue';\r\n\r\n        constructor(\r\n            public item: EnvironmentVariantContentItemModel,\r\n            public language: EnvironmentVariantLanguageModel,\r\n            public issues: EnvironmentIssueModel[]\r\n        ) {}\r\n    }\r\n\r\n    export class EnvironmentValidationTypeIssueModel {\r\n        public readonly issue_type: EnvironmentContracts.EnvironmentValidationIssueType = 'type_issue';\r\n\r\n        constructor(public type: EnvironmentTypeModel, public issues: EnvironmentIssueModel[]) {}\r\n    }\r\n\r\n    export class EnvironmentInformationModel {\r\n        constructor(public id: string, public name: string, public environment: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantContentItemModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantLanguageModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantElementModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentTypeIssueModel {\r\n        constructor(public type: EnvironmentTypeModel, public issues: EnvironmentIssueModel[]) {}\r\n    }\r\n\r\n    export class EnvironmentTypeModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentIssueModel {\r\n        constructor(public element: EnvironmentVariantElementModel, public messages: string[]) {}\r\n    }\r\n\r\n    export class EnvironmentVariantIssueModel {\r\n        constructor(\r\n            public item: EnvironmentVariantContentItemModel,\r\n            public language: EnvironmentVariantLanguageModel,\r\n            public issues: EnvironmentIssueModel[]\r\n        ) {}\r\n    }\r\n\r\n    export class EnvironmentCloningStateModel {\r\n        constructor(public cloningState: string) {}\r\n    }\r\n\r\n    export interface IModifyEnvironmentData {\r\n        op: 'rename_environment';\r\n        value: string;\r\n    }\r\n\r\n    export class EnvironmentModel {\r\n        constructor(public id: string, public name: string, public isProduction: boolean) {}\r\n    }\r\n\r\n    export interface ICloneEnvironmentData {\r\n        name: string;\r\n        roles_to_activate?: string[];\r\n        copy_data_options?: {\r\n            content_items_assets?: boolean;\r\n            content_item_version_history?: boolean;\r\n        };\r\n    }\r\n\r\n    export class CloneEnvironmentModel {\r\n        constructor(\r\n            public id: string,\r\n            public managementApiKey: string,\r\n            public deliveryPreviewApiKey: string,\r\n            public securedDeliveryApiKey: string\r\n        ) {}\r\n    }\r\n\r\n    export interface IMarkEnvironmentAsProductionData {\r\n        enable_webhooks: boolean;\r\n    }\r\n}\r\n","export namespace Identifiers {\r\n    export enum TaskIdentifierEnum {\r\n        InternalId = 'internalId'\r\n    }\r\n\r\n    export enum ContentItemIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum ContentTypeIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum RenditionIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId'\r\n    }\r\n\r\n    export enum CollectionIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum LanguageIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        Codename = 'codename',\r\n        ExternalId = 'externalId'\r\n    }\r\n\r\n    export enum WorkflowIdentifierEnum {\r\n        Id = 'id',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum TaxonomyIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum CustomAppIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum AssetIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum WebhookIdentifierEnum {\r\n        Id = 'id'\r\n    }\r\n\r\n    export enum EnvironmentIdentifierEnum {\r\n        Id = 'id'\r\n    }\r\n\r\n    export enum UserIdentifierEnum {\r\n        Id = 'id',\r\n        Email = 'email'\r\n    }\r\n\r\n    export enum RoleIdentifierEnum {\r\n        Id = 'id',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum SpaceIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export class AssetIdentifier {\r\n        constructor(\r\n            public identifier: AssetIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === AssetIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === AssetIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            if (this.identifier === AssetIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class TaxonomyIdentifier {\r\n        constructor(\r\n            public identifier: TaxonomyIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === TaxonomyIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === TaxonomyIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            if (this.identifier === TaxonomyIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class CustomAppIdentifier {\r\n        constructor(\r\n            public identifier: CustomAppIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === CustomAppIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === CustomAppIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeIdentifier {\r\n        constructor(\r\n            public identifier: ContentTypeIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === ContentTypeIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === ContentTypeIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === ContentTypeIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class RenditionIdentifier {\r\n        constructor(\r\n            public identifier: RenditionIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === RenditionIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === RenditionIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class CollectionIdentifier {\r\n        constructor(\r\n            public identifier: CollectionIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === CollectionIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === CollectionIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === CollectionIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class WorkflowIdentifier {\r\n        constructor(\r\n            public identifier: WorkflowIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === WorkflowIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === WorkflowIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class TaskIdentifier {\r\n        constructor(\r\n            public identifier: TaskIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === TaskIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class ContentItemIdentifier {\r\n        constructor(\r\n            public identifier: ContentItemIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === ContentItemIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === ContentItemIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === ContentItemIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class LanguageIdentifier {\r\n        constructor(\r\n            public identifier: LanguageIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === LanguageIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n\r\n            if (this.identifier === LanguageIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === LanguageIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class WebhookIdentifier {\r\n        constructor(\r\n            public identifier: WebhookIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === WebhookIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentIdentifier {\r\n        constructor(\r\n            public identifier: EnvironmentIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === EnvironmentIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class UserIdentifier {\r\n        constructor(\r\n            public identifier: UserIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === UserIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === UserIdentifierEnum.Email) {\r\n                return `email/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class RoleIdentifier {\r\n        constructor(\r\n            public identifier: RoleIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === RoleIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === RoleIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class SpaceIdentifier {\r\n        constructor(\r\n            public identifier: SpaceIdentifierEnum,\r\n            public value: string\r\n        ) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === SpaceIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === SpaceIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === SpaceIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n}\r\n","export * from './query-config.models';\r\nexport * from './content-management-api-endpoints';\r\nexport * from './content-items/content-item.models';\r\nexport * from './shared/shared-models';\r\nexport * from './assets/asset.models';\r\nexport * from './asset-folders/asset-folder.models';\r\nexport * from './taxonomies/taxonomy.models';\r\nexport * from './content-types/content-type.models';\r\nexport * from './content-types/content-type-elements.builder';\r\nexport * from './language-variants/language-variant.models';\r\nexport * from './language-variants/language-variant-elements-builder';\r\nexport * from './elements/elements.models';\r\nexport * from './content-type-snippets/content-type-snippets.models';\r\nexport * from './content-type-snippets/content-type-snippet-elements.builder';\r\nexport * from './workflow/workflow.models';\r\nexport * from './languages/language.models';\r\nexport * from './identifiers';\r\nexport * from './webhook/webhook.models';\r\nexport * from './collections/collection.models';\r\nexport * from './elements/content-type-element.models';\r\nexport * from './subscriptions/subscription.models';\r\nexport * from './roles/role.models';\r\nexport * from './project-users/project-users.models';\r\nexport * from './asset-renditions/asset-rendition.models';\r\nexport * from './environments/environment.models';\r\nexport * from './assets/asset-elements.builder';\r\nexport * from './spaces/space.models';\r\nexport * from './preview/preview.models';\r\nexport * from './web-spotlight/web-spotlight.models';\r\nexport * from './custom-apps/custom-app.models';\r\n","import { SharedContracts } from '../../contracts';\r\n\r\nexport namespace LanguageVariantElements {\r\n    export interface ILanguageVariantElementBase {\r\n        element: SharedContracts.IReferenceObjectContract;\r\n        value: any;\r\n    }\r\n\r\n    export interface IRichTextComponent {\r\n        id: string;\r\n        type: SharedContracts.IReferenceObjectContract;\r\n        elements: ILanguageVariantElementBase[];\r\n    }\r\n\r\n    export interface IAssetInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface ICustomElementInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        searchable_value?: string;\r\n    }\r\n\r\n    export interface IDateTimeInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        display_timezone: string | null;\r\n    }\r\n\r\n    export interface ILinkedItemsInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface IMultipleChoiceInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface INumberInVariantElement extends ILanguageVariantElementBase {\r\n        value: number | null;\r\n    }\r\n\r\n    export interface IRichtextInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        components?: IRichTextComponent[];\r\n    }\r\n\r\n    export interface ITaxonomyInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface ITextInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n    }\r\n\r\n    export interface IUrlSlugInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        mode: 'autogenerated' | 'custom';\r\n    }\r\n}\r\n\r\nexport class LanguageVariantElementsBuilder {\r\n    assetElement(\r\n        element: LanguageVariantElements.IAssetInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    customElement(\r\n        element: LanguageVariantElements.ICustomElementInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    dateTimeElement(\r\n        element: LanguageVariantElements.IDateTimeInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    linkedItemsElement(\r\n        element: LanguageVariantElements.ILinkedItemsInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    multipleChoiceElement(\r\n        element: LanguageVariantElements.IMultipleChoiceInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    numberElement(\r\n        element: LanguageVariantElements.INumberInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    richTextElement(\r\n        element: LanguageVariantElements.IRichtextInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    taxonomyElement(\r\n        element: LanguageVariantElements.ITaxonomyInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    textElement(\r\n        element: LanguageVariantElements.ITextInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    urlSlugElement(\r\n        element: LanguageVariantElements.IUrlSlugInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    any(element: any): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const languageVariantElementsBuilder = new LanguageVariantElementsBuilder();\r\n","import { ElementModels } from '../elements/elements.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\nimport { LanguageVariantContracts, SharedContracts } from '../../contracts';\r\n\r\nexport namespace LanguageVariantModels {\r\n\r\n    export type FilterLanguageVariantsCompletionStatus = 'unfinished' | 'ready' | 'not_translated' | 'all_done';\r\n    export type FilterLanguageVariantsOrderBy = 'last_modified' | 'name' | 'due_date';\r\n    export type FilterLanguageVariantsOrderDirection = 'asc' | 'desc';\r\n\r\n    export interface IFilterLanguageVariantsData {\r\n        filters?: {\r\n            search_phrase?: string;\r\n            language?: SharedContracts.IReferenceObjectContract;\r\n            content_types?: SharedContracts.IReferenceObjectContract[];\r\n            contributors?: SharedContracts.UserReferenceDataContract[];\r\n            has_no_contributors?: boolean;\r\n            completion_statuses?: FilterLanguageVariantsCompletionStatus[];\r\n            workflow_steps?: SharedContracts.IRequestWorkflowStepsReferenceContract[];\r\n            taxonomy_groups?: SharedContracts.ITaxonomyGroupReferenceContract[];\r\n        };\r\n        order?: {\r\n            by?: FilterLanguageVariantsOrderBy\r\n            direction?: FilterLanguageVariantsOrderDirection\r\n        }\r\n        include_content?: boolean;\r\n    }\r\n\r\n    export interface ILanguageVariantElementInfo {\r\n        id?: string;\r\n        codename?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface ILanguageVariantSchedule {\r\n        publishTime: string | null;\r\n        publishDisplayTimezone: string | null;\r\n        unpublishTime: string | null;\r\n        unpublishDisplayTimezone: string | null;\r\n    }\r\n\r\n    export interface ILanguageVariantDueDate {\r\n        value: string | null;\r\n    }\r\n\r\n    export class ContentItemLanguageVariant\r\n        implements SharedModels.IBaseModel<LanguageVariantContracts.ILanguageVariantModelContract> {\r\n        public item!: SharedModels.ReferenceObject;\r\n        public elements!: ElementModels.ContentItemElement[];\r\n        public language!: SharedModels.ReferenceObject;\r\n        public lastModified!: Date;\r\n        public workflow!: {\r\n            workflowIdentifier: SharedModels.ReferenceObject;\r\n            stepIdentifier: SharedModels.ReferenceObject;\r\n        };\r\n        public schedule!: ILanguageVariantSchedule;\r\n        public dueDate!: ILanguageVariantDueDate;\r\n        public note?: string | null;\r\n        public contributors!: SharedContracts.UserReferenceContract[];\r\n        public _raw!: LanguageVariantContracts.ILanguageVariantModelContract;\r\n\r\n        constructor(data: {\r\n            item: SharedModels.ReferenceObject;\r\n            elements: ElementModels.ContentItemElement[];\r\n            language: SharedModels.ReferenceObject;\r\n            lastModified: Date;\r\n            schedule: ILanguageVariantSchedule;\r\n            dueDate: ILanguageVariantDueDate;\r\n            note?: string | null;\r\n            contributors: SharedContracts.UserReferenceContract[];\r\n            workflow: {\r\n                workflowIdentifier: SharedModels.ReferenceObject;\r\n                stepIdentifier: SharedModels.ReferenceObject;\r\n            };\r\n            _raw: LanguageVariantContracts.ILanguageVariantModelContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemLanguageWithComponentsVariant {\r\n        public item!: SharedModels.ReferenceObject;\r\n        public elements!: ElementModels.ContentItemElement[];\r\n        public language!: SharedModels.ReferenceObject;\r\n        public lastModified!: Date;\r\n        public schedule!: ILanguageVariantSchedule;\r\n        public dueDate!: ILanguageVariantDueDate;\r\n        public workflow!: {\r\n            workflowIdentifier: SharedModels.ReferenceObject;\r\n            stepIdentifier: SharedModels.ReferenceObject;\r\n        };\r\n        public _raw!: LanguageVariantContracts.ILanguageVariantModelsContract;\r\n\r\n        constructor(data: {\r\n            rawElements: any;\r\n            item: SharedModels.ReferenceObject;\r\n            elements: ElementModels.ContentItemElement[];\r\n            language: SharedModels.ReferenceObject;\r\n            lastModified: Date;\r\n            schedule: ILanguageVariantSchedule;\r\n            dueDate: ILanguageVariantDueDate;\r\n            workflow: {\r\n                workflowIdentifier: SharedModels.ReferenceObject;\r\n                stepIdentifier: SharedModels.ReferenceObject;\r\n            };\r\n            _raw: LanguageVariantContracts.ILanguageVariantModelsContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { LanguageContracts } from '../../contracts';\r\n\r\nexport namespace LanguageModels {\r\n    export class LanguageModel implements SharedModels.IBaseModel<LanguageContracts.ILanguageModelContract> {\r\n        public name: string;\r\n        public id: string;\r\n        public codename: string;\r\n        public externalId?: string;\r\n        public isActive: boolean;\r\n        public isDefault: boolean;\r\n        public fallbackLanguage?: FallbackLanguageModel;\r\n        public _raw!: LanguageContracts.ILanguageModelContract;\r\n\r\n        constructor(data: {\r\n            name: string;\r\n            id: string;\r\n            codename: string;\r\n            externalId?: string;\r\n            isActive: boolean;\r\n            isDefault: boolean;\r\n            fallbackLanguage?: FallbackLanguageModel;\r\n            _raw: LanguageContracts.ILanguageModelContract;\r\n        }) {\r\n            this.name = data.name;\r\n            this.id = data.id;\r\n            this.codename = data.codename;\r\n            this.externalId = data.externalId;\r\n            this.isActive = data.isActive;\r\n            this.isDefault = data.isDefault;\r\n            this.fallbackLanguage = data.fallbackLanguage;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export class FallbackLanguageModel {\r\n        public id: string;\r\n\r\n        constructor(data: { id: string }) {\r\n            this.id = data.id;\r\n        }\r\n    }\r\n\r\n    export type ModifyLanguageOperation = 'replace';\r\n\r\n    export interface IModifyLanguageData {\r\n        op: ModifyLanguageOperation;\r\n        property_name: 'name' | 'codename' | 'fallback_language' | 'is_active';\r\n        value: string | boolean | SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export interface IAddLanguageData {\r\n        name: string;\r\n        codename: string;\r\n        is_active?: boolean;\r\n        fallback_language?: SharedModels.IReferenceObject;\r\n        external_id?: string;\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { PreviewContracts } from '../../contracts';\r\n\r\nexport namespace PreviewModels {\r\n    export interface IPreviewSpace {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewContentType {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPattern {\r\n        space: IPreviewSpace | null;\r\n        urlPattern: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPatterns {\r\n        contentType: IPreviewContentType;\r\n        urlPatterns: IPreviewUrlPattern[];\r\n    }\r\n\r\n    export interface IPreviewSpaceDomain {\r\n        space: IPreviewSpace;\r\n        domain: string;\r\n    }\r\n\r\n    export class PreviewConfiguration\r\n        implements SharedModels.IBaseModel<PreviewContracts.IPreviewConfigurationContract>\r\n    {\r\n        public spaceDomains: IPreviewSpaceDomain[];\r\n        public previewUrlPatterns: IPreviewUrlPatterns[];\r\n        public _raw: PreviewContracts.IPreviewConfigurationContract;\r\n\r\n        constructor(data: {\r\n            spaceDomains: IPreviewSpaceDomain[];\r\n            previewUrlPatterns: IPreviewUrlPatterns[];\r\n            _raw: PreviewContracts.IPreviewConfigurationContract;\r\n        }) {\r\n            this.spaceDomains = data.spaceDomains;\r\n            this.previewUrlPatterns = data.previewUrlPatterns;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export interface IModifyPreviewConfigurationData {\r\n        space_domains: {\r\n            space: {\r\n                id?: string;\r\n                codename?: string;\r\n            };\r\n            domain: string;\r\n        }[];\r\n        preview_url_patterns: {\r\n            content_type: {\r\n                id?: string;\r\n                codename?: string;\r\n                external_id?: string;\r\n            };\r\n            url_patterns: {\r\n                space: null | {\r\n                    id?: string;\r\n                    codename?: string;\r\n                };\r\n                url_pattern: string;\r\n            }[];\r\n        }[];\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { ProjectUserContracts, SharedContracts } from '../../contracts';\r\n\r\nexport namespace ProjectUserModels {\r\n    export interface IProjectUserCollectionGroup {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: IProjectUserRole[];\r\n    }\r\n\r\n    export interface IProjectUserRole {\r\n        id: string;\r\n        languages: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export class ProjectUser implements SharedModels.IBaseModel<ProjectUserContracts.IUserContract> {\r\n        userId!: string;\r\n        collectionGroups!: CollectionGroup[];\r\n        _raw!: ProjectUserContracts.IUserContract;\r\n\r\n        constructor(data: {\r\n            userId: string;\r\n            collectionGroups: CollectionGroup[];\r\n            _raw: ProjectUserContracts.IUserContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class CollectionGroup\r\n        implements SharedModels.IBaseModel<ProjectUserContracts.IProjectUserCollectionGroupContract>\r\n    {\r\n        collections!: SharedContracts.IReferenceObjectContract[];\r\n        roles!: ProjectUserModels.IProjectUserRole[];\r\n        _raw!: ProjectUserContracts.IProjectUserCollectionGroupContract;\r\n\r\n        constructor(data: {\r\n            collections: SharedContracts.IReferenceObjectContract[];\r\n            roles: ProjectUserModels.IProjectUserRole[];\r\n            _raw: ProjectUserContracts.IProjectUserCollectionGroupContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ICollectionGroupsData {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: {\r\n            id: string;\r\n            languages: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n    }\r\n\r\n    export interface IInviteUserData {\r\n        email: string;\r\n        collection_groups: ICollectionGroupsData[];\r\n    }\r\n\r\n    export interface IChangeUserRoleData {\r\n        collection_groups: ICollectionGroupsData[];\r\n    }\r\n}\r\n","import { IHeader, IHttpCancelRequestToken } from '@kontent-ai/core-sdk';\r\nimport { ResponseType } from 'axios';\r\n\r\nimport { BaseResponses } from '../responses/base-responses';\r\n\r\nexport interface IContentManagementQueryConfig {\r\n    headers: IHeader[];\r\n    cancelTokenRequest?: IHttpCancelRequestToken<any>;\r\n}\r\n\r\nexport interface IContentManagementInternalQueryConfig {\r\n    responseType?: ResponseType;\r\n}\r\n\r\nexport interface IContentManagementListQueryConfig<TResponse extends BaseResponses.IContentManagementListResponse> {\r\n    /**\r\n     * Delay between each HTTP requests. Helps being rate limited by number of calls towards CM API.\r\n     */\r\n    delayBetweenRequests?: number;\r\n\r\n    /**\r\n     * Executed when a list response is loaded\r\n     */\r\n    responseFetched?: (response: TResponse, continuationToken?: string) => void;\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { RoleContracts } from '../../contracts';\r\n\r\nexport namespace RoleModels {\r\n    export class Role implements SharedModels.IBaseModel<RoleContracts.IRoleContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename?: string;\r\n        public _raw!: RoleContracts.IRoleContract;\r\n\r\n        constructor(data: { id: string; name: string; codename?: string; _raw: RoleContracts.IRoleContract }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","export namespace SharedModels {\r\n    export interface IBaseModel<TContract> {\r\n        _raw: TContract;\r\n    }\r\n\r\n    export class Pagination {\r\n        constructor(public continuationToken: string | null, public nextPage: string | null) {}\r\n    }\r\n\r\n    export class ValidationError {\r\n        public message!: string;\r\n\r\n        constructor(data: { message: string }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentManagementBaseKontentError {\r\n        public validationErrors: ValidationError[];\r\n        public message: string;\r\n        public requestId: string;\r\n        public errorCode: number;\r\n        public originalError: any;\r\n\r\n        constructor(data: {\r\n            message: string;\r\n            requestId: string;\r\n            errorCode: number;\r\n            originalError: any;\r\n            validationErrors: ValidationError[];\r\n        }) {\r\n            this.validationErrors = data.validationErrors;\r\n            this.message = data.message;\r\n            this.requestId = data.requestId;\r\n            this.errorCode = data.errorCode;\r\n            this.originalError = data.originalError;\r\n        }\r\n    }\r\n\r\n    export interface IReferenceObject {\r\n        id?: string;\r\n        codename?: string;\r\n        externalId?: string;\r\n    }\r\n\r\n    export interface IIdRefenceObject {\r\n        id: string;\r\n    }\r\n\r\n    export class ReferenceObject implements IReferenceObject {\r\n        public id?: string;\r\n        public codename?: string;\r\n        public externalId?: string;\r\n\r\n        constructor(data: { id?: string; codename?: string; externalId?: string }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","import { SharedContracts, SpaceContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace SpaceModels {\r\n    export type ModifySpaceOperation = 'replace';\r\n\r\n    type ModifySpaceProperties = {\r\n        property_name: \"name\" | \"codename\";\r\n        value: string;\r\n    } | {\r\n        property_name: \"web_spotlight_root_item\";\r\n        value: SharedContracts.IReferenceObjectContract;\r\n    }\r\n    | {\r\n        property_name: \"collections\";\r\n        value: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export type IModifySpaceData = { op: ModifySpaceOperation } & ModifySpaceProperties;\r\n\r\n    export interface IAddSpaceData {\r\n        name: string;\r\n        codename?: string;\r\n        web_spotlight_root_item?: SharedContracts.IReferenceObjectContract;\r\n        collections?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export class Space implements SharedModels.IBaseModel<SpaceContracts.ISpaceContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public webSpotlightRootItem?: SharedModels.ReferenceObject;\r\n        public collections?: SharedModels.ReferenceObject[];\r\n        public _raw!: SpaceContracts.ISpaceContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            webSpotlightRootItem?: SharedModels.ReferenceObject;\r\n            collections?: SharedModels.ReferenceObject[];\r\n            _raw: SpaceContracts.ISpaceContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, SubscriptionContracts } from '../../contracts';\r\n\r\nexport namespace SubscriptionModels {\r\n    export interface ISubscriptionEnvironment {\r\n        name: string;\r\n        id: string;\r\n    }\r\n\r\n    export class SubscriptionProject\r\n        implements SharedModels.IBaseModel<SubscriptionContracts.ISubscriptionProjectContract>\r\n    {\r\n        public id!: string;\r\n        public isActive!: boolean;\r\n        public name!: string;\r\n        public environments!: ISubscriptionEnvironment[];\r\n        public _raw!: SubscriptionContracts.ISubscriptionProjectContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            isActive: boolean;\r\n            name: string;\r\n            environments: ISubscriptionEnvironment[];\r\n            _raw: SubscriptionContracts.ISubscriptionProjectContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ISubscriptionCollectionGroup {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: ISubscriptionUserRole[];\r\n    }\r\n\r\n    export interface ISubscriptionUserRoleLanguage {\r\n        id: string;\r\n        externalId?: string;\r\n        codename: string;\r\n        name: string;\r\n        isActive: boolean;\r\n    }\r\n\r\n    export interface ISubscriptionUserRole {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        languages: ISubscriptionUserRoleLanguage[];\r\n    }\r\n\r\n    export interface ISubscriptionUserEnvironment {\r\n        id: string;\r\n        name: string;\r\n        isUserActive: boolean;\r\n        lastActivityAt?: Date;\r\n        collectionGroups: ISubscriptionCollectionGroup[];\r\n    }\r\n\r\n    export interface ISubscriptionUserProject {\r\n        id: string;\r\n        name: string;\r\n        environments: ISubscriptionUserEnvironment[];\r\n    }\r\n\r\n    export class SubscriptionUser {\r\n        public id!: string;\r\n        public email!: string;\r\n        public hasPendingInvitation!: boolean;\r\n        public projects!: ISubscriptionUserProject[];\r\n\r\n        public firstName?: string;\r\n        public lastName?: string;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            email: string;\r\n            hasPendingInvitation: boolean;\r\n            projects: ISubscriptionUserProject[];\r\n\r\n            firstName?: string;\r\n            lastName?: string;\r\n            _raw: SubscriptionContracts.ISubscriptionUserContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { TaxonomyContracts } from '../../contracts';\r\n\r\nexport namespace TaxonomyModels {\r\n    export type ModifyTaxonomyTypeOperation = 'addInto' | 'remove' | 'replace' | 'move';\r\n\r\n    export interface IModifyTaxonomyData {\r\n        op: ModifyTaxonomyTypeOperation;\r\n        reference?: SharedModels.IReferenceObject;\r\n        property_name?: string;\r\n        value?: IAddTaxonomyRequestModel | string | IAddTaxonomyRequestModel[];\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n        under?: SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export class Taxonomy implements SharedModels.IBaseModel<TaxonomyContracts.ITaxonomyContract> {\r\n        public lastModified!: Date;\r\n        public name!: string;\r\n        public id!: string;\r\n        public codename!: string;\r\n        public terms!: Taxonomy[];\r\n        public externalId?: string;\r\n        public _raw!: TaxonomyContracts.ITaxonomyContract;\r\n\r\n        constructor(data: {\r\n            lastModified: Date;\r\n            name: string;\r\n            id: string;\r\n            codename: string;\r\n            terms: Taxonomy[];\r\n            externalId?: string;\r\n            _raw: TaxonomyContracts.ITaxonomyContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddTaxonomyRequestModel {\r\n        name: string;\r\n        terms: IAddTaxonomyRequestModel[];\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, WebSpotlightContracts } from '../../contracts';\r\n\r\nexport namespace WebSpotlightModels {\r\n    export class WebSpotlightStatus implements SharedModels.IBaseModel<WebSpotlightContracts.IWebSpotlightStatus> {\r\n        public enabled: boolean;\r\n        public rootType?: SharedModels.IIdRefenceObject;\r\n        public _raw: WebSpotlightContracts.IWebSpotlightStatus;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            rootType?: SharedModels.IIdRefenceObject;\r\n            _raw: WebSpotlightContracts.IWebSpotlightStatus;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.rootType = data.rootType;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export interface IActivateWebSpotlightData {\r\n        root_type: SharedContracts.IReferenceObjectContract | null;\r\n    }\r\n}\r\n","import { WebhookContracts } from '../../contracts/webhook-contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace WebhookModels {\r\n    export type WebhookWorkflowStepOperation = 'publish' | 'unpublish' | 'archive' | 'restore' | 'upsert';\r\n    export type WebhookContentTypeActions = 'created' | 'changed' | 'deleted';\r\n    export type WebhookAssetActions = 'created' | 'changed' | 'metadata_changed' | 'deleted';\r\n    export type WebhookTaxonomyActions =\r\n        | 'created'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'term_created'\r\n        | 'term_changed'\r\n        | 'term_deleted'\r\n        | 'terms_moved';\r\n    export type WebhookLanguageActions = 'created' | 'changed' | 'deleted';\r\n    export type WebhookContentItemActions =\r\n        | 'published'\r\n        | 'unpublished'\r\n        | 'created'\r\n        | 'changed'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'workflow_step_changed';\r\n    export type WebhookManagementContentChangesOperations = 'archive' | 'create' | 'restore';\r\n    export type WebhookPreviewContentChangesOperations = 'archive' | 'upsert' | 'restore';\r\n    export type WebhookDeliveryTriggerSlots = 'published' | 'preview';\r\n    export type WebhookDeliveryTriggersEvents = 'all' | 'specific';\r\n    export type WebhookHealthStatus = 'unknown' | 'working' | 'failing' | 'dead';\r\n\r\n    export interface IAddLegacyWebhookData {\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        enabled?: boolean;\r\n        triggers: {\r\n            delivery_api_content_changes?: WebhookContracts.ILegacyWebhookDeliveryApiContentChangesContract[];\r\n            preview_delivery_api_content_changes?: WebhookContracts.ILegacyWebhookPreviewDeliveryApiContentChangesContract[];\r\n            workflow_step_changes?: WebhookContracts.ILegacyWebhookWorkflowStepChangesContract[];\r\n            management_api_content_changes?: WebhookContracts.ILegacyWebhookManagementApiContentChangesContract[];\r\n        };\r\n    }\r\n    export interface IAddWebhookData {\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        enabled?: boolean;\r\n        headers?: IWebhookHeader[];\r\n\r\n        delivery_triggers: {\r\n            slot: WebhookDeliveryTriggerSlots;\r\n            events: WebhookDeliveryTriggersEvents;\r\n            asset?: WebhookContracts.IWebhookAssetContract;\r\n            content_type?: WebhookContracts.IWebhookContentTypeContract;\r\n            taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n            language?: WebhookContracts.IWebhookLanguageContract;\r\n            content_item?: WebhookContracts.IWebhookContentItemContract;\r\n        };\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersContentType {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContracts.WebhookAction<WebhookContentTypeActions>[];\r\n        public filters?: WebhookContracts.IContentTypeFilters;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            actions?: WebhookContracts.WebhookAction<WebhookContentTypeActions>[];\r\n            filters?: WebhookContracts.IContentTypeFilters;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n            this.filters = data.filters;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersAsset {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContracts.WebhookAction<WebhookAssetActions>[];\r\n\r\n        constructor(data: { enabled: boolean; actions?: WebhookContracts.WebhookAction<WebhookAssetActions>[] }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersTaxonomy {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContracts.WebhookAction<WebhookTaxonomyActions>[];\r\n        public filters?: WebhookContracts.ITaxonomyFilters;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            actions?: WebhookContracts.WebhookAction<WebhookTaxonomyActions>[];\r\n            filters?: WebhookContracts.ITaxonomyFilters;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n            this.filters = data.filters;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersLanguage {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContracts.WebhookAction<WebhookLanguageActions>[];\r\n        public filters?: WebhookContracts.ILanguageFilters;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            actions?: WebhookContracts.WebhookAction<WebhookLanguageActions>[];\r\n            filters?: WebhookContracts.ILanguageFilters;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n            this.filters = data.filters;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersContentItem {\r\n        public enabled: boolean;\r\n        public actions?: (WebhookContracts.WebhookAction<WebhookContentItemActions> & {\r\n            transition_to?: WebhookContracts.ContentItemTransitionTo[];\r\n        })[];\r\n        public filters?: WebhookContracts.IContentItemFilters;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            actions?: (WebhookContracts.WebhookAction<WebhookContentItemActions> & {\r\n                transition_to?: WebhookContracts.ContentItemTransitionTo[];\r\n            })[];\r\n            filters?: WebhookContracts.IContentItemFilters;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n            this.filters = data.filters;\r\n        }\r\n    }\r\n\r\n    export class WebhookTransitionsTo {\r\n        public id: string;\r\n\r\n        constructor(data: { id: string }) {\r\n            this.id = data.id;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookWorkflowStepChanges {\r\n        public type: 'content_item_variant';\r\n        public transitionsTo: WebhookTransitionsTo[];\r\n\r\n        constructor(data: { type: 'content_item_variant'; transitionsTo: WebhookTransitionsTo[] }) {\r\n            this.type = data.type;\r\n            this.transitionsTo = data.transitionsTo;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookDeliveryApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookWorkflowStepOperation[];\r\n\r\n        constructor(data: { type: 'taxonomy' | 'content_item_variant'; operations: WebhookWorkflowStepOperation[] }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookPreviewDeliveryApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookPreviewContentChangesOperations[];\r\n\r\n        constructor(data: {\r\n            type: 'taxonomy' | 'content_item_variant';\r\n            operations: WebhookPreviewContentChangesOperations[];\r\n        }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookManagementApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookManagementContentChangesOperations[];\r\n\r\n        constructor(data: {\r\n            type: 'taxonomy' | 'content_item_variant';\r\n            operations: WebhookManagementContentChangesOperations[];\r\n        }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export interface IWebhookHeader {\r\n        key: string;\r\n        value: string;\r\n    }\r\n\r\n    export class Webhook implements SharedModels.IBaseModel<WebhookContracts.IWebhookContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public secret: string;\r\n        public url: string;\r\n        public enabled?: boolean;\r\n        public lastModified?: Date;\r\n        public healthStatus?: WebhookHealthStatus;\r\n        public headers?: IWebhookHeader[];\r\n        public deliveryTriggers: {\r\n            slot: WebhookDeliveryTriggerSlots;\r\n            events: WebhookDeliveryTriggersEvents;\r\n            asset?: WebhookContracts.IWebhookAssetContract;\r\n            contentType?: WebhookContracts.IWebhookContentTypeContract;\r\n            taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n            language?: WebhookContracts.IWebhookLanguageContract;\r\n            contentItem?: WebhookContracts.IWebhookContentItemContract;\r\n        };\r\n        public _raw: WebhookContracts.IWebhookContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            secret: string;\r\n            url: string;\r\n            enabled?: boolean;\r\n            lastModified?: Date;\r\n            healthStatus?: WebhookHealthStatus;\r\n            headers?: IWebhookHeader[];\r\n            deliveryTriggers: {\r\n                slot: WebhookDeliveryTriggerSlots;\r\n                events: WebhookDeliveryTriggersEvents;\r\n                asset?: WebhookContracts.IWebhookAssetContract;\r\n                contentType?: WebhookContracts.IWebhookContentTypeContract;\r\n                taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n                language?: WebhookContracts.IWebhookLanguageContract;\r\n                contentItem?: WebhookContracts.IWebhookContentItemContract;\r\n            };\r\n            _raw: WebhookContracts.IWebhookContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.secret = data.secret;\r\n            this.url = data.url;\r\n            this.lastModified = data.lastModified;\r\n            this.healthStatus = data.healthStatus;\r\n            this.deliveryTriggers = data.deliveryTriggers;\r\n            this.enabled = data.enabled;\r\n            this.headers = data.headers;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhook implements SharedModels.IBaseModel<WebhookContracts.ILegacyWebhookContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public secret: string;\r\n        public url: string;\r\n        public enabled?: boolean;\r\n        public healthStatus?: string;\r\n        public lastModified?: Date;\r\n        public triggers: {\r\n            deliveryApiContentChanges: LegacyWebhookDeliveryApiContentChanges[];\r\n            previewDeliveryContentChanges: LegacyWebhookPreviewDeliveryApiContentChanges[];\r\n            workflowStepChanges: LegacyWebhookWorkflowStepChanges[];\r\n            managementApiContentChanges: LegacyWebhookManagementApiContentChanges[];\r\n        };\r\n        public _raw!: WebhookContracts.ILegacyWebhookContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            secret: string;\r\n            url: string;\r\n            healthStatus?: string;\r\n            lastModified?: Date;\r\n            triggers: {\r\n                deliveryApiContentChanges: LegacyWebhookDeliveryApiContentChanges[];\r\n                workflowStepChanges: LegacyWebhookWorkflowStepChanges[];\r\n                previewDeliveryContentChanges: LegacyWebhookPreviewDeliveryApiContentChanges[];\r\n                managementApiContentChanges: LegacyWebhookManagementApiContentChanges[];\r\n            };\r\n            _raw: WebhookContracts.ILegacyWebhookContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.secret = data.secret;\r\n            this.url = data.url;\r\n            this.triggers = data.triggers;\r\n            this.lastModified = data.lastModified;\r\n            this.healthStatus = data.healthStatus;\r\n        }\r\n    }\r\n}\r\n","import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, WorkflowContracts } from '../../contracts';\r\nimport { LanguageVariantModels } from '../language-variants/language-variant.models';\r\n\r\nexport namespace WorkflowModels {\r\n    export interface LanguageVariantWorkflow {\r\n        workflowOdentifier: SharedContracts.ICodenameIdReferenceContract;\r\n        stepIdentifier: SharedContracts.ICodenameIdReferenceContract;\r\n    }\r\n\r\n    export class WorkflowStep implements SharedModels.IBaseModel<WorkflowContracts.IWorkflowStepContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public transitionsTo!: string[];\r\n        public _raw!: WorkflowContracts.IWorkflowStepContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            transitionsTo: string[];\r\n            _raw: WorkflowContracts.IWorkflowStepContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class Workflow implements SharedModels.IBaseModel<WorkflowContracts.IWorkflowContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public scopes!: WorkflowContracts.IWorkflowScopeContract[];\r\n        public steps!: WorkflowContracts.IWorkflowStepNewContract[];\r\n        public publishedStep!: WorkflowContracts.IWorkflowPublishedStepContract;\r\n        public scheduledStep!: WorkflowContracts.IWorkflowScheduledStepContract;\r\n        public archivedStep!: WorkflowContracts.IWorkflowArchivedStepContract;\r\n        public _raw!: WorkflowContracts.IWorkflowContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            scopes: WorkflowContracts.IWorkflowScopeContract[];\r\n            steps: WorkflowContracts.IWorkflowStepNewContract[];\r\n            publishedStep: WorkflowContracts.IWorkflowPublishedStepContract;\r\n            scheduledStep: WorkflowContracts.IWorkflowScheduledStepContract;\r\n            archivedStep: WorkflowContracts.IWorkflowArchivedStepContract;\r\n            _raw: WorkflowContracts.IWorkflowContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IPublishLanguageVariantData {\r\n        /**\r\n         * ISO-8601 formatted date/time. Example: 2019-01-31T11:00:00+01:00.\r\n         * If you do not provide this property, the specified language variant is published immediately.\r\n         */\r\n        scheduled_to?: string;\r\n        display_timezone?: string;\r\n    }\r\n\r\n    export interface IUnpublishLanguageVarianthData {\r\n        /**\r\n         * ISO-8601 formatted date/time. Example: 2019-01-31T11:00:00+01:00.\r\n         * If you do not provide this property, the specified language variant is published immediately.\r\n         */\r\n        scheduled_to?: string;\r\n        display_timezone?: string;\r\n    }\r\n\r\n    export interface IChangeWorkflowOfLanguageVariantData {\r\n        workflow_identifier: {\r\n            id?: string;\r\n            codename?: string;\r\n        };\r\n        step_identifier: SharedContracts.IReferenceObjectContract;\r\n        due_date?: LanguageVariantModels.ILanguageVariantDueDate;\r\n        contributors?: SharedContracts.UserReferenceDataContract[];\r\n        note?: string;\r\n    }\r\n\r\n    export interface IAddWorkflowData {\r\n        name: string;\r\n        codename?: string;\r\n        scopes: {\r\n            content_types: SharedContracts.IReferenceObjectContract[];\r\n            collections?: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n        steps: {\r\n            name: string;\r\n            codename: string;\r\n            color: WorkflowContracts.WorkflowColor;\r\n            transitions_to: {\r\n                step: {\r\n                    codename?: string;\r\n                };\r\n            }[];\r\n            role_ids: string[];\r\n        }[];\r\n        published_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            create_new_version_role_ids?: string[];\r\n            unpublish_role_ids?: string[];\r\n        };\r\n        archived_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            role_ids?: string[];\r\n        };\r\n    }\r\n\r\n    export interface IUpdateWorkflowData {\r\n        name: string;\r\n        codename?: string;\r\n        scopes: {\r\n            content_types: SharedContracts.IReferenceObjectContract[];\r\n            collections?: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n        steps: {\r\n            id?: string;\r\n            name: string;\r\n            codename: string;\r\n            color: WorkflowContracts.WorkflowColor;\r\n            transitions_to: {\r\n                step: {\r\n                    id?: string;\r\n                    codename?: string;\r\n                };\r\n            }[];\r\n            role_ids: string[];\r\n        }[];\r\n        published_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            create_new_version_role_ids?: string[];\r\n            unpublish_role_ids?: string[];\r\n        };\r\n        archived_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            role_ids?: string[];\r\n        };\r\n    }\r\n}\r\n","\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetFoldersQuery extends BaseQuery<AssetFolderResponses.AddAssetFoldersResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetFolderModels.IAddAssetFoldersData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.AddAssetFoldersResponse> {\r\n        return this.queryService.addAssetFoldersAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAssetFolders();\r\n    }\r\n}\r\n","export  * from './list-asset-folders.class';\r\nexport  * from './add-asset-folders.class';\r\nexport  * from './modify-asset-folders.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListAssetFoldersQuery extends BaseQuery<AssetFolderResponses.AssetFoldersListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.AssetFoldersListResponse> {\r\n        return this.queryService.listAssetFoldersAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssetFolders();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyAssetFoldersQuery extends BaseQuery<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetFolderModels.IModifyAssetFolderData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n        return this.queryService.modifyAssetFoldersAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyAssetFolders();\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, AssetRenditionModels } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public data: AssetRenditionModels.IAddAssetRenditionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return this.queryService.addAssetRenditionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAssetRendition(this.assetIdentifier);\r\n    }\r\n}\r\n","export * from './list-asset-renditions-query.class';\r\nexport * from './view-assset-rendition-query.class';\r\nexport * from './add-asset-rendition-query.class';\r\nexport * from './modify-asset-rendition-query.class';\r\n","import { Identifiers } from '../../models/identifiers';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListAssetRenditionsQuery extends BaseListingQuery<\r\n    AssetRenditionResponses.AssetRenditionsListResponse,\r\n    AssetRenditionResponses.AssetRenditionsListAllResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.AssetRenditionsListResponse> {\r\n        return this.queryService.listAssetRenditionsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssetRenditions(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: AssetRenditionResponses.AssetRenditionsListResponse[]\r\n    ): AssetRenditionResponses.AssetRenditionsListAllResponse {\r\n        return new AssetRenditionResponses.AssetRenditionsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, AssetRenditionModels } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.ModifyAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public renditionIdentifier: Identifiers.RenditionIdentifier,\r\n        public data: AssetRenditionModels.IModifyAssetRenditionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.ModifyAssetRenditionResponse> {\r\n        return this.queryService.modifyAssetRenditionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyAssetRendition(this.assetIdentifier, this.renditionIdentifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n        return this.queryService.viewAssetRenditionAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewAssetRendition(this.assetIdentifier, this.renditionIdentifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { assetElementsBuilder, AssetElementsBuilder, AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetQuery extends BaseQuery<AssetResponses.AddAssetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<AssetResponses.AddAssetResponse> {\r\n    return this.queryService.addAssetAsync(this.getUrl(), this.data(assetElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addAsset();\r\n  }\r\n}\r\n\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteAssetQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteAssetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteAsset(this.identifier);\r\n    }\r\n}\r\n","export * from './list-assets-query.class';\r\nexport * from './view-assets-query';\r\nexport * from './upload-binary-file-query.class';\r\nexport * from './add-asset-query.class';\r\nexport * from './upsert-asset-query.class';\r\nexport * from './delete-asset-query.class';\r\nexport * from './upload-asset-from-url-query.class';\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListAssetsQuery extends BaseListingQuery<\r\n    AssetResponses.AssetsListResponse,\r\n    AssetResponses.AssetsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.AssetsListResponse> {\r\n        return this.queryService.listAssetsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssets();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: AssetResponses.AssetsListResponse[]\r\n    ): AssetResponses.AssetsListAllResponse {\r\n        return new AssetResponses.AssetsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UploadAssetFromUrlQuery extends BaseQuery<AssetResponses.AddAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetModels.IUploadAssetFromUrlRequestData\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        this.withUrl('none'); // do not set url as there are multiple endpoints used\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.AddAssetResponse> {\r\n        return this.queryService.uploadAssetFromUrlAsync(\r\n            this.getUploadBinaryFileUrl(),\r\n            this.getAddAssetUrl(),\r\n            this.data,\r\n            this.queryConfig\r\n        );\r\n    }\r\n\r\n    getAddAssetUrl(): string {\r\n        return super.getUrlForAction(this.apiEndpoints.addAsset());\r\n    }\r\n\r\n    getUploadBinaryFileUrl(): string {\r\n        return super.getUrlForAction(this.apiEndpoints.uploadBinaryFile(this.data.binaryFile.filename));\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAsset();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UploadBinaryFileQuery extends BaseQuery<AssetResponses.UploadBinaryFileResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: AssetModels.IUploadBinaryFileRequestData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<AssetResponses.UploadBinaryFileResponse> {\r\n    return this.queryService.uploadBinaryFileAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.uploadBinaryFile(this.data.filename);\r\n  }\r\n}\r\n\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { AssetElementsBuilder, assetElementsBuilder, AssetModels, Identifiers } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertAssetQuery extends BaseQuery<AssetResponses.UpdateAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier,\r\n        public data: (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.UpsertAssertResponse> {\r\n        return this.queryService.upsertAssetAsync(this.getUrl(), this.data(assetElementsBuilder), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.upsertAsset(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewAssetsQuery extends BaseQuery<AssetResponses.ViewAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.ViewAssetResponse> {\r\n        return this.queryService.viewAssetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewAsset(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { IContentManagementListQueryConfig } from '../models';\r\nimport { BaseResponses } from '../responses';\r\nimport { ManagementQueryService } from '../services';\r\nimport { BaseQuery } from './base-query';\r\n\r\nexport abstract class BaseListingQuery<\r\n    TResponse extends BaseResponses.IContentManagementListResponse,\r\n    TAllResponse extends BaseResponses.IContentManagementListAllResponse\r\n> extends BaseQuery<TResponse> {\r\n    protected readonly xContinuationHeaderName: string = 'x-continuation';\r\n    protected listQueryConfig?: IContentManagementListQueryConfig<TResponse>;\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Configuration for list queries\r\n     * @param config List configuration\r\n     */\r\n    withListQueryConfig(config?: IContentManagementListQueryConfig<TResponse>): this {\r\n        this.listQueryConfig = config;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets the 'x-continuation' header value. This can be used for fetching next pages.\r\n     * @param token Value from continuation_token property\r\n     */\r\n    xContinuationToken(token: string): this {\r\n        this.queryConfig.headers.push({\r\n            header: this.xContinuationHeaderName,\r\n            value: token\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Query to get all items. Uses paging data and may execute multiple HTTP requests depending on number of items\r\n     */\r\n    toAllPromise(): Promise<TAllResponse> {\r\n        return this.queryService.getListAllResponseAsync<TResponse, TAllResponse>({\r\n            listQueryConfig: this.listQueryConfig,\r\n            allResponseFactory: (items, responses) => this.allResponseFactory(items, responses),\r\n            getResponse: (token) => {\r\n                if (token) {\r\n                    this.xContinuationToken(token);\r\n                }\r\n\r\n                return this.toPromise();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected abstract allResponseFactory(items: any[], responses: TResponse[]): TAllResponse;\r\n}\r\n","import { IHeader, IHttpCancelRequestToken, IQueryParameter, Parameters } from '@kontent-ai/core-sdk';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { ContentManagementApiEndpoints, IContentManagementQueryConfig } from '../models';\r\nimport { BaseResponses } from '../responses';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport abstract class BaseQuery<TResponse extends BaseResponses.IContentManagementResponse> {\r\n    private _customUrl?: string;\r\n\r\n    protected readonly queryConfig: IContentManagementQueryConfig;\r\n    protected readonly parameters: IQueryParameter[] = [];\r\n    protected readonly apiEndpoints: ContentManagementApiEndpoints = new ContentManagementApiEndpoints({\r\n        environmentId: this.config.environmentId,\r\n        subscriptionId: this.config.subscriptionId\r\n    });\r\n    protected _addSlashToUrl: boolean = true;\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService\r\n    ) {\r\n        this.queryConfig = {\r\n            headers: config.headers ? [...config.headers] : [],\r\n            cancelTokenRequest: undefined\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets url for this query\r\n     */\r\n    getUrl(): string {\r\n        // use custom URL if user specified it\r\n        if (this._customUrl) {\r\n            return this._customUrl;\r\n        }\r\n\r\n        return this.getUrlForAction(this.getAction());\r\n    }\r\n\r\n    /**\r\n     * Adds header to request\r\n     * @param header Header to add\r\n     */\r\n    withHeader(header: IHeader): this {\r\n        this.queryConfig.headers.push(header);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds headers to request\r\n     * @param headers Headers to add\r\n     */\r\n    withHeaders(headers: IHeader[]): this {\r\n        this.queryConfig.headers.push(...headers);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds cancel token to request\r\n     */\r\n    withCancelToken(tokenRequest: IHttpCancelRequestToken<any>): this {\r\n        this.queryConfig.cancelTokenRequest = tokenRequest;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets array of currently set headers\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryConfig.headers;\r\n    }\r\n\r\n    /**\r\n     * Sets custom query parmeter that will be added to URL\r\n     * @param name Parameter name\r\n     * @param value Parameter value\r\n     */\r\n    withCustomParameter(name: string, value: string): this {\r\n        this.parameters.push(new Parameters.CustomParameter(name, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Overrides default url resolver and resolves this query with a custom one\r\n     * @param url Custom url to resolve query\r\n     */\r\n    withUrl(url: string): this {\r\n        this._customUrl = url;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets parameters assigned to this query\r\n     */\r\n    getParameters(): IQueryParameter[] {\r\n        return this.parameters;\r\n    }\r\n\r\n    /**\r\n     * Gets promise to resolve this query\r\n     */\r\n    abstract toPromise(): Promise<TResponse>;\r\n\r\n    /**\r\n     * Gets action for this query\r\n     */\r\n    protected abstract getAction(): string;\r\n\r\n    protected getUrlForAction(action: string): string {\r\n        return encodeURI(this.queryService.getFullUrl(action, this.getParameters(), this._addSlashToUrl));\r\n    }\r\n}\r\n","export  * from './list-collections-query.class';\r\nexport  * from './set-collections-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { CollectionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListCollectionsQuery extends BaseQuery<CollectionResponses.CollectionsListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CollectionResponses.CollectionsListResponse> {\r\n        return this.queryService.listCollectionsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listCollections();\r\n    }\r\n}\r\n","\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { CollectionModels } from '../../models';\r\nimport { CollectionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class SetCollectionsQuery extends BaseQuery<CollectionResponses.SetCollectionsResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: CollectionModels.ISetCollectionData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CollectionResponses.SetCollectionsResponse> {\r\n        return this.queryService.setCollectionsAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.setCollections();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentItemQuery extends BaseQuery<ContentItemResponses.AddContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IAddContentItemPostContract\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.AddContentItemResponse> {\r\n    return this.queryService.addContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentItem();\r\n  }\r\n}\r\n\r\nexport class AddContentItemQueryInit {\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n  ) {\r\n  }\r\n\r\n  withData(item: ContentItemContracts.IAddContentItemPostContract): AddContentItemQuery {\r\n    return new AddContentItemQuery(this.config, this.queryService, item);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentItemQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentItemIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentItemAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentItem(this.identifier);\r\n    }\r\n}\r\n","export * from './list-content-items-query.class';\r\nexport * from './view-content-item-query.class';\r\nexport * from './add-content-item-query.class';\r\nexport * from './update-content-item-query.class';\r\nexport * from './delete-content-item-query.class';\r\nexport * from './upsert-content-item-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentItemsQuery extends BaseListingQuery<\r\n    ContentItemResponses.ContentItemsResponse,\r\n    ContentItemResponses.ContentItemsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentItemResponses.ContentItemsResponse> {\r\n        return this.queryService.listContentItemsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.items();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentItemResponses.ContentItemsResponse[]\r\n    ): ContentItemResponses.ContentItemsListAllResponse {\r\n        return new ContentItemResponses.ContentItemsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpdateContentItemQuery extends BaseQuery<ContentItemResponses.UpdateContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IUpdateContentItemPostContract,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.UpdateContentItemResponse> {\r\n    return this.queryService.updateContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n      return this.apiEndpoints.updateContentItem(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertContentItemQuery extends BaseQuery<ContentItemResponses.UpsertContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IUpsertContentItemPostContract,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.UpsertContentItemResponse> {\r\n    return this.queryService.upsertContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n      return this.apiEndpoints.upsertContentItem(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentItemQuery extends BaseQuery<ContentItemResponses.ViewContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.ViewContentItemResponse> {\r\n    return this.queryService.viewContentItemAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentItem(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeSnippetModels, ContentTypeSnippetElements, contentTypeSnippetElementsBuilder } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n    return this.queryService.addContentTypeSnippetAsync(this.getUrl(), this.data(contentTypeSnippetElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentTypeSnippet();\r\n  }\r\n}\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentTypeSnippetQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentTypeSnippetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentTypeSnippet(this.identifier);\r\n    }\r\n}\r\n","export * from './list-content-type-snippets-query.class';\r\nexport * from './view-content-type-snippet-query.class';\r\nexport * from './add-content-type-snippet-query.class';\r\nexport * from './modify-content-type-snippet-query.class';\r\nexport * from './delete-content-type-snippet-query.class';\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentTypeSnippetsQuery extends BaseListingQuery<\r\n    ContentTypeSnippetResponses.ContentTypeSnippetListResponse,\r\n    ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentTypeSnippetResponses.ContentTypeSnippetListResponse> {\r\n        return this.queryService.listContentTypeSnippetsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listContentTypeSnippets();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentTypeSnippetResponses.ContentTypeSnippetListResponse[]\r\n    ): ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse {\r\n        return new ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, ContentTypeModels } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n    public data: ContentTypeModels.IModifyContentTypeData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n    return this.queryService.modifyContentTypeSnippetAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyContentTypeSnippet(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n    return this.queryService.viewContentTypeSnippetAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentTypeSnippet(this.identifier);\r\n  }\r\n}\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeModels, contentTypeElementsBuilder, ContentTypeElementsBuilder } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentTypeQuery extends BaseQuery<ContentTypeResponses.AddContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.AddContentTypeResponse> {\r\n    return this.queryService.addContentTypeAsync(this.getUrl(), this.data(contentTypeElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentType();\r\n  }\r\n}\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentTypeQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentTypeAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentType(this.identifier);\r\n    }\r\n}\r\n","export * from './list-content-types-query.class';\r\nexport * from './view-content-type-query.class';\r\nexport * from './delete-content-type-query.class';\r\nexport * from './add-content-type-query.class';\r\nexport * from './modify-content-type-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentTypesQuery extends BaseListingQuery<\r\n    ContentTypeResponses.ContentTypeListResponse,\r\n    ContentTypeResponses.ContentTypeListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentTypeResponses.ContentTypeListResponse> {\r\n        return this.queryService.listContentTypesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listContentTypes();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentTypeResponses.ContentTypeListResponse[]\r\n    ): ContentTypeResponses.ContentTypeListAllResponse {\r\n        return new ContentTypeResponses.ContentTypeListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, ContentTypeModels } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyContentTypeQuery extends BaseQuery<ContentTypeResponses.ModifyContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n    public data: ContentTypeModels.IModifyContentTypeData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.ModifyContentTypeResponse> {\r\n    return this.queryService.modifyContentTypeAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyContentType(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentTypeQuery extends BaseQuery<ContentTypeResponses.ViewContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.ViewContentTypeResponse> {\r\n    return this.queryService.viewContentTypeAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentType(this.identifier);\r\n  }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { CustomAppModels } from '../../models';\r\nimport { CustomAppsResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddCustomAppQuery extends BaseQuery<CustomAppsResponses.AddCustomAppResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: CustomAppModels.IAddCustomAppData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CustomAppsResponses.AddCustomAppResponse> {\r\n        return this.queryService.addCustomAppAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addCustomApp();\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteCustomAppQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.CustomAppIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteCustomAppAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteCustomApp(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { CustomAppsResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class GetCustomAppQuery extends BaseQuery<CustomAppsResponses.GetCustomAppResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.CustomAppIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CustomAppsResponses.GetCustomAppResponse> {\r\n        return this.queryService.getCustomAppAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getCustomApp(this.identifier);\r\n    }\r\n}\r\n","export * from './list-custom-apps-query.class';\r\nexport * from './delete-custom-app-query.class';\r\nexport * from './add-custom-app-query.class';\r\nexport * from './get-custom-app-query.class';\r\nexport * from './modify-custom-app-query';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { CustomAppsResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListCustomAppsQuery extends BaseListingQuery<\r\n    CustomAppsResponses.CustomAppsListResponse,\r\n    CustomAppsResponses.CustomAppsListAllResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CustomAppsResponses.CustomAppsListResponse> {\r\n        return this.queryService.listCustomAppsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listCustomApps();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: CustomAppsResponses.CustomAppsListResponse[]\r\n    ): CustomAppsResponses.CustomAppsListAllResponse {\r\n        return new CustomAppsResponses.CustomAppsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { CustomAppModels, Identifiers } from '../../models';\r\nimport { CustomAppsResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyCustomAppQuery extends BaseQuery<CustomAppsResponses.ModifyCustomAppResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.CustomAppIdentifier,\r\n        public data: CustomAppModels.ModifyCustomAppOperation[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CustomAppsResponses.ModifyCustomAppResponse> {\r\n        return this.queryService.modifyCustomAppAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyCustomApp(this.identifier);\r\n    }\r\n}\r\n","import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses';\r\n\r\nexport class CheckEnvironmentValidationQuery extends BaseQuery<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaskIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return this.queryService.checkEnvironmentValidationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.checkEnvironmentValidation(this.identifier);\r\n    }\r\n}\r\n","import { BaseQuery } from '../base-query';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\n\r\n\r\nexport class CloneEnvironmentQuery extends BaseQuery<EnvironmentResponses.CloneEnvironmentResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.ICloneEnvironmentData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.CloneEnvironmentResponse> {\r\n        return this.queryService.cloneEnvironmentAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.cloneEnvironment();\r\n    }\r\n}\r\n","import { BaseQuery } from '../base-query';\r\nimport { BaseResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\n\r\nexport class DeleteEnvironmentQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteEnvironmentAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteEnvironment();\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class EnvironmentInformationQuery extends BaseQuery<EnvironmentResponses.EnvironmentInformationResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.EnvironmentInformationResponse> {\r\n        return this.queryService.environmentInformationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.environmentInformation();\r\n    }\r\n}\r\n","import { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\n\r\nexport class GetEnvironmentCloningStateQuery extends BaseQuery<EnvironmentResponses.GetCloningStateResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.GetCloningStateResponse> {\r\n        return this.queryService.getEnvironmentCloningStateAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getEnvironmentCloningStatus();\r\n    }\r\n}\r\n","export * from './check-environment-validation-query.class';\r\nexport * from './clone-environment-query';\r\nexport * from './delete-environment-query';\r\nexport * from './get-environment-cloning-state-query';\r\nexport * from './list-project-validation-issues-query.class';\r\nexport * from './mark-environment-as-production-query';\r\nexport * from './start-project-validation-query.class';\r\nexport * from './modify-environment-query';\r\nexport * from './start-project-validation-query.class';\r\nexport * from './environment-information-query.class';\r\n","import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListEnvironmentValidationIssuesQuery extends BaseListingQuery<\r\n    EnvironmentResponses.EnvironmentValidationIssuesListResponse,\r\n    EnvironmentResponses.EnvironmentValidationIssuesListAllResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public taskIdentifier: Identifiers.TaskIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.EnvironmentValidationIssuesListResponse> {\r\n        return this.queryService.listEnvironmentValidationIssuesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listEnvironmentIssues(this.taskIdentifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: EnvironmentResponses.EnvironmentValidationIssuesListResponse[]\r\n    ): EnvironmentResponses.EnvironmentValidationIssuesListAllResponse {\r\n        return new EnvironmentResponses.EnvironmentValidationIssuesListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { BaseQuery } from '../base-query';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class MarkEnvironmentAsProductionQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.markEnvironmentAsProductionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.markEnvironmentAsProduction();\r\n    }\r\n}\r\n","import { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\n\r\nexport class ModifyEnvironmentQuery extends BaseQuery<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.IModifyEnvironmentData[]) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n        return this.queryService.modifyEnvironmentAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyEnvironment();\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class StartEnvironmentValidationQuery extends BaseQuery<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return this.queryService.startEnvironmentValidationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.startProjectValidation();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericDeleteResponseAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericGetResponseAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n","export * from './delete-query.class';\r\nexport * from './get-query.class';\r\nexport * from './patch-query.class';\r\nexport * from './post-query.class';\r\nexport * from './put-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PatchQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPatchResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PostQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPostResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PutQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPutResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n","export * from './base-query';\r\nexport * from './base-listing-query';\r\nexport * from '../query-builders';\r\nexport * from './content-items';\r\nexport * from './assets';\r\nexport * from './taxonomies';\r\nexport * from './content-types';\r\nexport * from './language-variants';\r\nexport * from './content-type-snippets';\r\nexport * from './languages';\r\nexport * from './workflow';\r\nexport * from './webhooks';\r\nexport * from './asset-folders';\r\nexport * from './generic';\r\nexport * from './collections';\r\nexport * from './subscriptions';\r\nexport * from './roles';\r\nexport * from './project-users';\r\nexport * from './asset-renditions';\r\nexport * from './spaces';\r\nexport * from './environments';\r\nexport * from './preview';\r\nexport * from './custom-apps';\r\nexport * from './web-spotlight';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n","import { LanguageVariantModels } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class FilterLanguageVariantsQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.FilterLanguageVariantsResponse,\r\n    LanguageVariantResponses.ListAllFilterLanguageVariantsResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected data: LanguageVariantModels.IFilterLanguageVariantsData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.FilterLanguageVariantsResponse> {\r\n        return this.queryService.filterLanguageVariantsAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.filterLanguageVariants();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.FilterLanguageVariantsResponse[]\r\n    ): LanguageVariantResponses.ListAllFilterLanguageVariantsResponse {\r\n        return new LanguageVariantResponses.ListAllFilterLanguageVariantsResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","export * from './list-language-variants-of-item-query.class';\r\nexport * from './list-language-variants-of-content-type-query.class';\r\nexport * from './list-language-variants-of-content-type-with-components-query.class';\r\nexport * from './upsert-language-variant-query.class';\r\nexport * from './view-language-variant-query.class';\r\nexport * from './delete-language-variant-query.class';\r\nexport * from './list-language-variants-by-collection-query.class';\r\nexport * from './list-language-variants-by-space-query.class';\r\nexport * from './filter-language-variants-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsByCollectionQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsByCollectionResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.CollectionIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsByCollectionResponse> {\r\n        return this.queryService.listLanguageVariantsByCollectionAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsByCollection(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsByCollectionResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsBySpaceQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsBySpaceResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.SpaceIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsBySpaceResponse> {\r\n        return this.queryService.listLanguageVariantsBySpaceAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsBySpace(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsBySpaceResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsOfContentTypeQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse> {\r\n        return this.queryService.listLanguageVariantsOfContentTypeAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsOfContentType(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsOfContentTypeWithComponentsQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse> {\r\n        return this.queryService.listLanguageVariantsOfContentTypeWithComponentsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsOfContentTypeWithComponents(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListLanguageVariantsOfItemQuery extends BaseQuery<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    protected identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n    return this.queryService.listLanguageVariantsOfItemAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.listLanguageVariantsOfItem(this.identifier);\r\n  }\r\n}\r\n\r\n\r\n","import {\r\n    LanguageVariantElementsBuilder,\r\n    languageVariantElementsBuilder\r\n} from '../../models/language-variants/language-variant-elements-builder';\r\nimport { LanguageVariantContracts } from '../../contracts';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertLanguageVariantQuery extends BaseQuery<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        protected languageIdentifier: Identifiers.LanguageIdentifier,\r\n        public data: (\r\n            builder: LanguageVariantElementsBuilder\r\n        ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n        return this.queryService.upsertLanguageVariantAsync(\r\n            this.getUrl(),\r\n            this.data(languageVariantElementsBuilder),\r\n            this.queryConfig\r\n        );\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.upsertLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewLanguageVariantQuery extends BaseQuery<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n    private fetchPublishedVersion: boolean = false;\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n        return this.queryService.viewLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    published(): this {\r\n        this.fetchPublishedVersion = true;\r\n        return this;\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewLanguageVariant(\r\n            this.contentItemIdentifier,\r\n            this.languageIdentifier,\r\n            this.fetchPublishedVersion\r\n        );\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { LanguageModels } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddLanguageQuery extends BaseQuery<LanguageResponses.AddLanguageResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: LanguageModels.IAddLanguageData\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageResponses.AddLanguageResponse> {\r\n    return this.queryService.addLanguageAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addLanguage();\r\n  }\r\n}\r\n","export * from './list-languages-query.class';\r\nexport * from './modify-language-query.class';\r\nexport * from './add-language-query.class';\r\nexport * from './view-language-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguagesQuery extends BaseListingQuery<\r\n    LanguageResponses.ListLanguagesResponse,\r\n    LanguageResponses.ListAllLanguagesResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageResponses.ListLanguagesResponse> {\r\n        return this.queryService.listLanguagesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguages();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageResponses.ListLanguagesResponse[]\r\n    ): LanguageResponses.ListAllLanguagesResponse {\r\n        return new LanguageResponses.ListAllLanguagesResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, LanguageModels } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyLanguageQuery extends BaseQuery<LanguageResponses.ModifyLanguageResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.LanguageIdentifier,\r\n    public data: LanguageModels.IModifyLanguageData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageResponses.ModifyLanguageResponse> {\r\n    return this.queryService.modifyLanguageAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyLanguage(this.identifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewLanguageQuery extends BaseQuery<LanguageResponses.ViewLanguageResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.LanguageIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageResponses.ViewLanguageResponse> {\r\n        return this.queryService.viewLanguageAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewLanguage(this.identifier);\r\n    }\r\n}\r\n","import { PreviewResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetPreviewConfigurationQuery extends BaseQuery<PreviewResponses.PreviewConfigurationResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<PreviewResponses.PreviewConfigurationResponse> {\r\n        return this.queryService.getPreviewConfigurationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getPreviewConfigruation();\r\n    }\r\n}\r\n","export  * from './get-preview-configuration-query.class';\r\nexport  * from './modify-preview-configuration-query.class';\r\n","import { PreviewResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { PreviewModels } from '../../models';\r\n\r\nexport class ModifyPreviewConfigurationQuery extends BaseQuery<PreviewResponses.ModifyConfigurationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private data: PreviewModels.IModifyPreviewConfigurationData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<PreviewResponses.ModifyConfigurationResponse> {\r\n        return this.queryService.modifyPreviewConfigurationAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyPreviewConfigruation();\r\n    }\r\n}\r\n","import { Identifiers, ProjectUserModels } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ProjectUsersResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ChangeUserRolesQuery extends BaseQuery<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private identifier: Identifiers.UserIdentifier,\r\n        private data: ProjectUserModels.IChangeUserRoleData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n        return this.queryService.changeUserRolesAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.changeProjectUserRoles(this.identifier);\r\n    }\r\n}\r\n","export * from './change-user-roles-query.class';\r\nexport * from './invite-user-query.class';\r\n","import { ProjectUserModels } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ProjectUsersResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class InviteProjectUserQuery extends BaseQuery<ProjectUsersResponses.InviteUserResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private data: ProjectUserModels.IInviteUserData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ProjectUsersResponses.InviteUserResponse> {\r\n        return this.queryService.inviteProjectUserAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.inviteProjectUser();\r\n    }\r\n}\r\n","export  * from './list-roles-query.class';\r\nexport  * from './view-role-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { RoleResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListRolesQuery extends BaseQuery<RoleResponses.RoleListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<RoleResponses.RoleListResponse> {\r\n        return this.queryService.listRolesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listRoles();\r\n    }\r\n}\r\n","import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { RoleResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewRoleQuery extends BaseQuery<RoleResponses.ViewRoleResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private identifier: Identifiers.RoleIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<RoleResponses.ViewRoleResponse> {\r\n        return this.queryService.viewRoleAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewRole(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { SpaceModels } from '../../models';\r\n\r\nexport class AddSpaceQuery extends BaseQuery<SpaceResponses.AddSpaceResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: SpaceModels.IAddSpaceData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SpaceResponses.AddSpaceResponse> {\r\n        return this.queryService.addSpaceAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addSpace();\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteSpaceQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.SpaceIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteSpaceAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteSpace(this.identifier);\r\n    }\r\n}\r\n","export * from './add-space-query.class';\r\nexport * from './delete-space-query.class';\r\nexport * from './list-spaces-query.class';\r\nexport * from './modify-space-query.class';\r\nexport * from './view-space-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListSpacesQuery extends BaseQuery<SpaceResponses.SpacesListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SpaceResponses.SpacesListResponse> {\r\n        return this.queryService.listSpacesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSpaces();\r\n    }\r\n\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, SpaceModels } from '../../models';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifySpaceQuery extends BaseQuery<SpaceResponses.ModifySpaceResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.SpaceIdentifier,\r\n    public data: SpaceModels.IModifySpaceData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<SpaceResponses.ModifySpaceResponse> {\r\n    return this.queryService.modifySpaceAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifySpace(this.identifier);\r\n  }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSpaceQuery extends BaseQuery<SpaceResponses.ViewSpaceResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.SpaceIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<SpaceResponses.ViewSpaceResponse> {\r\n    return this.queryService.viewSpaceAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewSpace(this.identifier);\r\n  }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ActivateUserInAllProjectsQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.activateUserInAllProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.activateUserInAllProjects(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeactivateUserInAllProjectsQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deactivateUserInAllProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deactivateUserInAllProjects(this.identifier);\r\n    }\r\n}\r\n","export * from './list-subscription-projects-query.class';\r\nexport * from './list-subscription-users-query.class';\r\nexport * from './view-subscription-project-query.class';\r\nexport * from './view-subscription-user-query.class';\r\nexport * from './activate-user-in-all-projects-query.class';\r\nexport * from './deactivate-user-in-all-projects-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListSubscriptionProjectsQuery extends BaseListingQuery<\r\n    SubscriptionResponses.SubscriptionProjectsListResponse,\r\n    SubscriptionResponses.SubscriptionProjectsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.SubscriptionProjectsListResponse> {\r\n        return this.queryService.listSubscriptionProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSubscriptionProjects();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: SubscriptionResponses.SubscriptionProjectsListResponse[]\r\n    ): SubscriptionResponses.SubscriptionProjectsListAllResponse {\r\n        return new SubscriptionResponses.SubscriptionProjectsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListSubscriptionUsersQuery extends BaseListingQuery<\r\n    SubscriptionResponses.SubscriptionUsersListResponse,\r\n    SubscriptionResponses.SubscriptionUsersListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.SubscriptionUsersListResponse> {\r\n        return this.queryService.litSubscriptionUsersAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSubscriptionUsers();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: SubscriptionResponses.SubscriptionUsersListResponse[]\r\n    ): SubscriptionResponses.SubscriptionUsersListAllResponse {\r\n        return new SubscriptionResponses.SubscriptionUsersListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSubscriptionProjectQuery extends BaseQuery<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.EnvironmentIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n        return this.queryService.viewSubscriptionProjectAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewSubscriptionProject(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSubscriptionUserQuery extends BaseQuery<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n        return this.queryService.viewSubscriptionUserAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewSubscriptionUser(this.identifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyModels } from '../../models';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddTaxonomyQuery extends BaseQuery<TaxonomyResponses.AddTaxonomyResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: TaxonomyModels.IAddTaxonomyRequestModel\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<TaxonomyResponses.AddTaxonomyResponse> {\r\n    return this.queryService.addTaxonomyAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addTaxonomy();\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteTaxonomyQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaxonomyIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteTaxonomyAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteTaxonomy(this.identifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class GetTaxonomyQuery extends BaseQuery<TaxonomyResponses.GetTaxonomyResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.TaxonomyIdentifier\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<TaxonomyResponses.GetTaxonomyResponse> {\r\n    return this.queryService.getTaxonomyAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.getTaxonomy(this.identifier);\r\n  }\r\n}\r\n","export * from './list-taxonomies-query.class';\r\nexport * from './delete-taxonomy-query.class';\r\nexport * from './add-taxonomy-query.class';\r\nexport * from './get-taxonomy-query.class';\r\nexport * from './modify-taxonomy-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListTaxonomiesQuery extends BaseListingQuery<\r\n    TaxonomyResponses.TaxonomyListResponse,\r\n    TaxonomyResponses.ListAllTaxonomiesResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<TaxonomyResponses.TaxonomyListResponse> {\r\n        return this.queryService.listTaxonomiesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listTaxonomies();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: TaxonomyResponses.TaxonomyListResponse[]\r\n    ): TaxonomyResponses.ListAllTaxonomiesResponse {\r\n        return new TaxonomyResponses.ListAllTaxonomiesResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, TaxonomyModels } from '../../models';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyTaxonomyQuery extends BaseQuery<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaxonomyIdentifier,\r\n        public data: TaxonomyModels.IModifyTaxonomyData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n        return this.queryService.modifyTaxonomyAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyTaxonomy(this.identifier);\r\n    }\r\n}\r\n","import { WebSpotlightResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { WebSpotlightModels } from '../../models';\r\n\r\nexport class ActivateWebSpotlightQuery extends BaseQuery<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WebSpotlightModels.IActivateWebSpotlightData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return this.queryService.activateWebSpotlightAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.activateWebSpotlight();\r\n    }\r\n}\r\n","import { WebSpotlightResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CheckWebSpotlightStatusQuery extends BaseQuery<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return this.queryService.checkWebSpotlightStatusAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.checkWebSpotlightStatus();\r\n    }\r\n}\r\n","import { WebSpotlightResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeactivateWebSpotlightQuery extends BaseQuery<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return this.queryService.deactivateWebSpotlightAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deactivateWebSpotlight();\r\n    }\r\n}\r\n","export * from './activate-web-spotlight-query.class';\r\nexport * from './deactivate-web-spotlight-query.class';\r\nexport * from './check-web-spotlight-status-query.class';\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookModels } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddLegacyWebhookQuery extends BaseQuery<WebhookResponses.AddLegacyWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WebhookModels.IAddLegacyWebhookData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return this.queryService.addLegacyWebhookAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addLegacyWebhook();\r\n    }\r\n}\r\n\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookModels } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddWebhookQuery extends BaseQuery<WebhookResponses.AddWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WebhookModels.IAddWebhookData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return this.queryService.addWebhookAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addWebhook();\r\n    }\r\n\r\n}","\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n","\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteWebhook(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class DisableLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.disableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.disableLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class DisableWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.disableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.disableWebhook(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class EnableLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.enableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.enableLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class EnableWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.enableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.enableWebhook(this.identifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetLegacyWebhookQuery extends BaseQuery<WebhookResponses.GetLegacyWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return this.queryService.getLegacyWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetWebhookQuery extends BaseQuery<WebhookResponses.GetWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return this.queryService.getWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getWebhook(this.identifier);\r\n    }\r\n}\r\n","export * from './delete-webhook-query.class';\r\nexport * from './add-webhook-query.class';\r\nexport * from './get-webhook-query.class';\r\nexport * from './list-webhooks-query.class';\r\nexport * from './enable-webhook-query.class';\r\nexport * from './disable-webhook-query.class';\r\nexport * from './add-legacy-webhook-query.class';\r\nexport * from './delete-legacy-webhook-query.class';\r\nexport * from './get-legacy-webhook-query.class';\r\nexport * from './list-legacy-webhooks-query.class';\r\nexport * from './enable-legacy-webhook-query.class';\r\nexport * from './disable-legacy-webhook-query.class';","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListLegacyWebhooksQuery extends BaseQuery<WebhookResponses.LegacyWebhookListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.LegacyWebhookListResponse> {\r\n        return this.queryService.listLegacyWebhooksAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLegacyWebhooks();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListWebhooksQuery extends BaseQuery<WebhookResponses.WebhookListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.WebhookListResponse> {\r\n        return this.queryService.listWebhooksAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listWebhooks();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WorkflowModels } from '../../models';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddWorkflowQuery extends BaseQuery<WorkflowResponses.AddWorkflowResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WorkflowModels.IAddWorkflowData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return this.queryService.addWorkflowAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addWorkflow();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CancelScheduledPublishingOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.cancelScheduledPublishingOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.cancelScheduledPublishingOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CancelScheduledUnpublishingOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.cancelScheduledUnpublishingOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.cancelScheduledUnpublishingOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ChangeWorkflowOfLanguageOrVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier,\r\n        public data: WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.changeWorkflowOfLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.changeWorkflowOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CreateNewVersionOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.createNewVersionOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.createNewVersionOfALanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n","\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteWorkflowQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WorkflowIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWorkflowAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteWorkflow(this.identifier);\r\n    }\r\n}\r\n","export * from './publish-language-variant-query.class';\r\nexport * from './create-new-version-of-language-variant-query.class';\r\nexport * from './unpublish-language-variant-query.class';\r\nexport * from './cancel-scheduled-publishing-of-language-variant-query.class';\r\nexport * from './cancel-scheduled-unpublishing-of-language-variant-query.class';\r\nexport * from './list-workflows-query.class';\r\nexport * from './add-workflow-query.class';\r\nexport * from './delete-workflow-query.class';\r\nexport * from './update-workflow-query.class';\r\nexport * from './change-workflow-of-language-variant-query.class';\r\n","import { IManagementClientConfig } from '../../config';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListWorkflowsQuery extends BaseQuery<WorkflowResponses.ListWorkflowsResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.ListWorkflowsResponse> {\r\n        return this.queryService.listWorkflowsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listWorkflows();\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PublishLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n    public data?: WorkflowModels.IPublishLanguageVariantData\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.publishLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.publishLaguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UnpublishLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier,\r\n        public data?: WorkflowModels.IUnpublishLanguageVarianthData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.unpublishLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.unpublishLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n","\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpdateWorkflowQuery extends BaseQuery<WorkflowResponses.UpdateWorkflowResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WorkflowModels.IUpdateWorkflowData,\r\n        public identifier: Identifiers.WorkflowIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.UpdateWorkflowResponse> {\r\n        return this.queryService.updateWorkflowAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.updateWorkflow(this.identifier);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ActionQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            action: string) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Sets action to use for request\r\n     */\r\n    withAction(action: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, action);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class AssetIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.AssetIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Gets asset using internal Id\r\n     * @param id Internal Id of the asset\r\n     */\r\n    byAssetId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.InternalId, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets asset using external Id\r\n     * @param id External Id of the asset\r\n     */\r\n    byAssetExternalId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.ExternalId, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets asset using codename\r\n     * @param id Codename of the asset\r\n     */\r\n    byAssetCodename(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.Codename, id)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class CollectionIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.CollectionIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of collection\r\n    */\r\n    byCollectionId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of collection\r\n    */\r\n    byCollectionExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of collection\r\n    */\r\n    byCollectionCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentItemExternalIdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    byItemExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, externalId));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentItemIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byItemExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byItemCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentTypeCodenameAndIdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentTypeIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets query using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTypeId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTypeCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentTypeIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentTypeIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTypeId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byTypeExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTypeCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class CustomAppsIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.CustomAppIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Gets using internal Id\r\n     * @param id Internal Id of custom app\r\n     */\r\n    byCustomAppId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.CustomAppIdentifier(Identifiers.CustomAppIdentifierEnum.InternalId, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets query using codename\r\n     * @param codename Codename of custom app\r\n     */\r\n    byCustomAppCodename(codename: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.CustomAppIdentifier(Identifiers.CustomAppIdentifierEnum.Codename, codename)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class DataQueryOptional<TResult, TData> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            data: TData | undefined) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Gets query without data\r\n     */\r\n    withoutData(): TResult {\r\n        return this.buildResult(this.config, this.queryService, undefined);\r\n    }\r\n\r\n    /**\r\n     * Gets query with data\r\n     * @param data Data for query\r\n     */\r\n    withData(data: TData): TResult {\r\n        return this.buildResult(this.config, this.queryService, data);\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class DataQuery<TResult, TData> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            data: TData) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Gets query with data\r\n     * @param data Data for query\r\n     */\r\n    withData(data: TData): TResult {\r\n        return this.buildResult(this.config, this.queryService, data);\r\n    }\r\n}\r\n","import { Identifiers } from '../models/identifiers';\r\nimport { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class EnvironmentIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            itentifier: Identifiers.EnvironmentIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * For given environment by id\r\n     * @param environmentId EnvironmentId\r\n     */\r\n    environmentId(environmentId: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.EnvironmentIdentifier(Identifiers.EnvironmentIdentifierEnum.Id, environmentId)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class IdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param externalId External Id\r\n    */\r\n    byItemExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, externalId));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class IdCodenameIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byItemCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","export * from './content-item-identifier-query.class';\r\nexport * from './id-and-external-id-identifier-query.class';\r\nexport * from './data-query.class';\r\nexport * from './id-codename-identifier-query.class';\r\nexport * from './environment-identifier-query.class';\r\nexport * from './language-id-and-codename-identifier-query.class';\r\nexport * from './taxonomy-identifier-query.class';\r\nexport * from './asset-identifier-query.class';\r\nexport * from './workflow-step-identifier-query.class';\r\nexport * from './content-type-identifier-query.class';\r\nexport * from './content-item-external-id-identifier.class';\r\nexport * from './language-identifier-query.class';\r\nexport * from './content-type-codename-and-id-identifier-query.class';\r\nexport * from './data-query-optional.class';\r\nexport * from './webhook-identifier-query.class';\r\nexport * from './action-query.class';\r\nexport * from './collection-identifier-query.class';\r\nexport * from './user-identifier-query.class';\r\nexport * from './role-identifier-query.class';\r\nexport * from './rendition-identifier-query.class';\r\nexport * from './workflow-identifier-query.class';\r\nexport * from './task-identifier-query.class';\r\nexport * from './space-identifier-query.class';\r\nexport * from './custom-apps-identifier.query';\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class LanguageIdAndCodenameIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.LanguageIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byLanguageId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byLanguageCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class LanguageIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.LanguageIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using external Id\r\n    * @param externalId Internal Id\r\n    */\r\n    byExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.ExternalId, externalId));\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byLanguageId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byLanguageCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class RenditionIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.RenditionIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byRenditionId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.RenditionIdentifier(Identifiers.RenditionIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byRenditionExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.RenditionIdentifier(Identifiers.RenditionIdentifierEnum.ExternalId, id));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class RoleIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.RoleIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id\r\n     * @param id Internal Id\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.RoleIdentifier(Identifiers.RoleIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename\r\n     * @param codename Codename\r\n     */\r\n    byCodename(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.RoleIdentifier(Identifiers.RoleIdentifierEnum.Codename, id)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class SpaceIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.SpaceIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of space\r\n    */\r\n    bySpaceId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of space\r\n    */\r\n    bySpaceExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of space\r\n    */\r\n    bySpaceCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class TaskIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.TaskIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Query by task Id\r\n     * @param id Task id\r\n     */\r\n    byTaskId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.TaskIdentifier(Identifiers.TaskIdentifierEnum.InternalId, id)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class TaxonomyIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.TaxonomyIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTaxonomyId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byTaxonomyExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTaxonomyCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class UserIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.UserIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Gets using email\r\n     * @param email Email\r\n     */\r\n    byEmail(email: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.UserIdentifier(Identifiers.UserIdentifierEnum.Email, email)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets using internal Id\r\n     * @param id Internal Id\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.UserIdentifier(Identifiers.UserIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WebhookIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WebhookIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id Id of the webhook\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WebhookIdentifier(Identifiers.WebhookIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WorkflowIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WorkflowIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id If of the workflow\r\n     */\r\n    byWorkflowId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename identifier\r\n     * @param codename codename of the workflow\r\n     */\r\n    byWorkflowCodename(codename: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Codename, codename)\r\n        );\r\n    }\r\n}\r\n","import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WorkflowStepIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WorkflowIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id If of the workflow step\r\n     */\r\n    byWorkflowStepId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename identifier\r\n     * @param codename codename of the workflow step\r\n     */\r\n    byWorkflowStepCodename(codename: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Codename, codename)\r\n        );\r\n    }\r\n}\r\n","import { AssetFolderContracts } from '../../contracts';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetFolderResponses {\r\n\r\n    export class AssetFoldersListResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IListAssetFoldersResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetFoldersResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IAddAssetFoldersResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyAssetFoldersResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IModifyAssetFoldersDataResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { AssetRenditionContracts } from '../../contracts';\r\nimport { AssetRenditionModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetRenditionResponses {\r\n    export class AssetRenditionsListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        AssetRenditionContracts.IListRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IListRenditionResponseContract,\r\n            data: {\r\n                items: AssetRenditionModels.AssetRendition[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AssetRenditionsListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        AssetRenditionsListResponse,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(data: { items: AssetRenditionModels.AssetRendition[]; responses: AssetRenditionsListResponse[] }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ModifyAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IModifyAssetRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IModifyAssetRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IViewRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IViewRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IAddAssetRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IAddAssetRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { AssetContracts } from '../../contracts';\r\nimport { AssetModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetResponses {\r\n\r\n    export class AssetsListResponse extends BaseResponses.BaseContentManagementListResponse<AssetContracts.IAssetsListingResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAssetsListingResponseContract,\r\n            data: {\r\n                items: AssetModels.Asset[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AssetsListAllResponse extends BaseResponses.ContentManagementListAllResponse<AssetsListResponse, AssetModels.Asset> {\r\n        constructor(\r\n            data: {\r\n                items: AssetModels.Asset[],\r\n                responses: AssetsListResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IAssetModelContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAssetModelContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UploadBinaryFileResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUploadBinaryFileResponseContract, AssetModels.AssetFileReference>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUploadBinaryFileResponseContract,\r\n            data: AssetModels.AssetFileReference\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IAddAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAddAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUpdateAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUpdateAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpsertAssertResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUpsertAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUpsertAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SharedModels } from '../models';\r\n\r\nexport namespace BaseResponses {\r\n    export interface IContentManagementResponseDebug {\r\n        response: IResponse<any>;\r\n    }\r\n\r\n    export interface IContentManagementResponse {\r\n        data: any;\r\n        rawData: any;\r\n        debug: IContentManagementResponseDebug;\r\n    }\r\n\r\n    export interface IContentManagementListResponse {\r\n        data: {\r\n            items: any[];\r\n            pagination: SharedModels.Pagination;\r\n        };\r\n        rawData: any;\r\n        debug: IContentManagementResponseDebug;\r\n    }\r\n\r\n    export interface IContentManagementListAllResponse {\r\n        responses: any[];\r\n        data: {\r\n            items: any[];\r\n        };\r\n    }\r\n\r\n    export abstract class ContentManagementListAllResponse<TResponse extends IContentManagementListResponse, TData>\r\n        implements IContentManagementListAllResponse\r\n    {\r\n        public responses: TResponse[];\r\n        public data: {\r\n            items: TData[];\r\n        };\r\n\r\n        constructor(obj: { responses: TResponse[]; items: TData[] }) {\r\n            this.responses = obj.responses;\r\n            this.data = {\r\n                items: obj.items\r\n            };\r\n        }\r\n    }\r\n\r\n    export abstract class BaseContentManagementListResponse<TRawData, TItem> implements IContentManagementResponse {\r\n        constructor(\r\n            public debug: IContentManagementResponseDebug,\r\n            public rawData: TRawData,\r\n            public data: {\r\n                items: TItem[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {}\r\n    }\r\n\r\n    export abstract class BaseContentManagementResponse<TRawData, TData> implements IContentManagementResponse {\r\n        constructor(public debug: IContentManagementResponseDebug, public rawData: TRawData, public data: TData) {}\r\n    }\r\n\r\n    export class EmptyContentManagementResponse extends BaseResponses.BaseContentManagementResponse<void, void> {\r\n        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: void, data: void) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { CollectionContracts } from '../../contracts';\r\nimport { CollectionModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace CollectionResponses {\r\n    export class CollectionsListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        CollectionContracts.ICollectionListResponseContract,\r\n        {\r\n            collections: CollectionModels.Collection[];\r\n            lastModified?: Date;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CollectionContracts.ICollectionListResponseContract,\r\n            data: {\r\n                collections: CollectionModels.Collection[];\r\n                lastModified?: Date;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SetCollectionsResponse extends BaseResponses.BaseContentManagementResponse<\r\n        CollectionContracts.ICollectionListResponseContract,\r\n        {\r\n            collections: CollectionModels.Collection[];\r\n            lastModified?: Date;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CollectionContracts.ICollectionListResponseContract,\r\n            data: {\r\n                collections: CollectionModels.Collection[];\r\n                lastModified?: Date;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { ContentItemContracts } from '../../contracts';\r\nimport { ContentItemModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentItemResponses {\r\n\r\n    export class ContentItemsResponse extends BaseResponses.BaseContentManagementListResponse<ContentItemContracts.IContentItemsListingResponseContract, ContentItemModels.ContentItem>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IContentItemsListingResponseContract,\r\n            data: {\r\n                items: ContentItemModels.ContentItem[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemsListAllResponse extends BaseResponses.ContentManagementListAllResponse<ContentItemsResponse, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            data: {\r\n                items: ContentItemModels.ContentItem[],\r\n                responses: ContentItemsResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IViewContentItemResponseContract, ContentItemModels.ContentItem> {\r\n\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IViewContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IAddContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IAddContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IUpdateContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IAddContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpsertContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IUpsertContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IUpsertContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ContentTypeSnippetContracts } from '../../contracts';\r\nimport { ContentTypeSnippetModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentTypeSnippetResponses {\r\n    export class ContentTypeSnippetListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract,\r\n            data: {\r\n                items: ContentTypeSnippetModels.ContentTypeSnippet[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeSnippetListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        ContentTypeSnippetListResponse,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(data: {\r\n            items: ContentTypeSnippetModels.ContentTypeSnippet[];\r\n            responses: ContentTypeSnippetListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { ContentTypeContracts } from '../../contracts';\r\nimport { ContentTypeModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentTypeResponses {\r\n\r\n    export class ContentTypeListResponse extends BaseResponses.BaseContentManagementListResponse<ContentTypeContracts.IContentTypeListResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IContentTypeListResponseContract,\r\n            data: {\r\n                items: ContentTypeModels.ContentType[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeListAllResponse extends BaseResponses.ContentManagementListAllResponse<ContentTypeListResponse, ContentTypeModels.ContentType> {\r\n        constructor(\r\n            data: {\r\n                items: ContentTypeModels.ContentType[],\r\n                responses: ContentTypeListResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ModifyContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IViewContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IViewContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IViewContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IViewContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IAddContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IAddContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { CustomAppsContracts } from '../../contracts';\r\nimport { CustomAppModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace CustomAppsResponses {\r\n    export class AddCustomAppResponse extends BaseResponses.BaseContentManagementResponse<\r\n        CustomAppsContracts.ICustomAppContract,\r\n        CustomAppModels.CustomApp\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CustomAppsContracts.ICustomAppContract,\r\n            data: CustomAppModels.CustomApp\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CustomAppsListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        CustomAppsContracts.ICustomAppsListResponseContract,\r\n        CustomAppModels.CustomApp\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CustomAppsContracts.ICustomAppsListResponseContract,\r\n            data: {\r\n                items: CustomAppModels.CustomApp[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CustomAppsListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        CustomAppsListResponse,\r\n        CustomAppModels.CustomApp\r\n    > {\r\n        constructor(data: { items: CustomAppModels.CustomApp[]; responses: CustomAppsListResponse[] }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ModifyCustomAppResponse extends AddCustomAppResponse {}\r\n    export class GetCustomAppResponse extends AddCustomAppResponse {}\r\n}\r\n","import { BaseResponses } from '../base-responses';\r\nimport { EnvironmentContracts } from '../../contracts';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { SharedModels } from '../../models';\r\n\r\nexport namespace EnvironmentResponses {\r\n    export class EnvironmentValidationIssuesListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        EnvironmentContracts.IEnvironmentValidationListResponseContract,\r\n        EnvironmentModels.EnvironmentValidationVariantIssueModel | EnvironmentModels.EnvironmentValidationTypeIssueModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentValidationListResponseContract,\r\n            data: {\r\n                items: (\r\n                    | EnvironmentModels.EnvironmentValidationVariantIssueModel\r\n                    | EnvironmentModels.EnvironmentValidationTypeIssueModel\r\n                )[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentValidationIssuesListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        EnvironmentValidationIssuesListResponse,\r\n        EnvironmentModels.EnvironmentValidationVariantIssueModel\r\n    > {\r\n        constructor(data: {\r\n            items: EnvironmentModels.EnvironmentValidationVariantIssueModel[];\r\n            responses: EnvironmentValidationIssuesListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class StartEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IStartEnvironmentValidationResponseContract,\r\n        {\r\n            id: string;\r\n            status: EnvironmentContracts.EnvironmentValidationStatus;\r\n            validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IStartEnvironmentValidationResponseContract,\r\n            data: {\r\n                id: string;\r\n                status: EnvironmentContracts.EnvironmentValidationStatus;\r\n                validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CheckEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.ICheckEnvironmentValidationResponseContract,\r\n        {\r\n            id: string;\r\n            status: EnvironmentContracts.EnvironmentValidationStatus;\r\n            validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.ICheckEnvironmentValidationResponseContract,\r\n            data: {\r\n                id: string;\r\n                status: EnvironmentContracts.EnvironmentValidationStatus;\r\n                validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentInformationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IEnvironmentInformationResponseContract,\r\n        {\r\n            project: EnvironmentModels.EnvironmentInformationModel;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentInformationResponseContract,\r\n            data: {\r\n                project: EnvironmentModels.EnvironmentInformationModel;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class GetCloningStateResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IEnvironmentCloningStateResponseContract,\r\n        {\r\n            cloningInfo: EnvironmentModels.EnvironmentCloningStateModel;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentCloningStateResponseContract,\r\n            data: {\r\n                cloningInfo: EnvironmentModels.EnvironmentCloningStateModel;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyEnvironmentResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IModifyEnvironmentResponseContract,\r\n        EnvironmentModels.EnvironmentModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IModifyEnvironmentResponseContract,\r\n            data: EnvironmentModels.EnvironmentModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CloneEnvironmentResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.ICloneEnvironmentResponseContract,\r\n        EnvironmentModels.CloneEnvironmentModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.ICloneEnvironmentResponseContract,\r\n            data: EnvironmentModels.CloneEnvironmentModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { BaseResponses } from '../base-responses';\r\n\r\nexport namespace GenericResponses {\r\n    export class GenericResponse extends BaseResponses.BaseContentManagementResponse<\r\n        any,\r\n        any\r\n    > {\r\n        constructor(debug: BaseResponses.IContentManagementResponseDebug, response: any) {\r\n            super(debug, response, response);\r\n        }\r\n    }\r\n}\r\n","export * from './base-responses';\r\nexport * from './content-items/content-item-responses';\r\nexport * from './assets/asset-responses';\r\nexport * from './asset-folders/asset-folder-responses';\r\nexport * from './taxonomies/taxonomy-responses';\r\nexport * from './content-types/content-type-responses';\r\nexport * from './language-variants/language-variant-responses';\r\nexport * from './content-type-snippets/content-type-snippet-responses';\r\nexport * from './workflow/workflow-responses';\r\nexport * from './languages/language-responses';\r\nexport * from './webhook/webhook-responses';\r\nexport * from './generic/generic-responses';\r\nexport * from './collections/collection-responses';\r\nexport * from './subscriptions/subscription-responses';\r\nexport * from './roles/role-responses';\r\nexport * from './project-users/project-users-responses';\r\nexport * from './asset-renditions/asset-rendition-responses';\r\nexport * from './spaces/space-responses';\r\nexport * from './environments/environment-responses';\r\nexport * from './preview/preview-responses';\r\nexport * from './web-spotlight/web-spotlight-responses';\r\nexport * from './custom-apps/custom-apps.responses';\r\n","import { LanguageVariantContracts } from '../../contracts';\r\nimport { LanguageVariantModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace LanguageVariantResponses {\r\n\r\n\r\n    export class FilterLanguageVariantsResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IFilterLanguageVariantsResponseContract,\r\n        LanguageVariantContracts.IFilterLanguageVariantsResponseDataContract\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IFilterLanguageVariantsResponseContract,\r\n            data: {\r\n                items: LanguageVariantContracts.IFilterLanguageVariantsResponseDataContract[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllFilterLanguageVariantsResponse extends BaseResponses.ContentManagementListAllResponse<FilterLanguageVariantsResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: FilterLanguageVariantsResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsOfItemResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[],\r\n        {\r\n            items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[],\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageWithComponentsVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageWithComponentsVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeWithComponentsResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsOfContentTypeWithComponentsResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsOfContentTypeResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsByCollectionResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsBySpaceResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n\r\n    export class ListAllLanguageVariantsOfContentTypeResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsOfContentTypeResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsByCollectionResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsByCollectionResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsByCollectionResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsBySpaceResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsBySpaceResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsBySpaceResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n\r\n    export class UpsertLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IUpsertLanguageVariantResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IUpsertLanguageVariantResponseContract,\r\n            data: LanguageVariantModels.ContentItemLanguageVariant\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IViewLanguageVariantResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IViewLanguageVariantResponseContract,\r\n            data: LanguageVariantModels.ContentItemLanguageVariant\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { LanguageContracts } from '../../contracts/language-contracts';\r\nimport { LanguageModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace LanguageResponses {\r\n\r\n    export class ListLanguagesResponse extends BaseResponses.BaseContentManagementListResponse<LanguageContracts.IListLanguagesResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IListLanguagesResponseContract,\r\n            data: {\r\n                items: LanguageModels.LanguageModel[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguagesResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguagesResponse, LanguageModels.LanguageModel> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageModels.LanguageModel[],\r\n                responses: ListLanguagesResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IViewLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IViewLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IAddLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IAddLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IModifyLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IModifyLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n}\r\n","import { PreviewContracts } from '../../contracts';\r\nimport { PreviewModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace PreviewResponses {\r\n    export class PreviewConfigurationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        PreviewContracts.IPreviewConfigurationContract,\r\n        PreviewModels.PreviewConfiguration\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: PreviewContracts.IPreviewConfigurationContract,\r\n            data: PreviewModels.PreviewConfiguration\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyConfigurationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        PreviewContracts.IPreviewConfigurationContract,\r\n        PreviewModels.PreviewConfiguration\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: PreviewContracts.IPreviewConfigurationContract,\r\n            data: PreviewModels.PreviewConfiguration\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { ProjectUserContracts } from '../../contracts';\r\nimport { ProjectUserModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ProjectUsersResponses {\r\n    export class InviteUserResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ProjectUserContracts.IInviteUserResponseContract,\r\n        ProjectUserModels.ProjectUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ProjectUserContracts.IInviteUserResponseContract,\r\n            data: ProjectUserModels.ProjectUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ChangeUserRolesResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ProjectUserContracts.IChangeUserRolesResponseContract,\r\n        ProjectUserModels.ProjectUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ProjectUserContracts.IChangeUserRolesResponseContract,\r\n            data: ProjectUserModels.ProjectUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { RoleContracts } from '../../contracts';\r\nimport { RoleModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace RoleResponses {\r\n    export class RoleListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        RoleContracts.IRoleListResponseContract,\r\n        {\r\n            roles: RoleModels.Role[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: RoleContracts.IRoleListResponseContract,\r\n            data: {\r\n                roles: RoleModels.Role[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewRoleResponse extends BaseResponses.BaseContentManagementResponse<\r\n        RoleContracts.IRoleContract,\r\n        RoleModels.Role\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: RoleContracts.IRoleContract,\r\n            data: RoleModels.Role\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { SpaceContracts } from '../../contracts';\r\nimport { SpaceModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace SpaceResponses {\r\n    export class SpacesListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.ISpacesListingResponseContract,\r\n        SpaceModels.Space[]\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.ISpacesListingResponseContract,\r\n            data: SpaceModels.Space[]\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewSpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IViewSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IViewSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n    export class AddSpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IAddSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IAddSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifySpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IViewSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IViewSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { SubscriptionContracts } from '../../contracts';\r\nimport { SharedModels, SubscriptionModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace SubscriptionResponses {\r\n    export class SubscriptionProjectsListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        SubscriptionContracts.IListSubscriptionProjectsResponseContract,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.IListSubscriptionProjectsResponseContract,\r\n            data: {\r\n                items: SubscriptionModels.SubscriptionProject[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionProjectsListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        SubscriptionProjectsListResponse,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(data: {\r\n            items: SubscriptionModels.SubscriptionProject[];\r\n            responses: SubscriptionProjectsListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewSubscriptionProjectResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SubscriptionContracts.ISubscriptionProjectContract,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.ISubscriptionProjectContract,\r\n            data: SubscriptionModels.SubscriptionProject\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionUsersListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        SubscriptionContracts.IListSubscriptionUsersResponseContract,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.IListSubscriptionUsersResponseContract,\r\n            data: {\r\n                items: SubscriptionModels.SubscriptionUser[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionUsersListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        SubscriptionUsersListResponse,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(data: {\r\n            items: SubscriptionModels.SubscriptionUser[];\r\n            responses: SubscriptionUsersListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewSubscriptionUserResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SubscriptionContracts.ISubscriptionUserContract,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.ISubscriptionUserContract,\r\n            data: SubscriptionModels.SubscriptionUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { TaxonomyContracts } from '../../contracts';\r\nimport { TaxonomyModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace TaxonomyResponses {\r\n    export class TaxonomyListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        TaxonomyContracts.IListTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IListTaxonomyResponseContract,\r\n            data: {\r\n                items: TaxonomyModels.Taxonomy[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllTaxonomiesResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        TaxonomyListResponse,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(data: { items: TaxonomyModels.Taxonomy[]; responses: TaxonomyListResponse[] }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class GetTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IGetTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IGetTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IAddTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IAddTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IModifyTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IModifyTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { WebSpotlightContracts } from '../../contracts';\r\nimport { WebSpotlightModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace WebSpotlightResponses {\r\n    export class WebSpotlightStatusResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebSpotlightContracts.IWebSpotlightStatus,\r\n        WebSpotlightModels.WebSpotlightStatus\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebSpotlightContracts.IWebSpotlightStatus,\r\n            data: WebSpotlightModels.WebSpotlightStatus\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","import { BaseResponses } from '../base-responses';\r\nimport { WebhookContracts } from '../../contracts/webhook-contracts';\r\nimport { WebhookModels } from '../../models/webhook/webhook.models';\r\n\r\nexport namespace WebhookResponses {\r\n    export class GetLegacyWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IGetLegacyWebhookContract,\r\n        WebhookModels.LegacyWebhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IGetLegacyWebhookContract,\r\n            data: WebhookModels.LegacyWebhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class GetWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IGetWebhookContract,\r\n        WebhookModels.Webhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IGetWebhookContract,\r\n            data: WebhookModels.Webhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddLegacyWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IAddLegacyWebhookContract,\r\n        WebhookModels.LegacyWebhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IAddLegacyWebhookContract,\r\n            data: WebhookModels.LegacyWebhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n    WebhookContracts.IAddWebhookContract,\r\n    WebhookModels.Webhook\r\n> {\r\n    constructor(\r\n        debug: BaseResponses.IContentManagementResponseDebug,\r\n        rawData: WebhookContracts.IAddWebhookContract,\r\n        data: WebhookModels.Webhook\r\n    ) {\r\n        super(debug, rawData, data);\r\n    }\r\n}\r\n\r\n\r\n    export class LegacyWebhookListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.ILegacyWebhookListContract,\r\n        {\r\n            webhooks: WebhookModels.LegacyWebhook[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.ILegacyWebhookListContract,\r\n            data: {\r\n                webhooks: WebhookModels.LegacyWebhook[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n    export class WebhookListResponse extends BaseResponses.BaseContentManagementResponse<\r\n    WebhookContracts.IWebhookListContract,\r\n    {\r\n        webhooks: WebhookModels.Webhook[];\r\n    }\r\n> {\r\n    constructor(\r\n        debug: BaseResponses.IContentManagementResponseDebug,\r\n        rawData: WebhookContracts.IWebhookListContract,\r\n        data: {\r\n            webhooks: WebhookModels.Webhook[];\r\n        }\r\n    ) {\r\n        super(debug, rawData, data);\r\n    }\r\n}\r\n\r\n}\r\n","import { WorkflowContracts } from '../../contracts/workflow-contracts';\r\nimport { WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace WorkflowResponses {\r\n    export class ListWorkflowsResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IListWorkflowsResponseContract,\r\n        WorkflowModels.Workflow[]\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IListWorkflowsResponseContract,\r\n            data: WorkflowModels.Workflow[]\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddWorkflowResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IAddWorkflowContract,\r\n        WorkflowModels.Workflow\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IAddWorkflowContract,\r\n            data: WorkflowModels.Workflow\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateWorkflowResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IUpdateWorkflowContract,\r\n        WorkflowModels.Workflow\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IUpdateWorkflowContract,\r\n            data: WorkflowModels.Workflow\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n","\nimport { ISDKInfo } from '@kontent-ai/core-sdk';\nexport const sdkInfo: ISDKInfo = {\n    host: 'npmjs.com',\n    version: '7.11.0',\n    name: '@kontent-ai/management-sdk'\n};\n","import {\r\n    headerHelper,\r\n    IResponse,\r\n    IHeader,\r\n    IHttpService,\r\n    IQueryParameter,\r\n    ISDKInfo,\r\n    urlHelper\r\n} from '@kontent-ai/core-sdk';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { SharedContracts } from '../contracts';\r\nimport { IContentManagementInternalQueryConfig, IContentManagementQueryConfig, SharedModels } from '../models';\r\nimport { getType } from 'mime';\r\n\r\nexport abstract class BaseManagementQueryService<TCancelToken> {\r\n    /**\r\n     * Default base url for content management API\r\n     */\r\n    private readonly defaultBaseCMUrl: string = 'https://manage.kontent.ai/v2';\r\n\r\n    constructor(\r\n        protected readonly config: IManagementClientConfig,\r\n        protected readonly httpService: IHttpService<TCancelToken>,\r\n        protected readonly sdkInfo: ISDKInfo\r\n    ) {}\r\n\r\n    /**\r\n     * Gets url based on the action, query configuration and options (parameters)\r\n     * @param action Action (= url part) that will be hit\r\n     * @param options Query options\r\n     * @param addSlash Indicates if slash is added to query\r\n     */\r\n    getFullUrl(action: string, options?: IQueryParameter[], addSlash: boolean = true): string {\r\n        return urlHelper.addOptionsToUrl(this.getBaseUrl() + (addSlash ? '/' : '') + action, options);\r\n    }\r\n\r\n    /**\r\n     * Gets proper set of headers for given request.\r\n     * @param config Query config\r\n     */\r\n    getHeaders(config: IContentManagementQueryConfig): IHeader[] {\r\n        const headers: IHeader[] = [\r\n            // sdk tracking header\r\n            headerHelper.getSdkIdHeader({\r\n                host: this.sdkInfo.host,\r\n                name: this.sdkInfo.name,\r\n                version: this.sdkInfo.version\r\n            }),\r\n            // add authorization header\r\n            this.getAuthorizationHeader()\r\n        ];\r\n\r\n        // add query headers\r\n        headers.push(...config.headers);\r\n\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * Http PATCH response\r\n     * @param url Url of request\r\n     * @param config Query configuration\r\n     */\r\n    protected async patchResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.patchAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (error) {\r\n            throw this.mapContentManagementError(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http GET response\r\n     * @param url Url of request\r\n     * @param config Query configuration\r\n     */\r\n    protected async getResponseAsync<TRawData>(\r\n        url: string,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.getAsync<TRawData>(\r\n                {\r\n                    url: url\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http POST response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async postResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.postAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http PUT response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async putResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.putAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http Delete response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async deleteResponseAsync<TRawData>(\r\n        url: string,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.deleteAsync<TRawData>(\r\n                {\r\n                    url: url\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    protected async getBinaryDataFromUrlAsync(url: string): Promise<ArrayBuffer> {\r\n        // temp fix for repository not validating url\r\n        url = url.replace('#', '%23');\r\n\r\n        const response = await this.httpService.getAsync<ArrayBuffer>(\r\n            {\r\n                url: url\r\n            },\r\n            {\r\n                responseType: 'arraybuffer'\r\n            }\r\n        );\r\n\r\n        return response.data;\r\n    }\r\n\r\n    protected getMimeTypeFromFilename(filename: string): string | null {\r\n        return getType(filename);\r\n    }\r\n\r\n    private mapContentManagementError(error: any): any {\r\n        let axiosError: AxiosError | undefined;\r\n\r\n        if (error.error) {\r\n            axiosError = error.error;\r\n        } else {\r\n            axiosError = error;\r\n        }\r\n\r\n        if (!axiosError || !axiosError.isAxiosError) {\r\n            return error;\r\n        }\r\n\r\n        const cmError = axiosError.response?.data as SharedContracts.IContentManagementError;\r\n\r\n        if (cmError?.error_code || cmError?.request_id) {\r\n            const validationErrors: SharedModels.ValidationError[] = [];\r\n\r\n            if (cmError.validation_errors) {\r\n                validationErrors.push(\r\n                    ...cmError.validation_errors.map(\r\n                        (validationErrorRaw) =>\r\n                            new SharedModels.ValidationError({\r\n                                message: validationErrorRaw.message\r\n                            })\r\n                    )\r\n                );\r\n            }\r\n\r\n            return new SharedModels.ContentManagementBaseKontentError({\r\n                errorCode: cmError.error_code,\r\n                message: cmError.message,\r\n                originalError: error,\r\n                requestId: cmError.request_id,\r\n                validationErrors: validationErrors\r\n            });\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    /**\r\n     * Gets authorization header\r\n     */\r\n    private getAuthorizationHeader(): IHeader {\r\n        const key: string = this.config.apiKey;\r\n\r\n        if (!key) {\r\n            throw Error(`Cannot get authorization header for query type because API Key is undefined`);\r\n        }\r\n\r\n        return {\r\n            header: 'authorization',\r\n            value: `bearer ${key}`\r\n        };\r\n    }\r\n    /**\r\n     * Gets base URL of the request including the project Id\r\n     */\r\n    private getBaseUrl(): string {\r\n        if (this.config.baseUrl) {\r\n            return this.config.baseUrl;\r\n        }\r\n        return this.defaultBaseCMUrl;\r\n    }\r\n}\r\n","export * from './management-query-service.class';\r\nexport * from './mapping-service.class';\r\n","import { IHttpService, ISDKInfo } from '@kontent-ai/core-sdk';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport {\r\n    AssetContracts,\r\n    AssetFolderContracts,\r\n    AssetRenditionContracts,\r\n    CollectionContracts,\r\n    ContentItemContracts,\r\n    ContentTypeContracts,\r\n    ContentTypeSnippetContracts,\r\n    EnvironmentContracts,\r\n    LanguageContracts,\r\n    LanguageVariantContracts,\r\n    ProjectUserContracts,\r\n    RoleContracts,\r\n    SubscriptionContracts,\r\n    SpaceContracts,\r\n    TaxonomyContracts,\r\n    WebhookContracts,\r\n    WorkflowContracts,\r\n    PreviewContracts,\r\n    WebSpotlightContracts,\r\n    CustomAppsContracts\r\n} from '../contracts';\r\nimport {\r\n    assetFolderMapper,\r\n    assetsMapper,\r\n    contentItemsMapper,\r\n    contentTypeMapper,\r\n    contentTypeSnippetMapper,\r\n    languageMapper,\r\n    languageVariantMapper,\r\n    environmentMapper,\r\n    taxonomyMappper,\r\n    workflowMapper,\r\n    genericMapper,\r\n    collectionsMappers,\r\n    subscriptionMapper,\r\n    roleMapper,\r\n    projectUserMapper,\r\n    assetRenditionMapper,\r\n    spacesMapper,\r\n    previewMapper,\r\n    webSpotlightMapper,\r\n    customAppMapper\r\n} from '../mappers';\r\nimport { webhookMapper } from '../mappers/webhook-mapper';\r\nimport {\r\n    AssetModels,\r\n    ContentTypeModels,\r\n    ContentTypeSnippetModels,\r\n    IContentManagementQueryConfig,\r\n    LanguageModels,\r\n    TaxonomyModels,\r\n    WebhookModels,\r\n    WorkflowModels,\r\n    AssetFolderModels,\r\n    IContentManagementListQueryConfig,\r\n    CollectionModels,\r\n    ProjectUserModels,\r\n    AssetRenditionModels,\r\n    SpaceModels,\r\n    PreviewModels,\r\n    WebSpotlightModels,\r\n    CustomAppModels,\r\n    LanguageVariantModels\r\n} from '../models';\r\nimport {\r\n    AssetFolderResponses,\r\n    AssetResponses,\r\n    BaseResponses,\r\n    ContentItemResponses,\r\n    ContentTypeResponses,\r\n    ContentTypeSnippetResponses,\r\n    LanguageResponses,\r\n    LanguageVariantResponses,\r\n    TaxonomyResponses,\r\n    WebhookResponses,\r\n    WorkflowResponses,\r\n    GenericResponses,\r\n    CollectionResponses,\r\n    SubscriptionResponses,\r\n    RoleResponses,\r\n    ProjectUsersResponses,\r\n    AssetRenditionResponses,\r\n    SpaceResponses,\r\n    PreviewResponses,\r\n    WebSpotlightResponses,\r\n    CustomAppsResponses\r\n} from '../responses';\r\nimport { BaseManagementQueryService } from './base-management-service.class';\r\nimport { EnvironmentResponses } from '../responses/environments/environment-responses';\r\nimport { EnvironmentModels } from '../models/environments/environment.models';\r\n\r\nexport class ManagementQueryService extends BaseManagementQueryService<any> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected httpService: IHttpService<any>,\r\n        protected sdkInfo: ISDKInfo\r\n    ) {\r\n        super(config, httpService, sdkInfo);\r\n    }\r\n\r\n    async genericPostResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.postResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async genericPatchResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.patchResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async genericDeleteResponseAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.deleteResponseAsync<void>(url, {}, config));\r\n    }\r\n\r\n    async genericGetResponseAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.getResponseAsync<void>(url, {}, config));\r\n    }\r\n\r\n    async genericPutResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async getListAllResponseAsync<\r\n        TResponse extends BaseResponses.IContentManagementListResponse,\r\n        TAllResponse extends BaseResponses.IContentManagementListAllResponse\r\n    >(data: {\r\n        getResponse: (xContinuationToken?: string) => Promise<TResponse>;\r\n        allResponseFactory: (items: any[], responses: TResponse[]) => TAllResponse;\r\n        listQueryConfig: IContentManagementListQueryConfig<TResponse> | undefined;\r\n    }): Promise<TAllResponse> {\r\n        const responses = await this.getListAllResponseInternalAsync({\r\n            resolvedResponses: [],\r\n            getResponse: data.getResponse,\r\n            xContinuationToken: undefined,\r\n            listQueryConfig: data.listQueryConfig\r\n        });\r\n\r\n        return data.allResponseFactory(\r\n            responses.reduce((prev: any[], current) => {\r\n                prev.push(...current.data.items);\r\n                return prev;\r\n            }, []),\r\n            responses\r\n        );\r\n    }\r\n\r\n    async publishLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IPublishLanguageVariantData | undefined,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async createNewVersionOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async unpublishLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IUnpublishLanguageVarianthData | undefined,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async cancelScheduledPublishingOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async cancelScheduledUnpublishingOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async changeWorkflowOfLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IChangeWorkflowOfLanguageVariantData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async listWorkflowsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WorkflowResponses.ListWorkflowsResponse> {\r\n        return workflowMapper.mapListWorkflowsResponse(\r\n            await this.getResponseAsync<WorkflowContracts.IListWorkflowsResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WorkflowModels.IAddWorkflowData\r\n    ): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return workflowMapper.mapAddWorkflowResponse(\r\n            await this.postResponseAsync<WorkflowContracts.IAddWorkflowContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async updateWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WorkflowModels.IUpdateWorkflowData\r\n    ): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return workflowMapper.mapUpdateWorkflowResponse(\r\n            await this.putResponseAsync<WorkflowContracts.IUpdateWorkflowContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapViewContentTypeSnippetResponse(\r\n            await this.getResponseAsync<ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async deleteContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentTypeSnippetMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentTypeSnippetContracts.IDeleteContentTypeSnippetResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addContentTypeSnippetAsync(\r\n        url: string,\r\n        data: ContentTypeSnippetModels.IAddContentTypeSnippetData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.AddContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapAddContentTypeSnippetResponse(\r\n            await this.postResponseAsync<ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listContentTypeSnippetsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.ContentTypeSnippetListResponse> {\r\n        return contentTypeSnippetMapper.mapListingResponse(\r\n            await this.getResponseAsync<ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async environmentInformationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.EnvironmentInformationResponse> {\r\n        return environmentMapper.mapEnvironmentInformationResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentInformationResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listEnvironmentValidationIssuesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.EnvironmentValidationIssuesListResponse> {\r\n        return environmentMapper.mapProjectValidationIssuesListResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentValidationListResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async startEnvironmentValidationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return environmentMapper.mapStartEnvironmentValidationResponse(\r\n            await this.postResponseAsync<EnvironmentContracts.IStartEnvironmentValidationResponseContract>(\r\n                url,\r\n                {},\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async checkEnvironmentValidationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.CheckEnvironmentValidationResponse> {\r\n        return environmentMapper.mapCheckEnvironmentValidationResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.ICheckEnvironmentValidationResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addContentTypeAsync(\r\n        url: string,\r\n        data: ContentTypeModels.IAddContentTypeData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.AddContentTypeResponse> {\r\n        return contentTypeMapper.mapAddContentTypeResponse(\r\n            await this.postResponseAsync<ContentTypeContracts.IAddContentTypeResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentTypeMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentTypeContracts.IDeleteContentTypeResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ContentTypeModels.IModifyContentTypeData[]\r\n    ): Promise<ContentTypeResponses.ModifyContentTypeResponse> {\r\n        return contentTypeMapper.mapModifyContentTypeResponse(\r\n            await this.patchResponseAsync<ContentTypeContracts.IModifyContentTypeResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async modifyTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: TaxonomyModels.IModifyTaxonomyData[]\r\n    ): Promise<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n        return taxonomyMappper.mapModifyTaxonomyResponse(\r\n            await this.patchResponseAsync<TaxonomyContracts.IModifyTaxonomyResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ContentTypeSnippetModels.IModifyContentTypeSnippetData[]\r\n    ): Promise<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapModifyContentTypeSnippetResponse(\r\n            await this.patchResponseAsync<ContentTypeContracts.IModifyContentTypeResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.ViewContentTypeResponse> {\r\n        return contentTypeMapper.mapViewContentTypeResponse(\r\n            await this.getResponseAsync<ContentTypeContracts.IViewContentTypeResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listContentTypesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.ContentTypeListResponse> {\r\n        return contentTypeMapper.mapListingResponse(\r\n            await this.getResponseAsync<ContentTypeContracts.IContentTypeListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetRenditionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetRenditionResponses.AssetRenditionsListResponse> {\r\n        return assetRenditionMapper.mapListAssetRenditionsResponse(\r\n            await this.getResponseAsync<AssetRenditionContracts.IListRenditionResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapViewAssetRenditionResponse(\r\n            await this.getResponseAsync<AssetRenditionContracts.IViewRenditionResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetRenditionModels.IAddAssetRenditionData\r\n    ): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapAddAssetRenditionResponse(\r\n            await this.postResponseAsync<AssetRenditionContracts.IAddAssetRenditionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async modifyAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetRenditionModels.IModifyAssetRenditionData\r\n    ): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapModifyAssetRenditionResponse(\r\n            await this.putResponseAsync<AssetRenditionContracts.IModifyAssetRenditionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addCustomAppAsync(\r\n        url: string,\r\n        data: CustomAppModels.IAddCustomAppData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CustomAppsResponses.AddCustomAppResponse> {\r\n        return customAppMapper.mapAddCustomAppResponse(\r\n            await this.postResponseAsync<CustomAppsContracts.ICustomAppContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyCustomAppAsync(\r\n        url: string,\r\n        data: CustomAppModels.ModifyCustomAppOperation[],\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CustomAppsResponses.ModifyCustomAppResponse> {\r\n        return customAppMapper.mapModifyCustomAppResponse(\r\n            await this.patchResponseAsync<CustomAppsContracts.ICustomAppContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteCustomAppAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return customAppMapper.mapEmptyResponse(await this.deleteResponseAsync<{}>(url, {}, config));\r\n    }\r\n\r\n    async getCustomAppAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CustomAppsResponses.GetCustomAppResponse> {\r\n        return customAppMapper.mapGetCustomAppResponse(\r\n            await this.getResponseAsync<CustomAppsContracts.ICustomAppContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listCustomAppsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CustomAppsResponses.CustomAppsListResponse> {\r\n        return customAppMapper.mapListCustomAppsResponse(\r\n            await this.getResponseAsync<CustomAppsContracts.ICustomAppsListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addTaxonomyAsync(\r\n        url: string,\r\n        data: TaxonomyModels.IAddTaxonomyRequestModel,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.AddTaxonomyResponse> {\r\n        return taxonomyMappper.mapAddTaxonomyResponse(\r\n            await this.postResponseAsync<TaxonomyContracts.IAddTaxonomyResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return taxonomyMappper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<TaxonomyContracts.IDeleteTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.GetTaxonomyResponse> {\r\n        return taxonomyMappper.mapGetTaxonomyResponse(\r\n            await this.getResponseAsync<TaxonomyContracts.IGetTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listTaxonomiesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.TaxonomyListResponse> {\r\n        return taxonomyMappper.mapListingTaxonomysResponse(\r\n            await this.getResponseAsync<TaxonomyContracts.IListTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteAssetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return assetsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<AssetContracts.IDeleteAssetResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertAssetAsync(\r\n        url: string,\r\n        data: AssetModels.IUpsertAssetRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.UpdateAssetResponse> {\r\n        return assetsMapper.mapUpsertAssetResponse(\r\n            await this.putResponseAsync<AssetContracts.IUpsertAssetResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetAsync(\r\n        url: string,\r\n        data: AssetModels.IAddAssetRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AddAssetResponse> {\r\n        return assetsMapper.mapAddAssetResponse(\r\n            await this.postResponseAsync<AssetContracts.IAddAssetResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async listSubscriptionProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.SubscriptionProjectsListResponse> {\r\n        return subscriptionMapper.mapSubscriptionProjectsListResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.IListSubscriptionProjectsResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async litSubscriptionUsersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.SubscriptionUsersListResponse> {\r\n        return subscriptionMapper.mapSubscriptionUsersListResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.IListSubscriptionUsersResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSubscriptionProjectAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n        return subscriptionMapper.mapViewSubscriptionProjectResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.ISubscriptionProjectContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSubscriptionUserAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n        return subscriptionMapper.mapViewSubscriptionUserResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.ISubscriptionUserContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async activateUserInAllProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async deactivateUserInAllProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async uploadAssetFromUrlAsync(\r\n        uploadBinaryFileUrl: string,\r\n        addAssetUrl: string,\r\n        data: AssetModels.IUploadAssetFromUrlRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AddAssetResponse> {\r\n        // get binary data from url\r\n        const binaryData = await super.getBinaryDataFromUrlAsync(data.fileUrl);\r\n\r\n        const mimeType = super.getMimeTypeFromFilename(data.binaryFile.filename);\r\n\r\n        if (!mimeType) {\r\n            throw Error(\r\n                `Could not get MIME type for filename '${data.binaryFile.filename}'. Please include extension in your filename (e.g. myfile.png)`\r\n            );\r\n        }\r\n\r\n        // config needs to be cloned as otherwise it would be mutated with invalid\r\n        // headers in uploadBinaryFile method\r\n        const configForUploadBinaryFile = JSON.parse(JSON.stringify(config));\r\n\r\n        // upload binary file\r\n        const uploadedBinaryFileResponse = await this.uploadBinaryFileAsync(\r\n            uploadBinaryFileUrl,\r\n            {\r\n                binaryData: binaryData,\r\n                contentType: mimeType,\r\n                filename: data.binaryFile.filename,\r\n                contentLength: binaryData.byteLength\r\n            },\r\n            configForUploadBinaryFile\r\n        );\r\n\r\n        // creta asset & assign it to binary file\r\n        const assetResponse = await this.addAssetAsync(\r\n            addAssetUrl,\r\n            {\r\n                file_reference: {\r\n                    id: uploadedBinaryFileResponse.data.id,\r\n                    type: uploadedBinaryFileResponse.data.type\r\n                },\r\n                descriptions: data.asset.descriptions,\r\n                external_id: data.asset.external_id,\r\n                folder: data.asset.folder,\r\n                title: data.asset.title,\r\n                codename: data.asset.codename,\r\n                collection: data.asset.collection,\r\n                elements: data.asset.elements\r\n            },\r\n            config\r\n        );\r\n\r\n        return assetResponse;\r\n    }\r\n\r\n    async uploadBinaryFileAsync(\r\n        url: string,\r\n        data: AssetModels.IUploadBinaryFileRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.UploadBinaryFileResponse> {\r\n        config.headers.push({\r\n            header: 'Content-type',\r\n            value: data.contentType\r\n        });\r\n\r\n        if (data.contentLength) {\r\n            config.headers.push({ header: 'Content-length', value: data.contentLength.toString() });\r\n        }\r\n\r\n        return assetsMapper.mapUploadBinaryFileResponse(\r\n            await this.postResponseAsync<AssetContracts.IUploadBinaryFileResponseContract>(\r\n                url,\r\n                data.binaryData,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewAssetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.ViewAssetResponse> {\r\n        return assetsMapper.mapViewAssetResponse(\r\n            await this.getResponseAsync<AssetContracts.IAssetModelContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AssetsListResponse> {\r\n        return assetsMapper.mapListingAssetsResponse(\r\n            await this.getResponseAsync<AssetContracts.IAssetsListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listContentItemsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.ContentItemsResponse> {\r\n        return contentItemsMapper.mapListingItemsResponse(\r\n            await this.getResponseAsync<ContentItemContracts.IContentItemsListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewContentItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.ViewContentItemResponse> {\r\n        return contentItemsMapper.mapViewContentItemResponse(\r\n            await this.getResponseAsync<ContentItemContracts.IViewContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IAddContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.AddContentItemResponse> {\r\n        return contentItemsMapper.mapAddContentItemResponse(\r\n            await this.postResponseAsync<ContentItemContracts.IAddContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IUpsertContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.UpsertContentItemResponse> {\r\n        return contentItemsMapper.mapUpsertContentItemResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IUpsertContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async updateContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IUpdateContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.AddContentItemResponse> {\r\n        return contentItemsMapper.mapUpdateContentItemResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IUpdateContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteContentItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertLanguageVariantAsync(\r\n        url: string,\r\n        data: LanguageVariantContracts.IUpsertLanguageVariantPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n        return languageVariantMapper.mapUpsertLanguageVariantResponse(\r\n            await this.putResponseAsync<LanguageVariantContracts.IUpsertLanguageVariantResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n        return languageVariantMapper.mapViewLanguageVariantResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IViewLanguageVariantResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfItemResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[]>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfContentTypeWithComponentsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfContentTypeWithComponentsResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfContentTypeResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsByCollectionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsByCollectionResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsByCollectionResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async filterLanguageVariantsAsync(\r\n        url: string,\r\n        data: LanguageVariantModels.IFilterLanguageVariantsData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.FilterLanguageVariantsResponse> {\r\n        return languageVariantMapper.mapFilterLanguageVariantsResponse(\r\n            await this.postResponseAsync<LanguageVariantContracts.IFilterLanguageVariantsResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsBySpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsBySpaceResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsBySpaceResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguagesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageResponses.ListLanguagesResponse> {\r\n        return languageMapper.mapListLanguagesResponse(\r\n            await this.getResponseAsync<LanguageContracts.IListLanguagesResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageResponses.ViewLanguageResponse> {\r\n        return languageMapper.mapViewLanguageResponse(\r\n            await this.getResponseAsync<LanguageContracts.IViewLanguageResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: LanguageModels.IAddLanguageData\r\n    ): Promise<LanguageResponses.AddLanguageResponse> {\r\n        return languageMapper.mapAddLanguageResponse(\r\n            await this.postResponseAsync<LanguageContracts.IAddLanguageResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: LanguageModels.IModifyLanguageData[]\r\n    ): Promise<LanguageResponses.ModifyLanguageResponse> {\r\n        return languageMapper.mapModifyLanguageResponse(\r\n            await this.patchResponseAsync<LanguageContracts.IModifyLanguageResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async listWebhooksAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.WebhookListResponse> {\r\n        return webhookMapper.mapWebhooksListResponse(\r\n            await this.getResponseAsync<WebhookContracts.IWebhookListContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listLegacyWebhooksAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.LegacyWebhookListResponse> {\r\n        return webhookMapper.mapLegacyWebhooksListResponse(\r\n            await this.getResponseAsync<WebhookContracts.ILegacyWebhookListContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return webhookMapper.mapGetWebhookResponse(\r\n            await this.getResponseAsync<WebhookContracts.IGetWebhookContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getLegacyWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return webhookMapper.mapGetLegacyWebhookResponse(\r\n            await this.getResponseAsync<WebhookContracts.IGetLegacyWebhookContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WebhookModels.IAddWebhookData\r\n    ): Promise<WebhookResponses.AddWebhookResponse> {\r\n        return webhookMapper.mapAddWebhookResponse(\r\n            await this.postResponseAsync<WebhookContracts.IAddWebhookContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async addLegacyWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WebhookModels.IAddLegacyWebhookData\r\n    ): Promise<WebhookResponses.AddLegacyWebhookResponse> {\r\n        return webhookMapper.mapAddLegacyWebhookResponse(\r\n            await this.postResponseAsync<WebhookContracts.IAddLegacyWebhookContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async enableWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async disableWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetFolderResponses.AssetFoldersListResponse> {\r\n        return assetFolderMapper.mapListAssetFoldersResponse(\r\n            await this.getResponseAsync<AssetFolderContracts.IListAssetFoldersResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetFolderModels.IAddAssetFoldersData\r\n    ): Promise<AssetFolderResponses.AddAssetFoldersResponse> {\r\n        return assetFolderMapper.mapAddAssetFoldersResponse(\r\n            await this.postResponseAsync<AssetFolderContracts.IAddAssetFoldersResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetFolderModels.IModifyAssetFolderData[]\r\n    ): Promise<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n        return assetFolderMapper.mapModifyAssetFoldersResponse(\r\n            await this.patchResponseAsync<AssetFolderContracts.IModifyAssetFoldersDataResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listCollectionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CollectionResponses.CollectionsListResponse> {\r\n        return collectionsMappers.mapListCollectionsResponse(\r\n            await this.getResponseAsync<CollectionContracts.ICollectionListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listRolesAsync(url: string, config: IContentManagementQueryConfig): Promise<RoleResponses.RoleListResponse> {\r\n        return roleMapper.mapRoleListResponse(\r\n            await this.getResponseAsync<RoleContracts.IRoleListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewRoleAsync(url: string, config: IContentManagementQueryConfig): Promise<RoleResponses.ViewRoleResponse> {\r\n        return roleMapper.mapViewRoleResponse(\r\n            await this.getResponseAsync<RoleContracts.IRoleContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getPreviewConfigurationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<PreviewResponses.PreviewConfigurationResponse> {\r\n        return previewMapper.mapPreviewConfigurationResponse(\r\n            await this.getResponseAsync<PreviewContracts.IPreviewConfigurationContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyPreviewConfigurationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: PreviewModels.IModifyPreviewConfigurationData\r\n    ): Promise<PreviewResponses.ModifyConfigurationResponse> {\r\n        return previewMapper.mapModifyConfigurationResponse(\r\n            await this.putResponseAsync<PreviewContracts.IPreviewConfigurationContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async setCollectionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: CollectionModels.ISetCollectionData[]\r\n    ): Promise<CollectionResponses.SetCollectionsResponse> {\r\n        return collectionsMappers.mapSetCollectionsResponse(\r\n            await this.patchResponseAsync<CollectionContracts.ISetCollectionsResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async inviteProjectUserAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ProjectUserModels.IInviteUserData\r\n    ): Promise<ProjectUsersResponses.InviteUserResponse> {\r\n        return projectUserMapper.mapInviteUserResponse(\r\n            await this.postResponseAsync<ProjectUserContracts.IInviteUserResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async changeUserRolesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ProjectUserModels.IChangeUserRoleData\r\n    ): Promise<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n        return projectUserMapper.mapChangeUserRolesResponse(\r\n            await this.putResponseAsync<ProjectUserContracts.IChangeUserRolesResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async getEnvironmentCloningStateAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.GetCloningStateResponse> {\r\n        return environmentMapper.mapGetEnvironmentCloningStateResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentCloningStateResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return environmentMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<EnvironmentContracts.IDeleteEnvironmentResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.IModifyEnvironmentData[]\r\n    ): Promise<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n        return environmentMapper.mapModifyEnvironmentResponse(\r\n            await this.patchResponseAsync<EnvironmentContracts.IModifyEnvironmentResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async cloneEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.ICloneEnvironmentData\r\n    ): Promise<EnvironmentResponses.CloneEnvironmentResponse> {\r\n        return environmentMapper.mapCloneEnvironmentResponse(\r\n            await this.postResponseAsync<EnvironmentContracts.ICloneEnvironmentResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async markEnvironmentAsProductionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return environmentMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<EnvironmentContracts.IMarkEnvironmentAsProductionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addSpaceAsync(\r\n        url: string,\r\n        data: SpaceModels.IAddSpaceData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.AddSpaceResponse> {\r\n        return spacesMapper.mapAddSpaceResponse(\r\n            await this.postResponseAsync<SpaceContracts.IAddSpaceResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.ViewSpaceResponse> {\r\n        return spacesMapper.mapViewSpaceResponse(\r\n            await this.getResponseAsync<SpaceContracts.IViewSpaceResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listSpacesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.SpacesListResponse> {\r\n        return spacesMapper.mapListingSpacesResponse(\r\n            await this.getResponseAsync<SpaceContracts.ISpacesListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteSpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return spacesMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<SpaceContracts.IDeleteSpaceResponseContact>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifySpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: SpaceModels.IModifySpaceData[]\r\n    ): Promise<SpaceResponses.ModifySpaceResponse> {\r\n        return spacesMapper.mapModifySpaceResponse(\r\n            await this.patchResponseAsync<SpaceContracts.IModifySpaceResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async activateWebSpotlightAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WebSpotlightModels.IActivateWebSpotlightData\r\n    ): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return webSpotlightMapper.mapWebSpotlightStatusResponse(\r\n            await this.putResponseAsync<WebSpotlightContracts.IWebSpotlightStatus>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deactivateWebSpotlightAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return webSpotlightMapper.mapWebSpotlightStatusResponse(\r\n            await this.putResponseAsync<WebSpotlightContracts.IWebSpotlightStatus>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async checkWebSpotlightStatusAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebSpotlightResponses.WebSpotlightStatusResponse> {\r\n        return webSpotlightMapper.mapWebSpotlightStatusResponse(\r\n            await this.getResponseAsync<WebSpotlightContracts.IWebSpotlightStatus>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    private async getListAllResponseInternalAsync<\r\n        TResponse extends BaseResponses.IContentManagementListResponse\r\n    >(data: {\r\n        xContinuationToken: string | undefined;\r\n        getResponse: (xContinuationToken?: string) => Promise<TResponse>;\r\n        resolvedResponses: TResponse[];\r\n        listQueryConfig: IContentManagementListQueryConfig<TResponse> | undefined;\r\n    }): Promise<TResponse[]> {\r\n        const response = await data.getResponse(data.xContinuationToken);\r\n\r\n        if (data.listQueryConfig?.delayBetweenRequests) {\r\n            await this.sleepAsync(data.listQueryConfig.delayBetweenRequests);\r\n        }\r\n\r\n        data.resolvedResponses.push(response);\r\n\r\n        if (data.listQueryConfig?.responseFetched) {\r\n            data.listQueryConfig.responseFetched(response, data.xContinuationToken);\r\n        }\r\n\r\n        if (response.data.pagination.continuationToken) {\r\n            // recursively fetch next page data\r\n            return await this.getListAllResponseInternalAsync({\r\n                xContinuationToken: response.data.pagination.continuationToken,\r\n                getResponse: data.getResponse,\r\n                resolvedResponses: data.resolvedResponses,\r\n                listQueryConfig: data.listQueryConfig\r\n            });\r\n        }\r\n\r\n        return data.resolvedResponses;\r\n    }\r\n\r\n    private async sleepAsync(ms: number): Promise<void> {\r\n        return await new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n}\r\n","import {\r\n    AssetFolderMapper,\r\n    assetFolderMapper,\r\n    AssetsMapper,\r\n    assetsMapper,\r\n    ContentItemsMapper,\r\n    contentItemsMapper,\r\n    ContentTypeMapper,\r\n    contentTypeMapper,\r\n    ContentTypeSnippetMapper,\r\n    contentTypeSnippetMapper,\r\n    ElementsMapper,\r\n    elementsMapper,\r\n    LanguageMapper,\r\n    languageMapper,\r\n    LanguageVariantMapper,\r\n    languageVariantMapper,\r\n    EnvironmentMapper,\r\n    environmentMapper,\r\n    TaxonomyMapper,\r\n    taxonomyMappper,\r\n    WebhookMapper,\r\n    webhookMapper,\r\n    WorkflowMapper,\r\n    workflowMapper,\r\n} from '../mappers';\r\n\r\nexport interface IMappingService {\r\n    assetFoldersMapper: AssetFolderMapper;\r\n    assetsMapper: AssetsMapper;\r\n    contentItemsMapper: ContentItemsMapper;\r\n    contentTypeMapper: ContentTypeMapper;\r\n    contentTypeSnippetMapper: ContentTypeSnippetMapper;\r\n    elementsMapper: ElementsMapper;\r\n    languageMapper: LanguageMapper;\r\n    languageVariantMapper: LanguageVariantMapper;\r\n    environmentMapper: EnvironmentMapper;\r\n    taxonomyMapper: TaxonomyMapper;\r\n    webhookMapper: WebhookMapper;\r\n    workflowMapper: WorkflowMapper;\r\n}\r\n\r\nexport class MappingService implements IMappingService {\r\n    public assetFoldersMapper: AssetFolderMapper;\r\n    public assetsMapper: AssetsMapper;\r\n    public contentItemsMapper: ContentItemsMapper;\r\n    public contentTypeMapper: ContentTypeMapper;\r\n    public contentTypeSnippetMapper: ContentTypeSnippetMapper;\r\n    public elementsMapper: ElementsMapper;\r\n    public languageMapper: LanguageMapper;\r\n    public languageVariantMapper: LanguageVariantMapper;\r\n    public environmentMapper: EnvironmentMapper;\r\n    public taxonomyMapper: TaxonomyMapper;\r\n    public webhookMapper: WebhookMapper;\r\n    public workflowMapper: WorkflowMapper;\r\n\r\n    constructor() {\r\n        this.assetFoldersMapper = assetFolderMapper;\r\n        this.assetsMapper = assetsMapper;\r\n        this.contentItemsMapper = contentItemsMapper;\r\n        this.contentTypeMapper = contentTypeMapper;\r\n        this.contentTypeSnippetMapper = contentTypeSnippetMapper;\r\n        this.elementsMapper = elementsMapper;\r\n        this.languageMapper = languageMapper;\r\n        this.languageVariantMapper = languageVariantMapper;\r\n        this.environmentMapper = environmentMapper;\r\n        this.taxonomyMapper = taxonomyMappper;\r\n        this.webhookMapper = webhookMapper;\r\n        this.workflowMapper = workflowMapper;\r\n    }\r\n}\r\n","export class HeaderHelper {\n    constructor() {\n        /**\n        * Header name for SDK usage\n        */\n        this.sdkVersionHeader = 'X-KC-SDKID';\n    }\n    /**\n    * Header identifying SDK type & version for internal purposes of Kontent.ai\n    */\n    getSdkIdHeader(info) {\n        return {\n            header: this.sdkVersionHeader,\n            value: `${info.host};${info.name};${info.version}`\n        };\n    }\n}\nexport const headerHelper = new HeaderHelper();\n//# sourceMappingURL=header.helper.js.map","export function extractHeadersFromAxiosResponse(response) {\n    const headers = [];\n    for (const headerKey of Object.keys(response.headers)) {\n        headers.push({\n            header: headerKey,\n            value: response.headers[headerKey]\n        });\n    }\n    return headers;\n}\n//# sourceMappingURL=headers-helper.js.map","export * from './url.helper';\nexport * from './header.helper';\nexport * from './retry-helper';\nexport * from './headers-helper';\n//# sourceMappingURL=index.js.map","import { extractHeadersFromAxiosResponse } from './headers-helper';\nexport class RetryHelper {\n    constructor() {\n        this.requestCancelledMessagePrefix = 'Request cancelled';\n        this.retryAfterHeaderName = 'Retry-After';\n        this.defaultRetryStatusCodes = [408, 429, 500, 502, 503, 504];\n        this.defaultRetryStrategy = {\n            addJitter: true,\n            deltaBackoffMs: 1000,\n            maxAttempts: 5,\n            canRetryError: (error) => this.canRetryErrorDefault(error)\n        };\n    }\n    getRetryErrorResult(data) {\n        var _a, _b, _c;\n        if (data.error && data.error.message) {\n            if (data.error.message.startsWith(this.requestCancelledMessagePrefix)) {\n                // request was cancelled by user, do not retry it\n                return {\n                    canRetry: false,\n                    retryInMs: 0,\n                    maxRetries: 0\n                };\n            }\n        }\n        const canRetryError = data.retryStrategy.canRetryError\n            ? data.retryStrategy.canRetryError(data.error)\n            : this.defaultRetryStrategy.canRetryError(data.error);\n        if (!canRetryError) {\n            // request cannot be retried\n            return {\n                canRetry: false,\n                retryInMs: 0,\n                maxRetries: 0\n            };\n        }\n        const maxRetries = ((_a = data.retryStrategy.maxAttempts) !== null && _a !== void 0 ? _a : this.defaultRetryStrategy.maxAttempts);\n        const maxRetriesReached = data.retryAttempt >= maxRetries;\n        if (maxRetriesReached) {\n            // request cannot be retried anymore due to maximum attempts\n            return {\n                canRetry: false,\n                retryInMs: 0,\n                maxRetries: maxRetries\n            };\n        }\n        // get wait time\n        const retryResult = this.tryGetRetryAfterInMsFromError(data.error);\n        if (retryResult) {\n            // retry after header was provided\n            return {\n                canRetry: true,\n                retryInMs: retryResult,\n                maxRetries: maxRetries\n            };\n        }\n        // wait time was not provided in header\n        const waitTimeMs = this.getNextWaitTimeMs((_b = data.retryStrategy.addJitter) !== null && _b !== void 0 ? _b : this.defaultRetryStrategy.addJitter, (_c = data.retryStrategy.deltaBackoffMs) !== null && _c !== void 0 ? _c : this.defaultRetryStrategy.deltaBackoffMs, data.retryAttempt);\n        return {\n            canRetry: true,\n            retryInMs: waitTimeMs,\n            maxRetries: maxRetries\n        };\n    }\n    getRetryStrategyFromStrategyOptions(retryOptions) {\n        if (!retryOptions) {\n            return this.defaultRetryStrategy;\n        }\n        return retryOptions;\n    }\n    canRetryInTime(startTime, maxCumulativeWaitTimeMs) {\n        const start = startTime.getTime();\n        const now = new Date().getTime();\n        const differenceInMs = now - start;\n        return {\n            canRetry: differenceInMs < maxCumulativeWaitTimeMs,\n            differenceInMs: differenceInMs\n        };\n    }\n    getNextWaitTimeMs(addJitter, deltaBackoffMs, retryAttempts) {\n        if (!addJitter) {\n            return deltaBackoffMs * Math.pow(2, retryAttempts);\n        }\n        const from = 0.8 * deltaBackoffMs;\n        const to = 1.2 * deltaBackoffMs * Math.pow(2, retryAttempts);\n        return this.randomNumberFromInterval(from, to);\n    }\n    canRetryErrorDefault(error) {\n        const axiosError = this.tryGetAxiosError(error);\n        if (!axiosError) {\n            // by default non-axios errors are not retried\n            return false;\n        }\n        const statusCode = this.getStatusCodeFromError(error);\n        const canRetryStatusCode = this.canRetryStatusCode(statusCode, this.defaultRetryStatusCodes);\n        if (canRetryStatusCode) {\n            return true;\n        }\n        return false;\n    }\n    tryGetRetryAfterInMsFromError(error) {\n        const axiosError = this.tryGetAxiosError(error);\n        if (!axiosError || !axiosError.response) {\n            return undefined;\n        }\n        const headers = extractHeadersFromAxiosResponse(axiosError.response);\n        const retryValueHeader = headers.find((m) => m.header.toLowerCase() === this.retryAfterHeaderName.toLowerCase());\n        if (!retryValueHeader) {\n            return undefined;\n        }\n        const retryInSeconds = +retryValueHeader.value;\n        return retryInSeconds * 1000;\n    }\n    canRetryStatusCode(statusCode, useRetryForResponseCodes) {\n        return useRetryForResponseCodes.includes(statusCode);\n    }\n    getStatusCodeFromError(error) {\n        const axiosError = this.tryGetAxiosError(error);\n        if (!axiosError || !axiosError.response) {\n            return 0;\n        }\n        return axiosError.response.status;\n    }\n    tryGetAxiosError(error) {\n        if (!error) {\n            return undefined;\n        }\n        if (error.isAxiosError) {\n            return error;\n        }\n        const originalError = error.originalError;\n        if (originalError && originalError.isAxiosError) {\n            return originalError;\n        }\n        return undefined;\n    }\n    /**\n     * min and max included\n     */\n    randomNumberFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n}\nexport const retryHelper = new RetryHelper();\n//# sourceMappingURL=retry-helper.js.map","export class UrlHelper {\n    /**\n   * Adds query parameters to given url\n   * @param url Url to which options will be added\n   * @param options Query parameters to add\n   */\n    addOptionsToUrl(url, options) {\n        if (options) {\n            options.forEach(filter => {\n                if (url.indexOf('?') > -1) {\n                    url += '&';\n                }\n                else {\n                    url += '?';\n                }\n                url += filter.getParam();\n            });\n        }\n        return url;\n    }\n}\nexport const urlHelper = new UrlHelper();\n//# sourceMappingURL=url.helper.js.map","export class HttpDebugger {\n    /*\n    Called when http request is started\n    */\n    debugStartHttpRequest() {\n    }\n    /*\n    Called when http request is resolved\n    */\n    debugSuccessHttpRequest() {\n    }\n    /*\n    Called when http request is being retried\n    */\n    debugRetryHttpRequest() {\n    }\n}\nexport const httpDebugger = new HttpDebugger();\n//# sourceMappingURL=http.debugger.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from 'axios';\nimport { extractHeadersFromAxiosResponse } from '../helpers/headers-helper';\nimport { httpDebugger } from './http.debugger';\nimport { retryHelper } from '../helpers/retry-helper';\nexport function getWithRetryAsync(instance, call, functionsConfig, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\n        return yield runWithRetryAsync({\n            retryAttempt: 0,\n            url: call.url,\n            retryStrategy: retryStrategyOptions,\n            functionsConfig: functionsConfig,\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\n                var _b, _c;\n                httpDebugger.debugStartHttpRequest();\n                const axiosResponse = yield instance.get(call.url, {\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\n                });\n                const response = {\n                    data: axiosResponse.data,\n                    rawResponse: axiosResponse,\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\n                    status: axiosResponse.status,\n                    retryStrategy: {\n                        options: retryStrategyOptions,\n                        retryAttempts: retryAttempt\n                    }\n                };\n                httpDebugger.debugSuccessHttpRequest();\n                return response;\n            })\n        });\n    });\n}\nexport function postWithRetryAsync(instance, call, functionsConfig, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\n        return yield runWithRetryAsync({\n            retryAttempt: 0,\n            url: call.url,\n            retryStrategy: retryStrategyOptions,\n            functionsConfig: functionsConfig,\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\n                var _b, _c;\n                httpDebugger.debugStartHttpRequest();\n                const axiosResponse = yield instance.post(call.url, call.body, {\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\n                    // required for uploading large files\n                    // https://github.com/axios/axios/issues/1362\n                    maxContentLength: 'Infinity',\n                    maxBodyLength: 'Infinity',\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\n                });\n                const response = {\n                    data: axiosResponse.data,\n                    rawResponse: axiosResponse,\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\n                    status: axiosResponse.status,\n                    retryStrategy: {\n                        options: retryStrategyOptions,\n                        retryAttempts: retryAttempt\n                    }\n                };\n                httpDebugger.debugSuccessHttpRequest();\n                return response;\n            })\n        });\n    });\n}\nexport function putWithRetryAsync(instance, call, functionsConfig, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\n        return yield runWithRetryAsync({\n            retryAttempt: 0,\n            url: call.url,\n            retryStrategy: retryStrategyOptions,\n            functionsConfig: functionsConfig,\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\n                var _b, _c;\n                httpDebugger.debugStartHttpRequest();\n                const axiosResponse = yield instance.put(call.url, call.body, {\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\n                    // required for uploading large files\n                    // https://github.com/axios/axios/issues/1362\n                    maxContentLength: 'Infinity',\n                    maxBodyLength: 'Infinity',\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\n                });\n                const response = {\n                    data: axiosResponse.data,\n                    rawResponse: axiosResponse,\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\n                    status: axiosResponse.status,\n                    retryStrategy: {\n                        options: retryStrategyOptions,\n                        retryAttempts: retryAttempt\n                    }\n                };\n                httpDebugger.debugSuccessHttpRequest();\n                return response;\n            })\n        });\n    });\n}\nexport function patchWithRetryAsync(instance, call, functionsConfig, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\n        return yield runWithRetryAsync({\n            retryAttempt: 0,\n            url: call.url,\n            retryStrategy: retryStrategyOptions,\n            functionsConfig: functionsConfig,\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\n                var _b, _c;\n                httpDebugger.debugStartHttpRequest();\n                const axiosResponse = yield instance.patch(call.url, call.body, {\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\n                    // required for uploading large files\n                    // https://github.com/axios/axios/issues/1362\n                    maxContentLength: 'Infinity',\n                    maxBodyLength: 'Infinity',\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\n                });\n                const response = {\n                    data: axiosResponse.data,\n                    rawResponse: axiosResponse,\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\n                    status: axiosResponse.status,\n                    retryStrategy: {\n                        options: retryStrategyOptions,\n                        retryAttempts: retryAttempt\n                    }\n                };\n                httpDebugger.debugSuccessHttpRequest();\n                return response;\n            })\n        });\n    });\n}\nexport function deleteWithRetryAsync(instance, call, functionsConfig, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\n        return yield runWithRetryAsync({\n            retryAttempt: 0,\n            url: call.url,\n            retryStrategy: retryStrategyOptions,\n            functionsConfig: functionsConfig,\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\n                var _b, _c;\n                httpDebugger.debugStartHttpRequest();\n                const axiosResponse = yield instance.delete(call.url, {\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\n                    // required for uploading large files\n                    // https://github.com/axios/axios/issues/1362\n                    maxContentLength: 'Infinity',\n                    maxBodyLength: 'Infinity',\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\n                });\n                const response = {\n                    data: axiosResponse.data,\n                    rawResponse: axiosResponse,\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\n                    status: axiosResponse.status,\n                    retryStrategy: {\n                        options: retryStrategyOptions,\n                        retryAttempts: retryAttempt\n                    }\n                };\n                httpDebugger.debugSuccessHttpRequest();\n                return response;\n            })\n        });\n    });\n}\nexport function createCancelToken() {\n    let canceler;\n    const token = new axios.CancelToken((c) => {\n        // An executor function receives a cancel function as a parameter\n        canceler = c;\n    });\n    return {\n        cancel: (cancelMessage) => canceler(`${retryHelper.requestCancelledMessagePrefix}: ${cancelMessage !== null && cancelMessage !== void 0 ? cancelMessage : 'User cancel'}`),\n        token: token\n    };\n}\nfunction runWithRetryAsync(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield data.call(data.retryAttempt);\n        }\n        catch (error) {\n            const retryResult = retryHelper.getRetryErrorResult({\n                error: error,\n                retryAttempt: data.retryAttempt,\n                retryStrategy: data.retryStrategy\n            });\n            if (retryResult.canRetry) {\n                httpDebugger.debugRetryHttpRequest();\n                // wait time before retrying\n                yield new Promise((resolve) => setTimeout(resolve, retryResult.retryInMs));\n                if (data.functionsConfig.logErrorsToConsole) {\n                    console.warn(`Retry attempt '${data.retryAttempt + 1}' from a maximum of '${retryResult.maxRetries}' retries. Request url: '${data.url}'`);\n                }\n                // retry request\n                return yield runWithRetryAsync({\n                    call: data.call,\n                    retryStrategy: data.retryStrategy,\n                    retryAttempt: data.retryAttempt + 1,\n                    url: data.url,\n                    functionsConfig: data.functionsConfig\n                });\n            }\n            if (data.functionsConfig.logErrorsToConsole) {\n                console.error(`Executing '${data.url}' failed. Request was retried '${data.retryAttempt}' times. `, error);\n            }\n            throw error;\n        }\n    });\n}\nfunction getHeadersJson(headers, addContentTypeHeader) {\n    const headerJson = {};\n    headers.forEach((header) => {\n        headerJson[header.header] = header.value;\n    });\n    if (addContentTypeHeader) {\n        // add default content type header if not present\n        const contentTypeHeader = headers.find((m) => m.header.toLowerCase() === 'Content-Type'.toLowerCase());\n        if (!contentTypeHeader) {\n            headerJson['Content-Type'] = 'application/json';\n        }\n    }\n    return headerJson;\n}\n//# sourceMappingURL=http.functions.js.map","export {};\n//# sourceMappingURL=http.models.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from 'axios';\nimport * as HttpFunctions from './http.functions';\nexport class HttpService {\n    constructor(opts) {\n        this.opts = opts;\n        this.axiosInstance = axios.create(opts === null || opts === void 0 ? void 0 : opts.axiosRequestConfig);\n        this.functionsConfig = this.getFunctionsConfig();\n    }\n    getAsync(call, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield HttpFunctions.getWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\n        });\n    }\n    postAsync(call, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield HttpFunctions.postWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\n        });\n    }\n    putAsync(call, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield HttpFunctions.putWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\n        });\n    }\n    patchAsync(call, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield HttpFunctions.patchWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\n        });\n    }\n    deleteAsync(call, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield HttpFunctions.deleteWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\n        });\n    }\n    createCancelToken() {\n        return HttpFunctions.createCancelToken();\n    }\n    getFunctionsConfig() {\n        var _a, _b;\n        return {\n            logErrorsToConsole: (_b = (_a = this.opts) === null || _a === void 0 ? void 0 : _a.logErrorsToConsole) !== null && _b !== void 0 ? _b : true\n        };\n    }\n}\n//# sourceMappingURL=http.service.js.map","export {};\n//# sourceMappingURL=ihttp.service.js.map","export * from './ihttp.service';\nexport * from './http.service';\nexport * from './http.models';\nexport * from './http.functions';\nexport * from './http.debugger';\nexport * from './test-http.service';\n//# sourceMappingURL=index.js.map","export class TestHttpService {\n    constructor(config) {\n        this.response = undefined;\n        this.error = undefined;\n        Object.assign(this, config);\n    }\n    getAsync(call, options) {\n        return this.resolveTestCall();\n    }\n    postAsync(call, options) {\n        return this.resolveTestCall();\n    }\n    putAsync(call, options) {\n        return this.resolveTestCall();\n    }\n    patchAsync(call, options) {\n        return this.resolveTestCall();\n    }\n    deleteAsync(call, options) {\n        return this.resolveTestCall();\n    }\n    createCancelToken() {\n        return {\n            cancel: () => { },\n            token: undefined\n        };\n    }\n    resolveTestCall() {\n        const promise = new Promise((resolve, reject) => {\n            if (this.response) {\n                resolve(this.response);\n            }\n            if (this.error) {\n                reject(this.error);\n            }\n            throw Error(`Missing test data`);\n        });\n        return promise;\n    }\n}\n//# sourceMappingURL=test-http.service.js.map","/* Public API */\nexport * from './helpers';\nexport * from './models';\nexport * from './http';\n//# sourceMappingURL=index.js.map","export * from './url.models';\nexport * from './isdk-info';\nexport * from './parameters';\n//# sourceMappingURL=index.js.map","export {};\n//# sourceMappingURL=isdk-info.js.map","export var Parameters;\n(function (Parameters) {\n    class CustomParameter {\n        /**\n         * Custom parameter\n         * @constructor\n         * @param {string} name - Name of the parameter\n         * @param {string} value - Value of the parameter\n         */\n        constructor(name, value) {\n            this.name = name;\n            this.value = value;\n            if (!name) {\n                throw Error(`Name of the custom parameter is not specified`);\n            }\n        }\n        getParam() {\n            return this.name;\n        }\n        getParamValue() {\n            return this.value;\n        }\n    }\n    Parameters.CustomParameter = CustomParameter;\n})(Parameters || (Parameters = {}));\n//# sourceMappingURL=parameters.js.map","export {};\n//# sourceMappingURL=url.models.js.map","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","export const VERSION = \"1.11.0\";","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'), require('./types/other'));\n","module.exports = {\"application/prs.cww\":[\"cww\"],\"application/vnd.1000minds.decision-model+xml\":[\"1km\"],\"application/vnd.3gpp.pic-bw-large\":[\"plb\"],\"application/vnd.3gpp.pic-bw-small\":[\"psb\"],\"application/vnd.3gpp.pic-bw-var\":[\"pvb\"],\"application/vnd.3gpp2.tcap\":[\"tcap\"],\"application/vnd.3m.post-it-notes\":[\"pwn\"],\"application/vnd.accpac.simply.aso\":[\"aso\"],\"application/vnd.accpac.simply.imp\":[\"imp\"],\"application/vnd.acucobol\":[\"acu\"],\"application/vnd.acucorp\":[\"atc\",\"acutc\"],\"application/vnd.adobe.air-application-installer-package+zip\":[\"air\"],\"application/vnd.adobe.formscentral.fcdt\":[\"fcdt\"],\"application/vnd.adobe.fxp\":[\"fxp\",\"fxpl\"],\"application/vnd.adobe.xdp+xml\":[\"xdp\"],\"application/vnd.adobe.xfdf\":[\"xfdf\"],\"application/vnd.ahead.space\":[\"ahead\"],\"application/vnd.airzip.filesecure.azf\":[\"azf\"],\"application/vnd.airzip.filesecure.azs\":[\"azs\"],\"application/vnd.amazon.ebook\":[\"azw\"],\"application/vnd.americandynamics.acc\":[\"acc\"],\"application/vnd.amiga.ami\":[\"ami\"],\"application/vnd.android.package-archive\":[\"apk\"],\"application/vnd.anser-web-certificate-issue-initiation\":[\"cii\"],\"application/vnd.anser-web-funds-transfer-initiation\":[\"fti\"],\"application/vnd.antix.game-component\":[\"atx\"],\"application/vnd.apple.installer+xml\":[\"mpkg\"],\"application/vnd.apple.keynote\":[\"key\"],\"application/vnd.apple.mpegurl\":[\"m3u8\"],\"application/vnd.apple.numbers\":[\"numbers\"],\"application/vnd.apple.pages\":[\"pages\"],\"application/vnd.apple.pkpass\":[\"pkpass\"],\"application/vnd.aristanetworks.swi\":[\"swi\"],\"application/vnd.astraea-software.iota\":[\"iota\"],\"application/vnd.audiograph\":[\"aep\"],\"application/vnd.balsamiq.bmml+xml\":[\"bmml\"],\"application/vnd.blueice.multipass\":[\"mpm\"],\"application/vnd.bmi\":[\"bmi\"],\"application/vnd.businessobjects\":[\"rep\"],\"application/vnd.chemdraw+xml\":[\"cdxml\"],\"application/vnd.chipnuts.karaoke-mmd\":[\"mmd\"],\"application/vnd.cinderella\":[\"cdy\"],\"application/vnd.citationstyles.style+xml\":[\"csl\"],\"application/vnd.claymore\":[\"cla\"],\"application/vnd.cloanto.rp9\":[\"rp9\"],\"application/vnd.clonk.c4group\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"],\"application/vnd.cluetrust.cartomobile-config\":[\"c11amc\"],\"application/vnd.cluetrust.cartomobile-config-pkg\":[\"c11amz\"],\"application/vnd.commonspace\":[\"csp\"],\"application/vnd.contact.cmsg\":[\"cdbcmsg\"],\"application/vnd.cosmocaller\":[\"cmc\"],\"application/vnd.crick.clicker\":[\"clkx\"],\"application/vnd.crick.clicker.keyboard\":[\"clkk\"],\"application/vnd.crick.clicker.palette\":[\"clkp\"],\"application/vnd.crick.clicker.template\":[\"clkt\"],\"application/vnd.crick.clicker.wordbank\":[\"clkw\"],\"application/vnd.criticaltools.wbs+xml\":[\"wbs\"],\"application/vnd.ctc-posml\":[\"pml\"],\"application/vnd.cups-ppd\":[\"ppd\"],\"application/vnd.curl.car\":[\"car\"],\"application/vnd.curl.pcurl\":[\"pcurl\"],\"application/vnd.dart\":[\"dart\"],\"application/vnd.data-vision.rdz\":[\"rdz\"],\"application/vnd.dbf\":[\"dbf\"],\"application/vnd.dece.data\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"],\"application/vnd.dece.ttml+xml\":[\"uvt\",\"uvvt\"],\"application/vnd.dece.unspecified\":[\"uvx\",\"uvvx\"],\"application/vnd.dece.zip\":[\"uvz\",\"uvvz\"],\"application/vnd.denovo.fcselayout-link\":[\"fe_launch\"],\"application/vnd.dna\":[\"dna\"],\"application/vnd.dolby.mlp\":[\"mlp\"],\"application/vnd.dpgraph\":[\"dpg\"],\"application/vnd.dreamfactory\":[\"dfac\"],\"application/vnd.ds-keypoint\":[\"kpxx\"],\"application/vnd.dvb.ait\":[\"ait\"],\"application/vnd.dvb.service\":[\"svc\"],\"application/vnd.dynageo\":[\"geo\"],\"application/vnd.ecowin.chart\":[\"mag\"],\"application/vnd.enliven\":[\"nml\"],\"application/vnd.epson.esf\":[\"esf\"],\"application/vnd.epson.msf\":[\"msf\"],\"application/vnd.epson.quickanime\":[\"qam\"],\"application/vnd.epson.salt\":[\"slt\"],\"application/vnd.epson.ssf\":[\"ssf\"],\"application/vnd.eszigno3+xml\":[\"es3\",\"et3\"],\"application/vnd.ezpix-album\":[\"ez2\"],\"application/vnd.ezpix-package\":[\"ez3\"],\"application/vnd.fdf\":[\"fdf\"],\"application/vnd.fdsn.mseed\":[\"mseed\"],\"application/vnd.fdsn.seed\":[\"seed\",\"dataless\"],\"application/vnd.flographit\":[\"gph\"],\"application/vnd.fluxtime.clip\":[\"ftc\"],\"application/vnd.framemaker\":[\"fm\",\"frame\",\"maker\",\"book\"],\"application/vnd.frogans.fnc\":[\"fnc\"],\"application/vnd.frogans.ltf\":[\"ltf\"],\"application/vnd.fsc.weblaunch\":[\"fsc\"],\"application/vnd.fujitsu.oasys\":[\"oas\"],\"application/vnd.fujitsu.oasys2\":[\"oa2\"],\"application/vnd.fujitsu.oasys3\":[\"oa3\"],\"application/vnd.fujitsu.oasysgp\":[\"fg5\"],\"application/vnd.fujitsu.oasysprs\":[\"bh2\"],\"application/vnd.fujixerox.ddd\":[\"ddd\"],\"application/vnd.fujixerox.docuworks\":[\"xdw\"],\"application/vnd.fujixerox.docuworks.binder\":[\"xbd\"],\"application/vnd.fuzzysheet\":[\"fzs\"],\"application/vnd.genomatix.tuxedo\":[\"txd\"],\"application/vnd.geogebra.file\":[\"ggb\"],\"application/vnd.geogebra.tool\":[\"ggt\"],\"application/vnd.geometry-explorer\":[\"gex\",\"gre\"],\"application/vnd.geonext\":[\"gxt\"],\"application/vnd.geoplan\":[\"g2w\"],\"application/vnd.geospace\":[\"g3w\"],\"application/vnd.gmx\":[\"gmx\"],\"application/vnd.google-apps.document\":[\"gdoc\"],\"application/vnd.google-apps.presentation\":[\"gslides\"],\"application/vnd.google-apps.spreadsheet\":[\"gsheet\"],\"application/vnd.google-earth.kml+xml\":[\"kml\"],\"application/vnd.google-earth.kmz\":[\"kmz\"],\"application/vnd.grafeq\":[\"gqf\",\"gqs\"],\"application/vnd.groove-account\":[\"gac\"],\"application/vnd.groove-help\":[\"ghf\"],\"application/vnd.groove-identity-message\":[\"gim\"],\"application/vnd.groove-injector\":[\"grv\"],\"application/vnd.groove-tool-message\":[\"gtm\"],\"application/vnd.groove-tool-template\":[\"tpl\"],\"application/vnd.groove-vcard\":[\"vcg\"],\"application/vnd.hal+xml\":[\"hal\"],\"application/vnd.handheld-entertainment+xml\":[\"zmm\"],\"application/vnd.hbci\":[\"hbci\"],\"application/vnd.hhe.lesson-player\":[\"les\"],\"application/vnd.hp-hpgl\":[\"hpgl\"],\"application/vnd.hp-hpid\":[\"hpid\"],\"application/vnd.hp-hps\":[\"hps\"],\"application/vnd.hp-jlyt\":[\"jlt\"],\"application/vnd.hp-pcl\":[\"pcl\"],\"application/vnd.hp-pclxl\":[\"pclxl\"],\"application/vnd.hydrostatix.sof-data\":[\"sfd-hdstx\"],\"application/vnd.ibm.minipay\":[\"mpy\"],\"application/vnd.ibm.modcap\":[\"afp\",\"listafp\",\"list3820\"],\"application/vnd.ibm.rights-management\":[\"irm\"],\"application/vnd.ibm.secure-container\":[\"sc\"],\"application/vnd.iccprofile\":[\"icc\",\"icm\"],\"application/vnd.igloader\":[\"igl\"],\"application/vnd.immervision-ivp\":[\"ivp\"],\"application/vnd.immervision-ivu\":[\"ivu\"],\"application/vnd.insors.igm\":[\"igm\"],\"application/vnd.intercon.formnet\":[\"xpw\",\"xpx\"],\"application/vnd.intergeo\":[\"i2g\"],\"application/vnd.intu.qbo\":[\"qbo\"],\"application/vnd.intu.qfx\":[\"qfx\"],\"application/vnd.ipunplugged.rcprofile\":[\"rcprofile\"],\"application/vnd.irepository.package+xml\":[\"irp\"],\"application/vnd.is-xpr\":[\"xpr\"],\"application/vnd.isac.fcs\":[\"fcs\"],\"application/vnd.jam\":[\"jam\"],\"application/vnd.jcp.javame.midlet-rms\":[\"rms\"],\"application/vnd.jisp\":[\"jisp\"],\"application/vnd.joost.joda-archive\":[\"joda\"],\"application/vnd.kahootz\":[\"ktz\",\"ktr\"],\"application/vnd.kde.karbon\":[\"karbon\"],\"application/vnd.kde.kchart\":[\"chrt\"],\"application/vnd.kde.kformula\":[\"kfo\"],\"application/vnd.kde.kivio\":[\"flw\"],\"application/vnd.kde.kontour\":[\"kon\"],\"application/vnd.kde.kpresenter\":[\"kpr\",\"kpt\"],\"application/vnd.kde.kspread\":[\"ksp\"],\"application/vnd.kde.kword\":[\"kwd\",\"kwt\"],\"application/vnd.kenameaapp\":[\"htke\"],\"application/vnd.kidspiration\":[\"kia\"],\"application/vnd.kinar\":[\"kne\",\"knp\"],\"application/vnd.koan\":[\"skp\",\"skd\",\"skt\",\"skm\"],\"application/vnd.kodak-descriptor\":[\"sse\"],\"application/vnd.las.las+xml\":[\"lasxml\"],\"application/vnd.llamagraphics.life-balance.desktop\":[\"lbd\"],\"application/vnd.llamagraphics.life-balance.exchange+xml\":[\"lbe\"],\"application/vnd.lotus-1-2-3\":[\"123\"],\"application/vnd.lotus-approach\":[\"apr\"],\"application/vnd.lotus-freelance\":[\"pre\"],\"application/vnd.lotus-notes\":[\"nsf\"],\"application/vnd.lotus-organizer\":[\"org\"],\"application/vnd.lotus-screencam\":[\"scm\"],\"application/vnd.lotus-wordpro\":[\"lwp\"],\"application/vnd.macports.portpkg\":[\"portpkg\"],\"application/vnd.mapbox-vector-tile\":[\"mvt\"],\"application/vnd.mcd\":[\"mcd\"],\"application/vnd.medcalcdata\":[\"mc1\"],\"application/vnd.mediastation.cdkey\":[\"cdkey\"],\"application/vnd.mfer\":[\"mwf\"],\"application/vnd.mfmp\":[\"mfm\"],\"application/vnd.micrografx.flo\":[\"flo\"],\"application/vnd.micrografx.igx\":[\"igx\"],\"application/vnd.mif\":[\"mif\"],\"application/vnd.mobius.daf\":[\"daf\"],\"application/vnd.mobius.dis\":[\"dis\"],\"application/vnd.mobius.mbk\":[\"mbk\"],\"application/vnd.mobius.mqy\":[\"mqy\"],\"application/vnd.mobius.msl\":[\"msl\"],\"application/vnd.mobius.plc\":[\"plc\"],\"application/vnd.mobius.txf\":[\"txf\"],\"application/vnd.mophun.application\":[\"mpn\"],\"application/vnd.mophun.certificate\":[\"mpc\"],\"application/vnd.mozilla.xul+xml\":[\"xul\"],\"application/vnd.ms-artgalry\":[\"cil\"],\"application/vnd.ms-cab-compressed\":[\"cab\"],\"application/vnd.ms-excel\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"],\"application/vnd.ms-excel.addin.macroenabled.12\":[\"xlam\"],\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":[\"xlsb\"],\"application/vnd.ms-excel.sheet.macroenabled.12\":[\"xlsm\"],\"application/vnd.ms-excel.template.macroenabled.12\":[\"xltm\"],\"application/vnd.ms-fontobject\":[\"eot\"],\"application/vnd.ms-htmlhelp\":[\"chm\"],\"application/vnd.ms-ims\":[\"ims\"],\"application/vnd.ms-lrm\":[\"lrm\"],\"application/vnd.ms-officetheme\":[\"thmx\"],\"application/vnd.ms-outlook\":[\"msg\"],\"application/vnd.ms-pki.seccat\":[\"cat\"],\"application/vnd.ms-pki.stl\":[\"*stl\"],\"application/vnd.ms-powerpoint\":[\"ppt\",\"pps\",\"pot\"],\"application/vnd.ms-powerpoint.addin.macroenabled.12\":[\"ppam\"],\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":[\"pptm\"],\"application/vnd.ms-powerpoint.slide.macroenabled.12\":[\"sldm\"],\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":[\"ppsm\"],\"application/vnd.ms-powerpoint.template.macroenabled.12\":[\"potm\"],\"application/vnd.ms-project\":[\"mpp\",\"mpt\"],\"application/vnd.ms-word.document.macroenabled.12\":[\"docm\"],\"application/vnd.ms-word.template.macroenabled.12\":[\"dotm\"],\"application/vnd.ms-works\":[\"wps\",\"wks\",\"wcm\",\"wdb\"],\"application/vnd.ms-wpl\":[\"wpl\"],\"application/vnd.ms-xpsdocument\":[\"xps\"],\"application/vnd.mseq\":[\"mseq\"],\"application/vnd.musician\":[\"mus\"],\"application/vnd.muvee.style\":[\"msty\"],\"application/vnd.mynfc\":[\"taglet\"],\"application/vnd.neurolanguage.nlu\":[\"nlu\"],\"application/vnd.nitf\":[\"ntf\",\"nitf\"],\"application/vnd.noblenet-directory\":[\"nnd\"],\"application/vnd.noblenet-sealer\":[\"nns\"],\"application/vnd.noblenet-web\":[\"nnw\"],\"application/vnd.nokia.n-gage.ac+xml\":[\"*ac\"],\"application/vnd.nokia.n-gage.data\":[\"ngdat\"],\"application/vnd.nokia.n-gage.symbian.install\":[\"n-gage\"],\"application/vnd.nokia.radio-preset\":[\"rpst\"],\"application/vnd.nokia.radio-presets\":[\"rpss\"],\"application/vnd.novadigm.edm\":[\"edm\"],\"application/vnd.novadigm.edx\":[\"edx\"],\"application/vnd.novadigm.ext\":[\"ext\"],\"application/vnd.oasis.opendocument.chart\":[\"odc\"],\"application/vnd.oasis.opendocument.chart-template\":[\"otc\"],\"application/vnd.oasis.opendocument.database\":[\"odb\"],\"application/vnd.oasis.opendocument.formula\":[\"odf\"],\"application/vnd.oasis.opendocument.formula-template\":[\"odft\"],\"application/vnd.oasis.opendocument.graphics\":[\"odg\"],\"application/vnd.oasis.opendocument.graphics-template\":[\"otg\"],\"application/vnd.oasis.opendocument.image\":[\"odi\"],\"application/vnd.oasis.opendocument.image-template\":[\"oti\"],\"application/vnd.oasis.opendocument.presentation\":[\"odp\"],\"application/vnd.oasis.opendocument.presentation-template\":[\"otp\"],\"application/vnd.oasis.opendocument.spreadsheet\":[\"ods\"],\"application/vnd.oasis.opendocument.spreadsheet-template\":[\"ots\"],\"application/vnd.oasis.opendocument.text\":[\"odt\"],\"application/vnd.oasis.opendocument.text-master\":[\"odm\"],\"application/vnd.oasis.opendocument.text-template\":[\"ott\"],\"application/vnd.oasis.opendocument.text-web\":[\"oth\"],\"application/vnd.olpc-sugar\":[\"xo\"],\"application/vnd.oma.dd2+xml\":[\"dd2\"],\"application/vnd.openblox.game+xml\":[\"obgx\"],\"application/vnd.openofficeorg.extension\":[\"oxt\"],\"application/vnd.openstreetmap.data+xml\":[\"osm\"],\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":[\"pptx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slide\":[\"sldx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":[\"ppsx\"],\"application/vnd.openxmlformats-officedocument.presentationml.template\":[\"potx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":[\"xlsx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":[\"xltx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":[\"docx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":[\"dotx\"],\"application/vnd.osgeo.mapguide.package\":[\"mgp\"],\"application/vnd.osgi.dp\":[\"dp\"],\"application/vnd.osgi.subsystem\":[\"esa\"],\"application/vnd.palm\":[\"pdb\",\"pqa\",\"oprc\"],\"application/vnd.pawaafile\":[\"paw\"],\"application/vnd.pg.format\":[\"str\"],\"application/vnd.pg.osasli\":[\"ei6\"],\"application/vnd.picsel\":[\"efif\"],\"application/vnd.pmi.widget\":[\"wg\"],\"application/vnd.pocketlearn\":[\"plf\"],\"application/vnd.powerbuilder6\":[\"pbd\"],\"application/vnd.previewsystems.box\":[\"box\"],\"application/vnd.proteus.magazine\":[\"mgz\"],\"application/vnd.publishare-delta-tree\":[\"qps\"],\"application/vnd.pvi.ptid1\":[\"ptid\"],\"application/vnd.quark.quarkxpress\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"],\"application/vnd.rar\":[\"rar\"],\"application/vnd.realvnc.bed\":[\"bed\"],\"application/vnd.recordare.musicxml\":[\"mxl\"],\"application/vnd.recordare.musicxml+xml\":[\"musicxml\"],\"application/vnd.rig.cryptonote\":[\"cryptonote\"],\"application/vnd.rim.cod\":[\"cod\"],\"application/vnd.rn-realmedia\":[\"rm\"],\"application/vnd.rn-realmedia-vbr\":[\"rmvb\"],\"application/vnd.route66.link66+xml\":[\"link66\"],\"application/vnd.sailingtracker.track\":[\"st\"],\"application/vnd.seemail\":[\"see\"],\"application/vnd.sema\":[\"sema\"],\"application/vnd.semd\":[\"semd\"],\"application/vnd.semf\":[\"semf\"],\"application/vnd.shana.informed.formdata\":[\"ifm\"],\"application/vnd.shana.informed.formtemplate\":[\"itp\"],\"application/vnd.shana.informed.interchange\":[\"iif\"],\"application/vnd.shana.informed.package\":[\"ipk\"],\"application/vnd.simtech-mindmapper\":[\"twd\",\"twds\"],\"application/vnd.smaf\":[\"mmf\"],\"application/vnd.smart.teacher\":[\"teacher\"],\"application/vnd.software602.filler.form+xml\":[\"fo\"],\"application/vnd.solent.sdkm+xml\":[\"sdkm\",\"sdkd\"],\"application/vnd.spotfire.dxp\":[\"dxp\"],\"application/vnd.spotfire.sfs\":[\"sfs\"],\"application/vnd.stardivision.calc\":[\"sdc\"],\"application/vnd.stardivision.draw\":[\"sda\"],\"application/vnd.stardivision.impress\":[\"sdd\"],\"application/vnd.stardivision.math\":[\"smf\"],\"application/vnd.stardivision.writer\":[\"sdw\",\"vor\"],\"application/vnd.stardivision.writer-global\":[\"sgl\"],\"application/vnd.stepmania.package\":[\"smzip\"],\"application/vnd.stepmania.stepchart\":[\"sm\"],\"application/vnd.sun.wadl+xml\":[\"wadl\"],\"application/vnd.sun.xml.calc\":[\"sxc\"],\"application/vnd.sun.xml.calc.template\":[\"stc\"],\"application/vnd.sun.xml.draw\":[\"sxd\"],\"application/vnd.sun.xml.draw.template\":[\"std\"],\"application/vnd.sun.xml.impress\":[\"sxi\"],\"application/vnd.sun.xml.impress.template\":[\"sti\"],\"application/vnd.sun.xml.math\":[\"sxm\"],\"application/vnd.sun.xml.writer\":[\"sxw\"],\"application/vnd.sun.xml.writer.global\":[\"sxg\"],\"application/vnd.sun.xml.writer.template\":[\"stw\"],\"application/vnd.sus-calendar\":[\"sus\",\"susp\"],\"application/vnd.svd\":[\"svd\"],\"application/vnd.symbian.install\":[\"sis\",\"sisx\"],\"application/vnd.syncml+xml\":[\"xsm\"],\"application/vnd.syncml.dm+wbxml\":[\"bdm\"],\"application/vnd.syncml.dm+xml\":[\"xdm\"],\"application/vnd.syncml.dmddf+xml\":[\"ddf\"],\"application/vnd.tao.intent-module-archive\":[\"tao\"],\"application/vnd.tcpdump.pcap\":[\"pcap\",\"cap\",\"dmp\"],\"application/vnd.tmobile-livetv\":[\"tmo\"],\"application/vnd.trid.tpt\":[\"tpt\"],\"application/vnd.triscape.mxs\":[\"mxs\"],\"application/vnd.trueapp\":[\"tra\"],\"application/vnd.ufdl\":[\"ufd\",\"ufdl\"],\"application/vnd.uiq.theme\":[\"utz\"],\"application/vnd.umajin\":[\"umj\"],\"application/vnd.unity\":[\"unityweb\"],\"application/vnd.uoml+xml\":[\"uoml\"],\"application/vnd.vcx\":[\"vcx\"],\"application/vnd.visio\":[\"vsd\",\"vst\",\"vss\",\"vsw\"],\"application/vnd.visionary\":[\"vis\"],\"application/vnd.vsf\":[\"vsf\"],\"application/vnd.wap.wbxml\":[\"wbxml\"],\"application/vnd.wap.wmlc\":[\"wmlc\"],\"application/vnd.wap.wmlscriptc\":[\"wmlsc\"],\"application/vnd.webturbo\":[\"wtb\"],\"application/vnd.wolfram.player\":[\"nbp\"],\"application/vnd.wordperfect\":[\"wpd\"],\"application/vnd.wqd\":[\"wqd\"],\"application/vnd.wt.stf\":[\"stf\"],\"application/vnd.xara\":[\"xar\"],\"application/vnd.xfdl\":[\"xfdl\"],\"application/vnd.yamaha.hv-dic\":[\"hvd\"],\"application/vnd.yamaha.hv-script\":[\"hvs\"],\"application/vnd.yamaha.hv-voice\":[\"hvp\"],\"application/vnd.yamaha.openscoreformat\":[\"osf\"],\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":[\"osfpvg\"],\"application/vnd.yamaha.smaf-audio\":[\"saf\"],\"application/vnd.yamaha.smaf-phrase\":[\"spf\"],\"application/vnd.yellowriver-custom-menu\":[\"cmp\"],\"application/vnd.zul\":[\"zir\",\"zirz\"],\"application/vnd.zzazz.deck+xml\":[\"zaz\"],\"application/x-7z-compressed\":[\"7z\"],\"application/x-abiword\":[\"abw\"],\"application/x-ace-compressed\":[\"ace\"],\"application/x-apple-diskimage\":[\"*dmg\"],\"application/x-arj\":[\"arj\"],\"application/x-authorware-bin\":[\"aab\",\"x32\",\"u32\",\"vox\"],\"application/x-authorware-map\":[\"aam\"],\"application/x-authorware-seg\":[\"aas\"],\"application/x-bcpio\":[\"bcpio\"],\"application/x-bdoc\":[\"*bdoc\"],\"application/x-bittorrent\":[\"torrent\"],\"application/x-blorb\":[\"blb\",\"blorb\"],\"application/x-bzip\":[\"bz\"],\"application/x-bzip2\":[\"bz2\",\"boz\"],\"application/x-cbr\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"],\"application/x-cdlink\":[\"vcd\"],\"application/x-cfs-compressed\":[\"cfs\"],\"application/x-chat\":[\"chat\"],\"application/x-chess-pgn\":[\"pgn\"],\"application/x-chrome-extension\":[\"crx\"],\"application/x-cocoa\":[\"cco\"],\"application/x-conference\":[\"nsc\"],\"application/x-cpio\":[\"cpio\"],\"application/x-csh\":[\"csh\"],\"application/x-debian-package\":[\"*deb\",\"udeb\"],\"application/x-dgc-compressed\":[\"dgc\"],\"application/x-director\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"],\"application/x-doom\":[\"wad\"],\"application/x-dtbncx+xml\":[\"ncx\"],\"application/x-dtbook+xml\":[\"dtb\"],\"application/x-dtbresource+xml\":[\"res\"],\"application/x-dvi\":[\"dvi\"],\"application/x-envoy\":[\"evy\"],\"application/x-eva\":[\"eva\"],\"application/x-font-bdf\":[\"bdf\"],\"application/x-font-ghostscript\":[\"gsf\"],\"application/x-font-linux-psf\":[\"psf\"],\"application/x-font-pcf\":[\"pcf\"],\"application/x-font-snf\":[\"snf\"],\"application/x-font-type1\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"],\"application/x-freearc\":[\"arc\"],\"application/x-futuresplash\":[\"spl\"],\"application/x-gca-compressed\":[\"gca\"],\"application/x-glulx\":[\"ulx\"],\"application/x-gnumeric\":[\"gnumeric\"],\"application/x-gramps-xml\":[\"gramps\"],\"application/x-gtar\":[\"gtar\"],\"application/x-hdf\":[\"hdf\"],\"application/x-httpd-php\":[\"php\"],\"application/x-install-instructions\":[\"install\"],\"application/x-iso9660-image\":[\"*iso\"],\"application/x-iwork-keynote-sffkey\":[\"*key\"],\"application/x-iwork-numbers-sffnumbers\":[\"*numbers\"],\"application/x-iwork-pages-sffpages\":[\"*pages\"],\"application/x-java-archive-diff\":[\"jardiff\"],\"application/x-java-jnlp-file\":[\"jnlp\"],\"application/x-keepass2\":[\"kdbx\"],\"application/x-latex\":[\"latex\"],\"application/x-lua-bytecode\":[\"luac\"],\"application/x-lzh-compressed\":[\"lzh\",\"lha\"],\"application/x-makeself\":[\"run\"],\"application/x-mie\":[\"mie\"],\"application/x-mobipocket-ebook\":[\"prc\",\"mobi\"],\"application/x-ms-application\":[\"application\"],\"application/x-ms-shortcut\":[\"lnk\"],\"application/x-ms-wmd\":[\"wmd\"],\"application/x-ms-wmz\":[\"wmz\"],\"application/x-ms-xbap\":[\"xbap\"],\"application/x-msaccess\":[\"mdb\"],\"application/x-msbinder\":[\"obd\"],\"application/x-mscardfile\":[\"crd\"],\"application/x-msclip\":[\"clp\"],\"application/x-msdos-program\":[\"*exe\"],\"application/x-msdownload\":[\"*exe\",\"*dll\",\"com\",\"bat\",\"*msi\"],\"application/x-msmediaview\":[\"mvb\",\"m13\",\"m14\"],\"application/x-msmetafile\":[\"*wmf\",\"*wmz\",\"*emf\",\"emz\"],\"application/x-msmoney\":[\"mny\"],\"application/x-mspublisher\":[\"pub\"],\"application/x-msschedule\":[\"scd\"],\"application/x-msterminal\":[\"trm\"],\"application/x-mswrite\":[\"wri\"],\"application/x-netcdf\":[\"nc\",\"cdf\"],\"application/x-ns-proxy-autoconfig\":[\"pac\"],\"application/x-nzb\":[\"nzb\"],\"application/x-perl\":[\"pl\",\"pm\"],\"application/x-pilot\":[\"*prc\",\"*pdb\"],\"application/x-pkcs12\":[\"p12\",\"pfx\"],\"application/x-pkcs7-certificates\":[\"p7b\",\"spc\"],\"application/x-pkcs7-certreqresp\":[\"p7r\"],\"application/x-rar-compressed\":[\"*rar\"],\"application/x-redhat-package-manager\":[\"rpm\"],\"application/x-research-info-systems\":[\"ris\"],\"application/x-sea\":[\"sea\"],\"application/x-sh\":[\"sh\"],\"application/x-shar\":[\"shar\"],\"application/x-shockwave-flash\":[\"swf\"],\"application/x-silverlight-app\":[\"xap\"],\"application/x-sql\":[\"sql\"],\"application/x-stuffit\":[\"sit\"],\"application/x-stuffitx\":[\"sitx\"],\"application/x-subrip\":[\"srt\"],\"application/x-sv4cpio\":[\"sv4cpio\"],\"application/x-sv4crc\":[\"sv4crc\"],\"application/x-t3vm-image\":[\"t3\"],\"application/x-tads\":[\"gam\"],\"application/x-tar\":[\"tar\"],\"application/x-tcl\":[\"tcl\",\"tk\"],\"application/x-tex\":[\"tex\"],\"application/x-tex-tfm\":[\"tfm\"],\"application/x-texinfo\":[\"texinfo\",\"texi\"],\"application/x-tgif\":[\"*obj\"],\"application/x-ustar\":[\"ustar\"],\"application/x-virtualbox-hdd\":[\"hdd\"],\"application/x-virtualbox-ova\":[\"ova\"],\"application/x-virtualbox-ovf\":[\"ovf\"],\"application/x-virtualbox-vbox\":[\"vbox\"],\"application/x-virtualbox-vbox-extpack\":[\"vbox-extpack\"],\"application/x-virtualbox-vdi\":[\"vdi\"],\"application/x-virtualbox-vhd\":[\"vhd\"],\"application/x-virtualbox-vmdk\":[\"vmdk\"],\"application/x-wais-source\":[\"src\"],\"application/x-web-app-manifest+json\":[\"webapp\"],\"application/x-x509-ca-cert\":[\"der\",\"crt\",\"pem\"],\"application/x-xfig\":[\"fig\"],\"application/x-xliff+xml\":[\"*xlf\"],\"application/x-xpinstall\":[\"xpi\"],\"application/x-xz\":[\"xz\"],\"application/x-zmachine\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"],\"audio/vnd.dece.audio\":[\"uva\",\"uvva\"],\"audio/vnd.digital-winds\":[\"eol\"],\"audio/vnd.dra\":[\"dra\"],\"audio/vnd.dts\":[\"dts\"],\"audio/vnd.dts.hd\":[\"dtshd\"],\"audio/vnd.lucent.voice\":[\"lvp\"],\"audio/vnd.ms-playready.media.pya\":[\"pya\"],\"audio/vnd.nuera.ecelp4800\":[\"ecelp4800\"],\"audio/vnd.nuera.ecelp7470\":[\"ecelp7470\"],\"audio/vnd.nuera.ecelp9600\":[\"ecelp9600\"],\"audio/vnd.rip\":[\"rip\"],\"audio/x-aac\":[\"aac\"],\"audio/x-aiff\":[\"aif\",\"aiff\",\"aifc\"],\"audio/x-caf\":[\"caf\"],\"audio/x-flac\":[\"flac\"],\"audio/x-m4a\":[\"*m4a\"],\"audio/x-matroska\":[\"mka\"],\"audio/x-mpegurl\":[\"m3u\"],\"audio/x-ms-wax\":[\"wax\"],\"audio/x-ms-wma\":[\"wma\"],\"audio/x-pn-realaudio\":[\"ram\",\"ra\"],\"audio/x-pn-realaudio-plugin\":[\"rmp\"],\"audio/x-realaudio\":[\"*ra\"],\"audio/x-wav\":[\"*wav\"],\"chemical/x-cdx\":[\"cdx\"],\"chemical/x-cif\":[\"cif\"],\"chemical/x-cmdf\":[\"cmdf\"],\"chemical/x-cml\":[\"cml\"],\"chemical/x-csml\":[\"csml\"],\"chemical/x-xyz\":[\"xyz\"],\"image/prs.btif\":[\"btif\"],\"image/prs.pti\":[\"pti\"],\"image/vnd.adobe.photoshop\":[\"psd\"],\"image/vnd.airzip.accelerator.azv\":[\"azv\"],\"image/vnd.dece.graphic\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"],\"image/vnd.djvu\":[\"djvu\",\"djv\"],\"image/vnd.dvb.subtitle\":[\"*sub\"],\"image/vnd.dwg\":[\"dwg\"],\"image/vnd.dxf\":[\"dxf\"],\"image/vnd.fastbidsheet\":[\"fbs\"],\"image/vnd.fpx\":[\"fpx\"],\"image/vnd.fst\":[\"fst\"],\"image/vnd.fujixerox.edmics-mmr\":[\"mmr\"],\"image/vnd.fujixerox.edmics-rlc\":[\"rlc\"],\"image/vnd.microsoft.icon\":[\"ico\"],\"image/vnd.ms-dds\":[\"dds\"],\"image/vnd.ms-modi\":[\"mdi\"],\"image/vnd.ms-photo\":[\"wdp\"],\"image/vnd.net-fpx\":[\"npx\"],\"image/vnd.pco.b16\":[\"b16\"],\"image/vnd.tencent.tap\":[\"tap\"],\"image/vnd.valve.source.texture\":[\"vtf\"],\"image/vnd.wap.wbmp\":[\"wbmp\"],\"image/vnd.xiff\":[\"xif\"],\"image/vnd.zbrush.pcx\":[\"pcx\"],\"image/x-3ds\":[\"3ds\"],\"image/x-cmu-raster\":[\"ras\"],\"image/x-cmx\":[\"cmx\"],\"image/x-freehand\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"],\"image/x-icon\":[\"*ico\"],\"image/x-jng\":[\"jng\"],\"image/x-mrsid-image\":[\"sid\"],\"image/x-ms-bmp\":[\"*bmp\"],\"image/x-pcx\":[\"*pcx\"],\"image/x-pict\":[\"pic\",\"pct\"],\"image/x-portable-anymap\":[\"pnm\"],\"image/x-portable-bitmap\":[\"pbm\"],\"image/x-portable-graymap\":[\"pgm\"],\"image/x-portable-pixmap\":[\"ppm\"],\"image/x-rgb\":[\"rgb\"],\"image/x-tga\":[\"tga\"],\"image/x-xbitmap\":[\"xbm\"],\"image/x-xpixmap\":[\"xpm\"],\"image/x-xwindowdump\":[\"xwd\"],\"message/vnd.wfa.wsc\":[\"wsc\"],\"model/vnd.collada+xml\":[\"dae\"],\"model/vnd.dwf\":[\"dwf\"],\"model/vnd.gdl\":[\"gdl\"],\"model/vnd.gtw\":[\"gtw\"],\"model/vnd.mts\":[\"mts\"],\"model/vnd.opengex\":[\"ogex\"],\"model/vnd.parasolid.transmit.binary\":[\"x_b\"],\"model/vnd.parasolid.transmit.text\":[\"x_t\"],\"model/vnd.sap.vds\":[\"vds\"],\"model/vnd.usdz+zip\":[\"usdz\"],\"model/vnd.valve.source.compiled-map\":[\"bsp\"],\"model/vnd.vtu\":[\"vtu\"],\"text/prs.lines.tag\":[\"dsc\"],\"text/vnd.curl\":[\"curl\"],\"text/vnd.curl.dcurl\":[\"dcurl\"],\"text/vnd.curl.mcurl\":[\"mcurl\"],\"text/vnd.curl.scurl\":[\"scurl\"],\"text/vnd.dvb.subtitle\":[\"sub\"],\"text/vnd.fly\":[\"fly\"],\"text/vnd.fmi.flexstor\":[\"flx\"],\"text/vnd.graphviz\":[\"gv\"],\"text/vnd.in3d.3dml\":[\"3dml\"],\"text/vnd.in3d.spot\":[\"spot\"],\"text/vnd.sun.j2me.app-descriptor\":[\"jad\"],\"text/vnd.wap.wml\":[\"wml\"],\"text/vnd.wap.wmlscript\":[\"wmls\"],\"text/x-asm\":[\"s\",\"asm\"],\"text/x-c\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"],\"text/x-component\":[\"htc\"],\"text/x-fortran\":[\"f\",\"for\",\"f77\",\"f90\"],\"text/x-handlebars-template\":[\"hbs\"],\"text/x-java-source\":[\"java\"],\"text/x-lua\":[\"lua\"],\"text/x-markdown\":[\"mkd\"],\"text/x-nfo\":[\"nfo\"],\"text/x-opml\":[\"opml\"],\"text/x-org\":[\"*org\"],\"text/x-pascal\":[\"p\",\"pas\"],\"text/x-processing\":[\"pde\"],\"text/x-sass\":[\"sass\"],\"text/x-scss\":[\"scss\"],\"text/x-setext\":[\"etx\"],\"text/x-sfv\":[\"sfv\"],\"text/x-suse-ymp\":[\"ymp\"],\"text/x-uuencode\":[\"uu\"],\"text/x-vcalendar\":[\"vcs\"],\"text/x-vcard\":[\"vcf\"],\"video/vnd.dece.hd\":[\"uvh\",\"uvvh\"],\"video/vnd.dece.mobile\":[\"uvm\",\"uvvm\"],\"video/vnd.dece.pd\":[\"uvp\",\"uvvp\"],\"video/vnd.dece.sd\":[\"uvs\",\"uvvs\"],\"video/vnd.dece.video\":[\"uvv\",\"uvvv\"],\"video/vnd.dvb.file\":[\"dvb\"],\"video/vnd.fvt\":[\"fvt\"],\"video/vnd.mpegurl\":[\"mxu\",\"m4u\"],\"video/vnd.ms-playready.media.pyv\":[\"pyv\"],\"video/vnd.uvvu.mp4\":[\"uvu\",\"uvvu\"],\"video/vnd.vivo\":[\"viv\"],\"video/x-f4v\":[\"f4v\"],\"video/x-fli\":[\"fli\"],\"video/x-flv\":[\"flv\"],\"video/x-m4v\":[\"m4v\"],\"video/x-matroska\":[\"mkv\",\"mk3d\",\"mks\"],\"video/x-mng\":[\"mng\"],\"video/x-ms-asf\":[\"asf\",\"asx\"],\"video/x-ms-vob\":[\"vob\"],\"video/x-ms-wm\":[\"wm\"],\"video/x-ms-wmv\":[\"wmv\"],\"video/x-ms-wmx\":[\"wmx\"],\"video/x-ms-wvx\":[\"wvx\"],\"video/x-msvideo\":[\"avi\"],\"video/x-sgi-movie\":[\"movie\"],\"video/x-smv\":[\"smv\"],\"x-conference/x-cooltalk\":[\"ice\"]};","module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"es\",\"ecma\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/express\":[\"exp\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/trig\":[\"trig\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/step+xml\":[\"stpx\"],\"model/step+zip\":[\"stpz\"],\"model/step-xml+zip\":[\"stpxz\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./lib/index.ts\");\n",""],"names":[],"sourceRoot":""}