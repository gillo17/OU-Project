export declare namespace SharedContracts {
    interface IPaginationModelContract {
        continuation_token: string | null;
        next_page: string | null;
    }
    interface IReferenceObjectContract {
        id?: string;
        codename?: string;
        external_id?: string;
    }
    type UserReferenceContract = Required<Pick<UserReferenceDataContract, 'id'>>;
    type UserReferenceDataContract = {
        id: string;
        email?: never;
    } | {
        id?: never;
        email: string;
    };
    interface ICodenameIdReferenceContract {
        id?: string;
        codename?: string;
    }
    interface IIdReferenceContract {
        id: string;
    }
    interface IValidationErrorContract {
        message: string;
    }
    interface IContentManagementError {
        message: string;
        request_id: string;
        error_code: number;
        validation_errors?: IValidationErrorContract[];
    }
    interface IResponseWorkflowStepsReferenceContract {
        workflow_identifier: IIdReferenceContract;
        step_identifier: IIdReferenceContract;
    }
    interface IRequestWorkflowStepsReferenceContract {
        workflow_identifier: IReferenceObjectContract;
        step_identifiers: IReferenceObjectContract[];
    }
    interface ITaxonomyGroupReferenceContract {
        taxonomy_identifier: IReferenceObjectContract;
        term_identifiers?: IReferenceObjectContract[];
        include_uncategorized?: boolean;
    }
    interface IEmptyResponseContract {
    }
}
