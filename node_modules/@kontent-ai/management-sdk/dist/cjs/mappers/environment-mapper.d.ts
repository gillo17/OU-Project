import { IResponse } from '@kontent-ai/core-sdk';
import { EnvironmentModels } from '../models';
import { EnvironmentResponses } from '../responses';
import { EnvironmentContracts } from '../contracts';
import { BaseMapper } from './base-mapper';
export declare class EnvironmentMapper extends BaseMapper {
    mapGetEnvironmentCloningStateResponse(response: IResponse<EnvironmentContracts.IEnvironmentCloningStateResponseContract>): EnvironmentResponses.GetCloningStateResponse;
    mapModifyEnvironmentResponse(response: IResponse<EnvironmentContracts.IModifyEnvironmentResponseContract>): EnvironmentResponses.ModifyEnvironmentResponse;
    mapCloneEnvironmentResponse(response: IResponse<EnvironmentContracts.ICloneEnvironmentResponseContract>): EnvironmentResponses.CloneEnvironmentResponse;
    mapProjectValidationIssuesListResponse(response: IResponse<EnvironmentContracts.IEnvironmentValidationListResponseContract>): EnvironmentResponses.EnvironmentValidationIssuesListResponse;
    mapStartEnvironmentValidationResponse(response: IResponse<EnvironmentContracts.IStartEnvironmentValidationResponseContract>): EnvironmentResponses.StartEnvironmentValidationResponse;
    mapCheckEnvironmentValidationResponse(response: IResponse<EnvironmentContracts.ICheckEnvironmentValidationResponseContract>): EnvironmentResponses.CheckEnvironmentValidationResponse;
    mapEnvironmentInformationResponse(response: IResponse<EnvironmentContracts.IEnvironmentInformationResponseContract>): EnvironmentResponses.EnvironmentInformationResponse;
    mapProjectModel(raw: EnvironmentContracts.IEnvironmentReportModelContract): EnvironmentModels.EnvironmentReportModel;
    mapTypeModel(raw: EnvironmentContracts.IEnvironmentTypeContract): EnvironmentModels.EnvironmentTypeModel;
    mapItemModel(raw: EnvironmentContracts.IEnvironmentVariantContentItemContract): EnvironmentModels.EnvironmentVariantContentItemModel;
    mapLanguageModel(raw: EnvironmentContracts.IEnvironmentVariantLanguageContract): EnvironmentModels.EnvironmentVariantLanguageModel;
    mapIssueModel(raw: EnvironmentContracts.IEnvironmentIssueContract): EnvironmentModels.EnvironmentIssueModel;
    mapTypeIssue(raw: EnvironmentContracts.IEnvironmentTypeIssueContract): EnvironmentModels.EnvironmentTypeIssueModel;
    mapVariantIssue(raw: EnvironmentContracts.IEnvironmentVariantIssueContract): EnvironmentModels.EnvironmentVariantIssueModel;
    mapVariantElementModel(raw: EnvironmentContracts.IEnvironmentVariantElementContract): EnvironmentModels.EnvironmentVariantElementModel;
    mapEnvironmentValidationIssue(raw: EnvironmentContracts.IEnvironmentValidationIssueContract): EnvironmentModels.EnvironmentValidationVariantIssueModel | EnvironmentModels.EnvironmentValidationTypeIssueModel;
}
export declare const environmentMapper: EnvironmentMapper;
