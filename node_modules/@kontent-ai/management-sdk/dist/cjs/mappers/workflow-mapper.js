"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.workflowMapper = exports.WorkflowMapper = void 0;
const models_1 = require("../models");
const responses_1 = require("../responses");
const base_mapper_1 = require("./base-mapper");
class WorkflowMapper extends base_mapper_1.BaseMapper {
    mapListWorkflowsResponse(response) {
        const workflows = response.data.map((m) => this.mapWorkflow(m));
        return new responses_1.WorkflowResponses.ListWorkflowsResponse(super.mapResponseDebug(response), response.data, workflows);
    }
    mapAddWorkflowResponse(response) {
        return new responses_1.WorkflowResponses.AddWorkflowResponse(super.mapResponseDebug(response), response.data, this.mapWorkflow(response.data));
    }
    mapUpdateWorkflowResponse(response) {
        return new responses_1.WorkflowResponses.UpdateWorkflowResponse(super.mapResponseDebug(response), response.data, this.mapWorkflow(response.data));
    }
    mapWorkflowStep(rawStep) {
        return new models_1.WorkflowModels.WorkflowStep({
            id: rawStep.id,
            name: rawStep.name,
            codename: rawStep.codename,
            transitionsTo: rawStep.transitions_to,
            _raw: rawStep
        });
    }
    mapWorkflow(raw) {
        return new models_1.WorkflowModels.Workflow({
            id: raw.id,
            name: raw.name,
            codename: raw.codename,
            archivedStep: raw.archived_step,
            publishedStep: raw.published_step,
            scheduledStep: raw.scheduled_step,
            scopes: raw.scopes,
            steps: raw.steps,
            _raw: raw
        });
    }
}
exports.WorkflowMapper = WorkflowMapper;
exports.workflowMapper = new WorkflowMapper();
//# sourceMappingURL=workflow-mapper.js.map