"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetResponses = void 0;
const base_responses_1 = require("../base-responses");
var AssetResponses;
(function (AssetResponses) {
    class AssetsListResponse extends base_responses_1.BaseResponses.BaseContentManagementListResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.AssetsListResponse = AssetsListResponse;
    class AssetsListAllResponse extends base_responses_1.BaseResponses.ContentManagementListAllResponse {
        constructor(data) {
            super(data);
        }
    }
    AssetResponses.AssetsListAllResponse = AssetsListAllResponse;
    class ViewAssetResponse extends base_responses_1.BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.ViewAssetResponse = ViewAssetResponse;
    class UploadBinaryFileResponse extends base_responses_1.BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.UploadBinaryFileResponse = UploadBinaryFileResponse;
    class AddAssetResponse extends base_responses_1.BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.AddAssetResponse = AddAssetResponse;
    class UpdateAssetResponse extends base_responses_1.BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.UpdateAssetResponse = UpdateAssetResponse;
    class UpsertAssertResponse extends base_responses_1.BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    AssetResponses.UpsertAssertResponse = UpsertAssertResponse;
})(AssetResponses || (exports.AssetResponses = AssetResponses = {}));
//# sourceMappingURL=asset-responses.js.map