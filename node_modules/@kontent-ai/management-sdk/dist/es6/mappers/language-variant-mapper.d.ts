import { IResponse } from '@kontent-ai/core-sdk';
import { LanguageVariantContracts } from '../contracts';
import { LanguageVariantModels } from '../models';
import { LanguageVariantResponses } from '../responses';
import { BaseMapper } from './base-mapper';
export declare class LanguageVariantMapper extends BaseMapper {
    mapUpsertLanguageVariantResponse(response: IResponse<LanguageVariantContracts.IUpsertLanguageVariantResponseContract>): LanguageVariantResponses.UpsertLanguageVariantResponse;
    mapViewLanguageVariantResponse(response: IResponse<LanguageVariantContracts.IViewLanguageVariantResponseContract>): LanguageVariantResponses.ViewLanguageVariantResponse;
    mapLanguageVariantsOfItemResponse(response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[]>): LanguageVariantResponses.ListLanguageVariantsOfItemResponse;
    mapLanguageVariantsByCollectionResponse(response: IResponse<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract>): LanguageVariantResponses.ListLanguageVariantsByCollectionResponse;
    mapFilterLanguageVariantsResponse(response: IResponse<LanguageVariantContracts.IFilterLanguageVariantsResponseContract>): LanguageVariantResponses.FilterLanguageVariantsResponse;
    mapLanguageVariantsBySpaceResponse(response: IResponse<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract>): LanguageVariantResponses.ListLanguageVariantsBySpaceResponse;
    mapLanguageVariantsOfContentTypeResponse(response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract>): LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse;
    mapLanguageVariantsOfContentTypeWithComponentsResponse(response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract>): LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse;
    mapLanguageVariantWithComponents(rawVariant: LanguageVariantContracts.ILanguageVariantModelsContract): LanguageVariantModels.ContentItemLanguageWithComponentsVariant;
    mapLanguageVariant(rawVariant: LanguageVariantContracts.ILanguageVariantModelContract): LanguageVariantModels.ContentItemLanguageVariant;
    private mapDueDate;
    private mapSchedule;
}
export declare const languageVariantMapper: LanguageVariantMapper;
