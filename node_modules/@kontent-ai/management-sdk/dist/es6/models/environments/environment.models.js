export var EnvironmentModels;
(function (EnvironmentModels) {
    class EnvironmentReportModel {
        constructor(id, name) {
            this.id = id;
            this.name = name;
        }
    }
    EnvironmentModels.EnvironmentReportModel = EnvironmentReportModel;
    class EnvironmentValidationVariantIssueModel {
        constructor(item, language, issues) {
            this.item = item;
            this.language = language;
            this.issues = issues;
            this.issue_type = 'variant_issue';
        }
    }
    EnvironmentModels.EnvironmentValidationVariantIssueModel = EnvironmentValidationVariantIssueModel;
    class EnvironmentValidationTypeIssueModel {
        constructor(type, issues) {
            this.type = type;
            this.issues = issues;
            this.issue_type = 'type_issue';
        }
    }
    EnvironmentModels.EnvironmentValidationTypeIssueModel = EnvironmentValidationTypeIssueModel;
    class EnvironmentInformationModel {
        constructor(id, name, environment) {
            this.id = id;
            this.name = name;
            this.environment = environment;
        }
    }
    EnvironmentModels.EnvironmentInformationModel = EnvironmentInformationModel;
    class EnvironmentVariantContentItemModel {
        constructor(id, name, codename) {
            this.id = id;
            this.name = name;
            this.codename = codename;
        }
    }
    EnvironmentModels.EnvironmentVariantContentItemModel = EnvironmentVariantContentItemModel;
    class EnvironmentVariantLanguageModel {
        constructor(id, name, codename) {
            this.id = id;
            this.name = name;
            this.codename = codename;
        }
    }
    EnvironmentModels.EnvironmentVariantLanguageModel = EnvironmentVariantLanguageModel;
    class EnvironmentVariantElementModel {
        constructor(id, name, codename) {
            this.id = id;
            this.name = name;
            this.codename = codename;
        }
    }
    EnvironmentModels.EnvironmentVariantElementModel = EnvironmentVariantElementModel;
    class EnvironmentTypeIssueModel {
        constructor(type, issues) {
            this.type = type;
            this.issues = issues;
        }
    }
    EnvironmentModels.EnvironmentTypeIssueModel = EnvironmentTypeIssueModel;
    class EnvironmentTypeModel {
        constructor(id, name, codename) {
            this.id = id;
            this.name = name;
            this.codename = codename;
        }
    }
    EnvironmentModels.EnvironmentTypeModel = EnvironmentTypeModel;
    class EnvironmentIssueModel {
        constructor(element, messages) {
            this.element = element;
            this.messages = messages;
        }
    }
    EnvironmentModels.EnvironmentIssueModel = EnvironmentIssueModel;
    class EnvironmentVariantIssueModel {
        constructor(item, language, issues) {
            this.item = item;
            this.language = language;
            this.issues = issues;
        }
    }
    EnvironmentModels.EnvironmentVariantIssueModel = EnvironmentVariantIssueModel;
    class EnvironmentCloningStateModel {
        constructor(cloningState) {
            this.cloningState = cloningState;
        }
    }
    EnvironmentModels.EnvironmentCloningStateModel = EnvironmentCloningStateModel;
    class EnvironmentModel {
        constructor(id, name, isProduction) {
            this.id = id;
            this.name = name;
            this.isProduction = isProduction;
        }
    }
    EnvironmentModels.EnvironmentModel = EnvironmentModel;
    class CloneEnvironmentModel {
        constructor(id, managementApiKey, deliveryPreviewApiKey, securedDeliveryApiKey) {
            this.id = id;
            this.managementApiKey = managementApiKey;
            this.deliveryPreviewApiKey = deliveryPreviewApiKey;
            this.securedDeliveryApiKey = securedDeliveryApiKey;
        }
    }
    EnvironmentModels.CloneEnvironmentModel = CloneEnvironmentModel;
})(EnvironmentModels || (EnvironmentModels = {}));
//# sourceMappingURL=environment.models.js.map