export var WebhookModels;
(function (WebhookModels) {
    class WebhookDeliveryTriggersContentType {
        constructor(data) {
            this.enabled = data.enabled;
            this.actions = data.actions;
            this.filters = data.filters;
        }
    }
    WebhookModels.WebhookDeliveryTriggersContentType = WebhookDeliveryTriggersContentType;
    class WebhookDeliveryTriggersAsset {
        constructor(data) {
            this.enabled = data.enabled;
            this.actions = data.actions;
        }
    }
    WebhookModels.WebhookDeliveryTriggersAsset = WebhookDeliveryTriggersAsset;
    class WebhookDeliveryTriggersTaxonomy {
        constructor(data) {
            this.enabled = data.enabled;
            this.actions = data.actions;
            this.filters = data.filters;
        }
    }
    WebhookModels.WebhookDeliveryTriggersTaxonomy = WebhookDeliveryTriggersTaxonomy;
    class WebhookDeliveryTriggersLanguage {
        constructor(data) {
            this.enabled = data.enabled;
            this.actions = data.actions;
            this.filters = data.filters;
        }
    }
    WebhookModels.WebhookDeliveryTriggersLanguage = WebhookDeliveryTriggersLanguage;
    class WebhookDeliveryTriggersContentItem {
        constructor(data) {
            this.enabled = data.enabled;
            this.actions = data.actions;
            this.filters = data.filters;
        }
    }
    WebhookModels.WebhookDeliveryTriggersContentItem = WebhookDeliveryTriggersContentItem;
    class WebhookTransitionsTo {
        constructor(data) {
            this.id = data.id;
        }
    }
    WebhookModels.WebhookTransitionsTo = WebhookTransitionsTo;
    class LegacyWebhookWorkflowStepChanges {
        constructor(data) {
            this.type = data.type;
            this.transitionsTo = data.transitionsTo;
        }
    }
    WebhookModels.LegacyWebhookWorkflowStepChanges = LegacyWebhookWorkflowStepChanges;
    class LegacyWebhookDeliveryApiContentChanges {
        constructor(data) {
            this.type = data.type;
            this.operations = data.operations;
        }
    }
    WebhookModels.LegacyWebhookDeliveryApiContentChanges = LegacyWebhookDeliveryApiContentChanges;
    class LegacyWebhookPreviewDeliveryApiContentChanges {
        constructor(data) {
            this.type = data.type;
            this.operations = data.operations;
        }
    }
    WebhookModels.LegacyWebhookPreviewDeliveryApiContentChanges = LegacyWebhookPreviewDeliveryApiContentChanges;
    class LegacyWebhookManagementApiContentChanges {
        constructor(data) {
            this.type = data.type;
            this.operations = data.operations;
        }
    }
    WebhookModels.LegacyWebhookManagementApiContentChanges = LegacyWebhookManagementApiContentChanges;
    class Webhook {
        constructor(data) {
            this.id = data.id;
            this.name = data.name;
            this.secret = data.secret;
            this.url = data.url;
            this.lastModified = data.lastModified;
            this.healthStatus = data.healthStatus;
            this.deliveryTriggers = data.deliveryTriggers;
            this.enabled = data.enabled;
            this.headers = data.headers;
            this._raw = data._raw;
        }
    }
    WebhookModels.Webhook = Webhook;
    class LegacyWebhook {
        constructor(data) {
            this.id = data.id;
            this.name = data.name;
            this.secret = data.secret;
            this.url = data.url;
            this.triggers = data.triggers;
            this.lastModified = data.lastModified;
            this.healthStatus = data.healthStatus;
        }
    }
    WebhookModels.LegacyWebhook = LegacyWebhook;
})(WebhookModels || (WebhookModels = {}));
//# sourceMappingURL=webhook.models.js.map