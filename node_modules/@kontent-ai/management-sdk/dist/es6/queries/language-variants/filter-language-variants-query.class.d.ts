import { LanguageVariantModels } from '../../models';
import { IManagementClientConfig } from '../../config';
import { LanguageVariantResponses } from '../../responses';
import { ManagementQueryService } from '../../services';
import { BaseListingQuery } from '../base-listing-query';
export declare class FilterLanguageVariantsQuery extends BaseListingQuery<LanguageVariantResponses.FilterLanguageVariantsResponse, LanguageVariantResponses.ListAllFilterLanguageVariantsResponse> {
    protected config: IManagementClientConfig;
    protected queryService: ManagementQueryService;
    protected data: LanguageVariantModels.IFilterLanguageVariantsData;
    constructor(config: IManagementClientConfig, queryService: ManagementQueryService, data: LanguageVariantModels.IFilterLanguageVariantsData);
    toPromise(): Promise<LanguageVariantResponses.FilterLanguageVariantsResponse>;
    protected getAction(): string;
    protected allResponseFactory(items: any[], responses: LanguageVariantResponses.FilterLanguageVariantsResponse[]): LanguageVariantResponses.ListAllFilterLanguageVariantsResponse;
}
