import { BaseResponses } from '../base-responses';
export var EnvironmentResponses;
(function (EnvironmentResponses) {
    class EnvironmentValidationIssuesListResponse extends BaseResponses.BaseContentManagementListResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.EnvironmentValidationIssuesListResponse = EnvironmentValidationIssuesListResponse;
    class EnvironmentValidationIssuesListAllResponse extends BaseResponses.ContentManagementListAllResponse {
        constructor(data) {
            super(data);
        }
    }
    EnvironmentResponses.EnvironmentValidationIssuesListAllResponse = EnvironmentValidationIssuesListAllResponse;
    class StartEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.StartEnvironmentValidationResponse = StartEnvironmentValidationResponse;
    class CheckEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.CheckEnvironmentValidationResponse = CheckEnvironmentValidationResponse;
    class EnvironmentInformationResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.EnvironmentInformationResponse = EnvironmentInformationResponse;
    class GetCloningStateResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.GetCloningStateResponse = GetCloningStateResponse;
    class ModifyEnvironmentResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.ModifyEnvironmentResponse = ModifyEnvironmentResponse;
    class CloneEnvironmentResponse extends BaseResponses.BaseContentManagementResponse {
        constructor(debug, rawData, data) {
            super(debug, rawData, data);
        }
    }
    EnvironmentResponses.CloneEnvironmentResponse = CloneEnvironmentResponse;
})(EnvironmentResponses || (EnvironmentResponses = {}));
//# sourceMappingURL=environment-responses.js.map