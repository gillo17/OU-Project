export declare namespace SharedModels {
    interface IBaseModel<TContract> {
        _raw: TContract;
    }
    class Pagination {
        continuationToken: string | null;
        nextPage: string | null;
        constructor(continuationToken: string | null, nextPage: string | null);
    }
    class ValidationError {
        message: string;
        constructor(data: {
            message: string;
        });
    }
    class ContentManagementBaseKontentError {
        validationErrors: ValidationError[];
        message: string;
        requestId: string;
        errorCode: number;
        originalError: any;
        constructor(data: {
            message: string;
            requestId: string;
            errorCode: number;
            originalError: any;
            validationErrors: ValidationError[];
        });
    }
    interface IReferenceObject {
        id?: string;
        codename?: string;
        externalId?: string;
    }
    interface IIdRefenceObject {
        id: string;
    }
    class ReferenceObject implements IReferenceObject {
        id?: string;
        codename?: string;
        externalId?: string;
        constructor(data: {
            id?: string;
            codename?: string;
            externalId?: string;
        });
    }
}
