import { LanguageVariantContracts } from '../../contracts';
import { LanguageVariantModels, SharedModels } from '../../models';
import { BaseResponses } from '../base-responses';
export declare namespace LanguageVariantResponses {
    class FilterLanguageVariantsResponse extends BaseResponses.BaseContentManagementListResponse<LanguageVariantContracts.IFilterLanguageVariantsResponseContract, LanguageVariantContracts.IFilterLanguageVariantsResponseDataContract> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IFilterLanguageVariantsResponseContract, data: {
            items: LanguageVariantContracts.IFilterLanguageVariantsResponseDataContract[];
            pagination: SharedModels.Pagination;
        });
    }
    class ListAllFilterLanguageVariantsResponse extends BaseResponses.ContentManagementListAllResponse<FilterLanguageVariantsResponse, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            responses: FilterLanguageVariantsResponse[];
        });
    }
    class ListLanguageVariantsOfItemResponse extends BaseResponses.BaseContentManagementResponse<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[], {
        items: LanguageVariantModels.ContentItemLanguageVariant[];
    }> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[], data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
        });
    }
    class ListLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.BaseContentManagementListResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract, LanguageVariantModels.ContentItemLanguageWithComponentsVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract, data: {
            items: LanguageVariantModels.ContentItemLanguageWithComponentsVariant[];
            pagination: SharedModels.Pagination;
        });
    }
    class ListAllLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeWithComponentsResponse, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            responses: ListLanguageVariantsOfContentTypeWithComponentsResponse[];
        });
    }
    class ListLanguageVariantsOfContentTypeResponse extends BaseResponses.BaseContentManagementListResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract, data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            pagination: SharedModels.Pagination;
        });
    }
    class ListLanguageVariantsByCollectionResponse extends BaseResponses.BaseContentManagementListResponse<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract, data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            pagination: SharedModels.Pagination;
        });
    }
    class ListLanguageVariantsBySpaceResponse extends BaseResponses.BaseContentManagementListResponse<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract, data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            pagination: SharedModels.Pagination;
        });
    }
    class ListAllLanguageVariantsOfContentTypeResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeResponse, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            responses: ListLanguageVariantsOfContentTypeResponse[];
        });
    }
    class ListAllLanguageVariantsByCollectionResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsByCollectionResponse, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            responses: ListLanguageVariantsByCollectionResponse[];
        });
    }
    class ListAllLanguageVariantsBySpaceResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsBySpaceResponse, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(data: {
            items: LanguageVariantModels.ContentItemLanguageVariant[];
            responses: ListLanguageVariantsBySpaceResponse[];
        });
    }
    class UpsertLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<LanguageVariantContracts.IUpsertLanguageVariantResponseContract, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IUpsertLanguageVariantResponseContract, data: LanguageVariantModels.ContentItemLanguageVariant);
    }
    class ViewLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<LanguageVariantContracts.IViewLanguageVariantResponseContract, LanguageVariantModels.ContentItemLanguageVariant> {
        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: LanguageVariantContracts.IViewLanguageVariantResponseContract, data: LanguageVariantModels.ContentItemLanguageVariant);
    }
}
